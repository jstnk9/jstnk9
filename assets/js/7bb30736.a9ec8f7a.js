"use strict";(self.webpackChunkjstnk=self.webpackChunkjstnk||[]).push([[1360],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=i.createContext({}),p=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return i.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,u=d["".concat(l,".").concat(m)]||d[m]||h[m]||r;return n?i.createElement(u,s(s({ref:t},c),{},{components:n})):i.createElement(u,s({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var p=2;p<r;p++)s[p]=n[p];return i.createElement.apply(null,s)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2038:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return p},assets:function(){return c},toc:function(){return h},default:function(){return m}});var i=n(7462),a=n(3366),r=(n(7294),n(3905)),s=["components"],o={slug:"DLL-Hijacking-with-DeviceCensus.exe-on-Windows-11",title:"DLL Hijacking with DeviceCensus.exe on Windows 11",authors:"joseliyo",tags:["threat hunting","detection","visibility","windows 11","research"]},l=void 0,p={permalink:"/jstnk9/research/DLL-Hijacking-with-DeviceCensus.exe-on-Windows-11",source:"@site/research/2022-03-24-DLL-Hijacking-with-DeviceCensus.exe-on-Windows-11/2022-03-24-DLL-Hijacking-with-DeviceCensus.exe-on-Windows-11.md",title:"DLL Hijacking with DeviceCensus.exe on Windows 11",description:"Summary",date:"2022-03-24T00:00:00.000Z",formattedDate:"March 24, 2022",tags:[{label:"threat hunting",permalink:"/jstnk9/research/tags/threat-hunting"},{label:"detection",permalink:"/jstnk9/research/tags/detection"},{label:"visibility",permalink:"/jstnk9/research/tags/visibility"},{label:"windows 11",permalink:"/jstnk9/research/tags/windows-11"},{label:"research",permalink:"/jstnk9/research/tags/research"}],readingTime:2.9,truncated:!0,authors:[{name:"Jose Luis S\xe1nchez Mart\xednez",title:"Security Researcher",url:"https://twitter.com/Joseliyo_Jstnk",imageURL:"https://jstnk9.github.io/jstnk9/img/profiles/1574890680450.jpeg",key:"joseliyo"}],prevItem:{title:"Executing SCR files using desk.cpl and InstallScreenSaver API Call",permalink:"/jstnk9/research/InstallScreenSaver-SCR-files"}},c={authorsImageUrls:[void 0]},h=[{value:"Summary",id:"summary",children:[],level:2},{value:"Testing the behavior",id:"testing-the-behavior",children:[],level:2},{value:"PoC",id:"poc",children:[{value:"VBS Script",id:"vbs-script",children:[],level:3},{value:"DLL",id:"dll",children:[],level:3}],level:2}],d={toc:h};function m(e){var t=e.components,n=(0,a.Z)(e,s);return(0,r.kt)("wrapper",(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"summary"},"Summary"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Tested on Windows 11 10.0.22000 N/A Build 22000.")),(0,r.kt)("p",null,"During January I was investigating Windows 11 and some of the binaries that were installed by default to identify behaviors that could be used for malicious purposes."),(0,r.kt)("p",null,"The binary ",(0,r.kt)("inlineCode",{parentName:"p"},"DeviceCensus.exe")," located in ",(0,r.kt)("inlineCode",{parentName:"p"},"C:\\Windows\\System32"),", when is copied to another different path and it is executed, it tries to load more or less 11 DLLs ",(0,r.kt)("strong",{parentName:"p"},"in the directory where it was executed"),". Let's say that if you try to execute this binary from ",(0,r.kt)("inlineCode",{parentName:"p"},"AppData")," path, then it tries to load the DLLs from ",(0,r.kt)("inlineCode",{parentName:"p"},"AppData"),". However, if the DLL doensn't exists in ",(0,r.kt)("inlineCode",{parentName:"p"},"AppData"),", then it tries to load from ",(0,r.kt)("inlineCode",{parentName:"p"},"System32"),". "),(0,r.kt)("p",null,"Then, if you copy this binary in ",(0,r.kt)("inlineCode",{parentName:"p"},"AppData")," and create a DLL with the same name that tries to load, the DLL is loaded."),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"I would like to say that I reported this to MSRC and they told me that ",(0,r.kt)("strong",{parentName:"p"},"it is not a vulnerability"),". They sent me the following information explaining why it is not a vulnerability :). "),(0,r.kt)("p",{parentName:"div"},"Thanks MSRC for explaining!"),(0,r.kt)("p",{parentName:"div"},(0,r.kt)("strong",{parentName:"p"},"Reference 1:")," ",(0,r.kt)("a",{parentName:"p",href:"https://devblogs.microsoft.com/oldnewthing/20150527-00/?p=45024"},"https://devblogs.microsoft.com/oldnewthing/20150527-00/?p=45024")),(0,r.kt)("p",{parentName:"div"},(0,r.kt)("strong",{parentName:"p"},"Reference 2:")," ",(0,r.kt)("a",{parentName:"p",href:"https://msrc-blog.microsoft.com/2018/04/04/triaging-a-dll-planting-vulnerability/"},"https://msrc-blog.microsoft.com/2018/04/04/triaging-a-dll-planting-vulnerability/")))),(0,r.kt)("h2",{id:"testing-the-behavior"},"Testing the behavior"),(0,r.kt)("p",null,"First, I moved the binary ",(0,r.kt)("inlineCode",{parentName:"p"},"DeviceCensus.exe")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"AppData")," path and executed it."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/analysis-devicecensus/device-1.PNG",alt:"device-1.png"})),(0,r.kt)("p",null,"As you can see, there are different DLLs that the binary is trying to load from the path where it was executed. However, some of them can't be loaded during the execution."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/analysis-devicecensus/device-3.PNG",alt:"device-3.png"})),(0,r.kt)("p",null,"Focusing in the DLL called ",(0,r.kt)("inlineCode",{parentName:"p"},"umpdc.dll"),", we can see how it was loaded because the first option of load doesn't work. It is known as ",(0,r.kt)("a",{parentName:"p",href:"https://attack.mitre.org/techniques/T1574/001/"},"DLL Hijacking"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/analysis-devicecensus/device-4.PNG",alt:"device-4.png"})),(0,r.kt)("p",null,"However, for this PoC, I've created a DLL called ",(0,r.kt)("inlineCode",{parentName:"p"},"umpdc.dll")," with a MessageBox. Instead of a MessageBox, it can establish a reverse shell or whatever action (drop another binary and execute it, load in memory malicious code, process injection, etc.)"),(0,r.kt)("p",null,"Also, for this PoC, I\u2019ve created a VBS to do the following chain attack:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Connect to GitHub and Download a DLL"),(0,r.kt)("li",{parentName:"ol"},"Drop the DLL in %appdata%"),(0,r.kt)("li",{parentName:"ol"},"Copy ",(0,r.kt)("inlineCode",{parentName:"li"},"DeviceCensus.exe")," from system32 to %appdata%"),(0,r.kt)("li",{parentName:"ol"},"Load ",(0,r.kt)("inlineCode",{parentName:"li"},"DeviceCensus.exe")," in order to load the malicious DLL from path where is executed.")),(0,r.kt)("p",null,"The initial access could be whatever, either ",(0,r.kt)("a",{parentName:"p",href:"https://attack.mitre.org/techniques/T1566/002/"},"spearphising with link")," or ",(0,r.kt)("a",{parentName:"p",href:"https://attack.mitre.org/techniques/T1566/001/"},"spearphishing with attachment"),". The typical scenario is a office file with macros, which after the execution, connects to remote servers to download a second-stage payload. In this case, I've executed directly ",(0,r.kt)("inlineCode",{parentName:"p"},"wscript.exe")," to load the VBS file."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/analysis-devicecensus/full_chain_dark.png#gh-dark-mode-only",alt:"dark"}),(0,r.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/analysis-devicecensus/full_chain_l.png#gh-light-mode-only",alt:"light"})),(0,r.kt)("p",null,"The above image show the ",(0,r.kt)("strong",{parentName:"p"},"Sysmon Events IDs")," (EVID) for each step of the PoC. This can help you to create detections rules for similar scenarios, not focusing only in the DLL and binary. The sysmon configuration used was the one of ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/SwiftOnSecurity/sysmon-config"},"SwiftOPneSecurity")," adding Image Load events."),(0,r.kt)("h2",{id:"poc"},"PoC"),(0,r.kt)("p",null,"When the VBS file is executed on the target machine, we can see the following events made by ",(0,r.kt)("inlineCode",{parentName:"p"},"wscript.exe"),". After the execution, the first thing to do is connects to GitHub and download the DLL into the local system."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/analysis-devicecensus/device-6.PNG",alt:"device-6.png"})),(0,r.kt)("p",null,"Then, the DLL is created in the ",(0,r.kt)("inlineCode",{parentName:"p"},"AppData")," path, because we configured it in the VBS script. Also, the file ",(0,r.kt)("inlineCode",{parentName:"p"},"DeviceCensus.exe")," is copied from ",(0,r.kt)("inlineCode",{parentName:"p"},"C:\\Windows\\System32")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"AppData"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/analysis-devicecensus/device-7.PNG",alt:"device-7.png"})),(0,r.kt)("p",null,"The last task that the VBS does, is run ",(0,r.kt)("inlineCode",{parentName:"p"},"DeviceCensus.exe"),", which after the execution it can load the ",(0,r.kt)("inlineCode",{parentName:"p"},"UMPDC.dll"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/analysis-devicecensus/device-8.PNG",alt:"device-8.png"})),(0,r.kt)("p",null,"The message will appear on the screen when the DLL is loaded."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/analysis-devicecensus/device-9.PNG",alt:"device-9.png"})),(0,r.kt)("p",null,"The full activity on Sysmon looks like this."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/analysis-devicecensus/sysmon1.png",alt:"sysmon-1.png"})),(0,r.kt)("h3",{id:"vbs-script"},"VBS Script"),(0,r.kt)("p",null,"Download from gist: ",(0,r.kt)("a",{parentName:"p",href:"https://gist.github.com/jstnk9/c0f8861cf1247741812f9f0210b591ee"},"https://gist.github.com/jstnk9/c0f8861cf1247741812f9f0210b591ee")),(0,r.kt)("h3",{id:"dll"},"DLL"),(0,r.kt)("p",null,"Download from git: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/jstnk9/Research/blob/main/UMPDC.dll"},"https://github.com/jstnk9/Research/blob/main/UMPDC.dll")),(0,r.kt)("p",null,"DLL code from gist: ",(0,r.kt)("a",{parentName:"p",href:"https://gist.github.com/jstnk9/034d6add18a2692e451b254472a823f9"},"https://gist.github.com/jstnk9/034d6add18a2692e451b254472a823f9")),(0,r.kt)("h2",null," Contact "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Twitter"),": ",(0,r.kt)("a",{parentName:"p",href:"https://twitter.com/Joseliyo_Jstnk"},"https://twitter.com/Joseliyo_Jstnk")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"LinkedIn"),": ",(0,r.kt)("a",{parentName:"p",href:"https://www.linkedin.com/in/joseluissm/"},"https://www.linkedin.com/in/joseluissm/")))}m.isMDXComponent=!0}}]);