"use strict";(self.webpackChunkjstnk=self.webpackChunkjstnk||[]).push([[1517],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,s=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=i,u=m["".concat(o,".").concat(d)]||m[d]||h[d]||s;return n?a.createElement(u,r(r({ref:t},c),{},{components:n})):a.createElement(u,r({ref:t},c))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var s=n.length,r=new Array(s);r[0]=m;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:i,r[1]=l;for(var p=2;p<s;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3087:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return o},metadata:function(){return p},assets:function(){return c},toc:function(){return h},default:function(){return d}});var a=n(7462),i=n(3366),s=(n(7294),n(3905)),r=["components"],l={slug:"AsyncRAT-Analysis",title:"Analyzing AsyncRAT distributed in Colombia by Blind Eagle",authors:"joseliyo",tags:["threat hunting","detection","analysis","research","asyncrat",".NET","BlindEagle","APT-C-36"]},o=void 0,p={permalink:"/jstnk9/research/AsyncRAT-Analysis",source:"@site/research/2022-06-01-AsyncRAT-analysis/2022-06-01-AsyncRAT-analysis.md",title:"Analyzing AsyncRAT distributed in Colombia by Blind Eagle",description:"Summary",date:"2022-06-01T00:00:00.000Z",formattedDate:"June 1, 2022",tags:[{label:"threat hunting",permalink:"/jstnk9/research/tags/threat-hunting"},{label:"detection",permalink:"/jstnk9/research/tags/detection"},{label:"analysis",permalink:"/jstnk9/research/tags/analysis"},{label:"research",permalink:"/jstnk9/research/tags/research"},{label:"asyncrat",permalink:"/jstnk9/research/tags/asyncrat"},{label:".NET",permalink:"/jstnk9/research/tags/net"},{label:"BlindEagle",permalink:"/jstnk9/research/tags/blind-eagle"},{label:"APT-C-36",permalink:"/jstnk9/research/tags/apt-c-36"}],readingTime:11.34,truncated:!0,authors:[{name:"Jose Luis S\xe1nchez Mart\xednez",title:"Security Researcher",url:"https://twitter.com/Joseliyo_Jstnk",imageURL:"https://jstnk9.github.io/jstnk9/img/profiles/1574890680450.jpeg",key:"joseliyo"}],prevItem:{title:"Dissecting GobRAT behaviors - Linux malware",permalink:"/jstnk9/research/GobRAT-Malware"},nextItem:{title:"Using Jlaive to create batch files from .NET assemblies for defense evasion",permalink:"/jstnk9/research/Jlaive-Antivirus-Evasion-Tool"}},c={authorsImageUrls:[void 0]},h=[{value:"Summary",id:"summary",children:[],level:2},{value:"Analysis",id:"analysis",children:[{value:"Static",id:"static",children:[],level:3},{value:"Dynamic",id:"dynamic",children:[{value:"high level processes events",id:"high-level-processes-events",children:[],level:4},{value:"privileged execution - Genealogy",id:"privileged-execution---genealogy",children:[],level:4},{value:"non-privileged execution - Genealogy",id:"non-privileged-execution---genealogy",children:[],level:4},{value:"Stub.exe - 2740",id:"stubexe---2740",children:[],level:4},{value:"cmd.exe - 7380",id:"cmdexe---7380",children:[],level:4},{value:"schtasks.exe - 4152",id:"schtasksexe---4152",children:[],level:4},{value:"cmd.exe - 8840",id:"cmdexe---8840",children:[],level:4},{value:"timeout.exe - 6272",id:"timeoutexe---6272",children:[],level:4},{value:"Runtime Broker.exe - 4080",id:"runtime-brokerexe---4080",children:[],level:4},{value:"aB.exe",id:"abexe",children:[],level:4},{value:"MessagePackLib.dll",id:"messagepacklibdll",children:[],level:4},{value:"Recovery.dll",id:"recoverydll",children:[],level:4}],level:3},{value:"High level graph",id:"high-level-graph",children:[],level:3},{value:"Diamond model",id:"diamond-model",children:[],level:3}],level:2},{value:"ATT&amp;CK",id:"attck",children:[],level:2},{value:"IOCs",id:"iocs",children:[],level:2},{value:"Sigma rules",id:"sigma-rules",children:[],level:2}],m={toc:h};function d(e){var t=e.components,n=(0,i.Z)(e,r);return(0,s.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"summary"},"Summary"),(0,s.kt)("p",null,"During 2019-2021 I was focused on analyzing campaigns orchestrated by the ",(0,s.kt)("inlineCode",{parentName:"p"},"APT-C-36")," group and RATs used by this same group and other cybercriminal groups such as ",(0,s.kt)("inlineCode",{parentName:"p"},"RemcosRAT"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"AsyncRAT"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"Imminent Monitor RAT"),", etc. In the last few months I have seen some modifications of TTPs in many of these families that have caught my attention and I wanted to analyze them to see what is new. "),(0,s.kt)("p",null,"Therefore, during this entry we will go through the analysis of a sample of ",(0,s.kt)("inlineCode",{parentName:"p"},"AsyncRAT")," distributed in Colombia during the last month."),(0,s.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"The objective of the analysis is to provide information on the execution of the binary, genealogy and other stuff, not to go into the details of the static part."))),(0,s.kt)("h2",{id:"analysis"},"Analysis"),(0,s.kt)("h3",{id:"static"},"Static"),(0,s.kt)("p",null,"The basic static information of the sample to be analyzed is shown in the table below."),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"Field"),(0,s.kt)("th",{parentName:"tr",align:null},"Value"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"File name"),(0,s.kt)("td",{parentName:"tr",align:null},"Stub.exe")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Type"),(0,s.kt)("td",{parentName:"tr",align:null},"PE32 executable for MS Windows (GUI) Intel 80386 32-bit Mono/.Net assembly")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"MD5"),(0,s.kt)("td",{parentName:"tr",align:null},"c0b9838ff7d2ddecbfe296eae947e5d6")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"SHA1"),(0,s.kt)("td",{parentName:"tr",align:null},"76af794b85e4a4ba75c5703df1207b7a6798bf2e")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"SHA256"),(0,s.kt)("td",{parentName:"tr",align:null},"79068b82bcf0786b6af1b7cc96de1bf4e1a66b0d95e7e72ed1b1054443f6c5e3")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"File size"),(0,s.kt)("td",{parentName:"tr",align:null},"45.00 KB (46080 bytes)")))),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-asyncrat-analysis01/01-exeinfo.jpg",alt:"static01"})),(0,s.kt)("p",null,"After verifying that the binary was C#, I decided to perform a small analysis of the code to check some of the actions that the malware should do once executed, before executing it on my systems."),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-asyncrat-analysis01/02-codebasic.png",alt:"basiccode"})),(0,s.kt)("p",null,"If we go to the ",(0,s.kt)("inlineCode",{parentName:"p"},"Main")," function, which is the one defined in the entry point, we see that it contains the structure shown in the following image."),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-asyncrat-analysis01/03-main.png",alt:"basiccode"})),(0,s.kt)("p",null,"The binary will check a series of conditions to verify if it is being executed among other things in a virtual environment or not, and depending on the results, it will continue its normal flow or kill the process."),(0,s.kt)("p",null,"The first check is to verify if a series of settings established in the code, among which are the key, pastebin URL, version, etc."),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-asyncrat-analysis01/04-initializesettings.png",alt:"basiccode"})),(0,s.kt)("p",null,"Secondly, it tries to create a mutex and stop similar processes of the same sample that may be running."),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-asyncrat-analysis01/05-mutex.png",alt:"mutexcheck"})),(0,s.kt)("p",null,"It then performs several checks to identify the context where it is running (mainly to see if it is a virtual machine or a sandbox). Different anti-analysis techniques are put in place."),(0,s.kt)("p",null,"The first of all is related to the ",(0,s.kt)("inlineCode",{parentName:"p"},"DetectManufacturer")," method which aims to see if the system is related to Vmware, VirtualBox, or virtualized in general."),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-asyncrat-analysis01/06-antianalysis1.png",alt:"antianalysis"})),(0,s.kt)("p",null,"The next thing is to check if a debugger exists in the context of AsyncRAT. To do this, it makes use of the ",(0,s.kt)("inlineCode",{parentName:"p"},"isDebuggerPresent")," API. "),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-asyncrat-analysis01/06-antianalysis2debugger.png",alt:"debugg"})),(0,s.kt)("p",null,"Next, the check is focused on seeing if the system where it was executed is the known ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/sandboxie-plus/Sandboxie"},"sandboxie"),", to check it, tries to identify if the DLL ",(0,s.kt)("inlineCode",{parentName:"p"},"SbieDll.dll")," is running."),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-asyncrat-analysis01/06-antianalysis3sandboxie.png",alt:"sandbxie"})),(0,s.kt)("p",null,"The next check it performs is on the system disk capacity. In this case, it checks if the disk is less than 61000000000L (56.8 GB). If it is, it returns false."),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-asyncrat-analysis01/06-antianalysis5installdisk.png",alt:"disk"})),(0,s.kt)("p",null,"The last thing it performs in this set of checks is to identify if the operating system is Windows XP with a simple method."),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-asyncrat-analysis01/06-antianalysis6isXP.png",alt:"xp"})),(0,s.kt)("p",null,"It also aims to generate persistence in the system. To do this, it checks if the context of the process was launched with privileges, if so, it will make use of ",(0,s.kt)("inlineCode",{parentName:"p"},"schtasks.exe")," to create a task. Otherwise, if the context is not found with administrator permissions, it will try to modify the registry key ",(0,s.kt)("inlineCode",{parentName:"p"},"Software\\Microsoft\\Windows\\CurrentVersion\\Run")," to execute a copy of itself create in the ",(0,s.kt)("inlineCode",{parentName:"p"},"%appdata")," path."),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-asyncrat-analysis01/07-scheduledpersistence.png",alt:"schedule"})),(0,s.kt)("p",null,"After this, the sample copies itself into the ",(0,s.kt)("inlineCode",{parentName:"p"},"%appdata%")," directory and will create a .bat file to first launch a ",(0,s.kt)("inlineCode",{parentName:"p"},"timeout"),", run the sample from ",(0,s.kt)("inlineCode",{parentName:"p"},"%appdata%")," and delete the .bat file."),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-asyncrat-analysis01/08-batcreation.png",alt:"batcreation"})),(0,s.kt)("p",null,"The last interesting activity is to establish communications with the C2 through the ",(0,s.kt)("inlineCode",{parentName:"p"},"ClientSocket.Reconnect();")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"ClientSocket.InitializeClient();")," methods."),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-asyncrat-analysis01/09-c2.png",alt:"c2"})),(0,s.kt)("p",null,"The sample can perform many other actions once it is deployed in the environment. For example, the ",(0,s.kt)("inlineCode",{parentName:"p"},"Client.Helper.IdSender")," class has a method called ",(0,s.kt)("inlineCode",{parentName:"p"},"sendInfo")," which is responsible for sending information from the operating system to the C2."),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-asyncrat-analysis01/10-sendinfo.png",alt:"sendinfo"})),(0,s.kt)("p",null,"Going into detail of each class could take a long time, and in this case, the goal is to analyze the behavior once executed, so I leave a small image of a part of the classes and methods that incorporates the sample and we will perform an analysis of the behavior."),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-asyncrat-analysis01/11-classes.png",alt:"classesandmethods"})),(0,s.kt)("h3",{id:"dynamic"},"Dynamic"),(0,s.kt)("h4",{id:"high-level-processes-events"},"high level processes events"),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-asyncrat-analysis01/_highlevelactivityevents.png",alt:"highlevelprocesses"})),(0,s.kt)("p",null,"Now it is time to detonate the malware in a controlled environment to verify the behavior of the malware. In this case, I did different executions with and without administrator permissions to see how the sample behaved. I did this because in the static part we have seen that the behavior could vary depending on whether it was executed in the administrator context."),(0,s.kt)("h4",{id:"privileged-execution---genealogy"},"privileged execution - Genealogy"),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-asyncrat-analysis01/12-genealogy.png",alt:"admingenealogy"})),(0,s.kt)("h4",{id:"non-privileged-execution---genealogy"},"non-privileged execution - Genealogy"),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-asyncrat-analysis01/12-genealogynonprivilege.png",alt:"admingenealogy"})),(0,s.kt)("p",null,"As can be seen, there are some differences when the sample was executed with privileges and when not. For example, in the first image, which corresponds to the execution with privileges, there are 3 additional processes which are the following."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"|_ cmd.exe (7380)\n    |_ Conhost.exe (8972)\n    |_ schtasks.exe (4152)\n")),(0,s.kt)("p",null,"This is because the execution of the process 7380 ",(0,s.kt)("inlineCode",{parentName:"p"},"cmd.exe"),", is the behavior related to setting the scheduled task. However, if the sample is run without administrator permissions, the scheduled task cannot be generated."),(0,s.kt)("p",null,"We are going to go into detail about the processes to see the main actions they performed and that could be of interest in order to generate some kind of detection or identification of patterns. To do this, we will focus on the execution with administrator permissions and in case there is something different in the other execution, it will be named."),(0,s.kt)("h4",{id:"stubexe---2740"},"Stub.exe - 2740"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"C:\\Users\\lab\\Desktop\\Stub.exe\n")),(0,s.kt)("p",null,"This is the AsyncRAT sample. The execution was performed with administrator privileges."),(0,s.kt)("p",null,"This process, as we saw before, would be in charge of creating certain files in the system. First of all, what it does is to create in the ",(0,s.kt)("inlineCode",{parentName:"p"},"%appdata%")," directory a copy of itself."),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-asyncrat-analysis01/14-runtimebroker.png",alt:"writeruntim"})),(0,s.kt)("p",null,"Then, it creates the batch file also in ",(0,s.kt)("inlineCode",{parentName:"p"},"%appdata%"),", which will be executed later to perform different actions in the operating system."),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-asyncrat-analysis01/15-batfile.png",alt:"writefilesbat"})),(0,s.kt)("p",null,"As for registry keys, there is no significant activity."),(0,s.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"Different behavior in the sample run without privileges."))),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"However, in the case of unprivileged execution, there would be a modification in the registry keys for persistence, using the key ",(0,s.kt)("inlineCode",{parentName:"strong"},"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\Runtime Broker")),"."),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-asyncrat-analysis01/16-registrykeyrun.png",alt:"registrykey"})),(0,s.kt)("h4",{id:"cmdexe---7380"},"cmd.exe - 7380"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'"C:\\Windows\\System32\\cmd.exe" /c schtasks /create /f /sc onlogon /rl highest /tn "Runtime Broker" /tr \'"C:\\Users\\lab\\AppData\\Roaming\\Runtime Broker.exe"\' & exit\n')),(0,s.kt)("p",null,"This process is basically in charge of launching the ",(0,s.kt)("inlineCode",{parentName:"p"},"schtasks.exe")," binary. It is important to mention, as we are seeing and will see throughout the analysis, that since this is a 32bit sample, the executions will be related to the ",(0,s.kt)("inlineCode",{parentName:"p"},"C:\\Windows\\SysWOW64\\")," directory."),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-asyncrat-analysis01/17-scheduledcreatedprocess.png",alt:"registrykey"})),(0,s.kt)("p",null,"This process will not exist when running AsyncRAT without administrator permissions."),(0,s.kt)("h4",{id:"schtasksexe---4152"},"schtasks.exe - 4152"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'schtasks  /create /f /sc onlogon /rl highest /tn "Runtime Broker" /tr \'"C:\\Users\\lab\\AppData\\Roaming\\Runtime Broker.exe"\' \n')),(0,s.kt)("p",null,"The task is generated in the system to be executed at each login of any user with administrator permissions."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'/f -> A value that forcefully creates the task and suppresses warnings if the specified task already exists.\n/sc onlogon -> In each login\n/rl highest -> Max privileges\n/tn "Runtime Broker" -> Task name \n/tr "C:\\Users\\lab\\AppData\\Roaming\\Runtime Broker.exe" -> Task run to execute\n')),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-asyncrat-analysis01/18-taskscheduled.png",alt:"task"})),(0,s.kt)("h4",{id:"cmdexe---8840"},"cmd.exe - 8840"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'C:\\Windows\\system32\\cmd.exe /c ""C:\\Users\\lab\\AppData\\Local\\Temp\\tmp3959.tmp.bat""\n')),(0,s.kt)("p",null,"This process is in charge of executing the bat file that was created during the execution of the ",(0,s.kt)("inlineCode",{parentName:"p"},"Stub.exe")," binary. It is important to mention that ",(0,s.kt)("strong",{parentName:"p"},"the name of the batch file varies according to the execution"),", however, ",(0,s.kt)("strong",{parentName:"p"},"the pattern is always the same"),". The following RegEx would work to detect this."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},".*tmp[a-zA-Z1-9]{4}.tmp.bat\n")),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-asyncrat-analysis01/19-batnames.png",alt:"task"})),(0,s.kt)("h4",{id:"timeoutexe---6272"},"timeout.exe - 6272"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"timeout  3 \n")),(0,s.kt)("p",null,"The malware uses a timeout of 3 seconds before it starts performing the rest of the actions."),(0,s.kt)("h4",{id:"runtime-brokerexe---4080"},"Runtime Broker.exe - 4080"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'"C:\\Users\\lab\\AppData\\Roaming\\Runtime Broker.exe" \n')),(0,s.kt)("p",null,"As can be seen from the name of the process, the malware tries to impersonate the legitimate Microsoft Windows binary ",(0,s.kt)("inlineCode",{parentName:"p"},"runtimebroker.exe"),". However, it can be noticed in this case that there is a space between the two words."),(0,s.kt)("p",null,"Here the communication with the C2 server is established. The ports used in this case are 8808, 7707 and 6606. The destination IP address is 217.195.197","[.]","70."),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-asyncrat-analysis01/20-connections.png",alt:"connections"})),(0,s.kt)("p",null,"On the other hand, another indicator that could help us to identify the sample and the family during the analysis is the Mutex used, which in this case is ",(0,s.kt)("inlineCode",{parentName:"p"},"AsyncMutex_6SI8OkPnk"),"."),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-asyncrat-analysis01/22-MutantAsync.png",alt:"mutex"})),(0,s.kt)("p",null,"During the execution of ",(0,s.kt)("inlineCode",{parentName:"p"},"Runtime Broker.exe"),", I proceeded to extract the .NET assembly from memory to verify if it was the same ",(0,s.kt)("inlineCode",{parentName:"p"},"Stub.exe")," binary analyzed later or if it presented some difference when is launched. During this extraction, the following assemblies were obtained from memory."),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"File name"),(0,s.kt)("th",{parentName:"tr",align:null},"SHA1"),(0,s.kt)("th",{parentName:"tr",align:null},"Comments"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"aB.exe"),(0,s.kt)("td",{parentName:"tr",align:null},"76AF794B85E4A4BA75C5703DF1207B7A6798BF2E"),(0,s.kt)("td",{parentName:"tr",align:null},"Same sample as ",(0,s.kt)("inlineCode",{parentName:"td"},"Stub.exe"))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"MessagePackLib.dll"),(0,s.kt)("td",{parentName:"tr",align:null},"16CC8C3A461A6CE5A7ED1FF569EA61B8D9BA143E"),(0,s.kt)("td",{parentName:"tr",align:null},"At the time of analysis, 41/68 engines in VT detect it as malicious. Different family names.")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Recovery.dll"),(0,s.kt)("td",{parentName:"tr",align:null},"93E9469789A4ECD28E30006D1CE10DBFFBD36D7C"),(0,s.kt)("td",{parentName:"tr",align:null},"At the time of analysis, 44/68 engines in VT detect it as malicious. Code protected by ",(0,s.kt)("a",{parentName:"td",href:"https://www.eziriz.com/"},"Reactor"),".")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"System.Data.SQLite.dll"),(0,s.kt)("td",{parentName:"tr",align:null},"B9D5AF76D8DF1C4EE4CCBA33B2AFA8300952D923"),(0,s.kt)("td",{parentName:"tr",align:null},"Mixed-mode assembly for System.Data.SQLite. More information ",(0,s.kt)("a",{parentName:"td",href:"https://system.data.sqlite.org/index.html/doc/trunk/www/downloads.wiki"},"here"),".")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Newtonsoft.Json.dll"),(0,s.kt)("td",{parentName:"tr",align:null},"E68B369BC131A32D5233EE395F47B337C2469042"),(0,s.kt)("td",{parentName:"tr",align:null},"Json.NET is a popular high-performance JSON framework for .NET")))),(0,s.kt)("h4",{id:"abexe"},"aB.exe"),(0,s.kt)("p",null,"The assembly ",(0,s.kt)("inlineCode",{parentName:"p"},"aB.exe")," is the same ",(0,s.kt)("inlineCode",{parentName:"p"},"Stub.exe")," file, which in turn is also ",(0,s.kt)("inlineCode",{parentName:"p"},"Runtime Broker.exe"),". "),(0,s.kt)("h4",{id:"messagepacklibdll"},"MessagePackLib.dll"),(0,s.kt)("p",null,"This DLL does not contain any packers or code protectors. 41 out of 68 ",(0,s.kt)("a",{parentName:"p",href:"https://www.virustotal.com/gui/file/cd89c8c9bb614fac779491b98ed425f90b01412381e02392fb27b36db3568b0f"},"VT")," engines detect this DLL as malicious."),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-asyncrat-analysis01/24-message.png",alt:"nopacker"})),(0,s.kt)("p",null,"Taking a look at the assembly, you can see that the class structure does not seem to be very complex, and with a little patience you could identify its functionality (if you are interested in the sample, ask me privately)."),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-asyncrat-analysis01/25-messagepackassembly.png",alt:"assemblymessage"})),(0,s.kt)("h4",{id:"recoverydll"},"Recovery.dll"),(0,s.kt)("p",null,"In this case, it has been possible to verify the existence of Reactor, ",(0,s.kt)("a",{parentName:"p",href:"https://www.eziriz.com/"},"called by itself as a .NET code protection")," as can be seen on its website."),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-asyncrat-analysis01/23-dieReactor.png",alt:"recoverypacker"})),(0,s.kt)("p",null,"As for the assembly, it can be verified that there is a protection of the code, since many strings and classes are randomized at the moment of observing their possible logic."),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-asyncrat-analysis01/26-recoveryassembly.png",alt:"recoverypacker"})),(0,s.kt)("p",null,"In a process of trying to remove the code protection, it is possible to see in a more readable way part of the code, identifying messages of actions that the assembly could try, in this case as seen in the image, related to the obtaining of Firefox cookies."),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-asyncrat-analysis01/27-codeunprotected.png",alt:"unprotectedcode"})),(0,s.kt)("h3",{id:"high-level-graph"},"High level graph"),(0,s.kt)("p",null,"In order to have a graphical view of the most important events that take place during the execution of AsyncRAT, a behavior graph has been elaborated where the events generated in the system during its execution can be seen."),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-asyncrat-analysis01/_graph.jpg",alt:"graph"})),(0,s.kt)("h3",{id:"diamond-model"},"Diamond model"),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-asyncrat-analysis01/_diamond.jpg",alt:"graph"})),(0,s.kt)("h2",{id:"attck"},"ATT&CK"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"Technique"),(0,s.kt)("th",{parentName:"tr",align:null},"Kill chain phase"),(0,s.kt)("th",{parentName:"tr",align:null},"Diamond vertex"),(0,s.kt)("th",{parentName:"tr",align:null},"Comments"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"T1566.001 - Phishing: Spearphishing Attachment"),(0,s.kt)("td",{parentName:"tr",align:null},"Delivery"),(0,s.kt)("td",{parentName:"tr",align:null},"Capability"),(0,s.kt)("td",{parentName:"tr",align:null},"Email with ZIP file attached")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"T1547.001 - Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder"),(0,s.kt)("td",{parentName:"tr",align:null},"Installation"),(0,s.kt)("td",{parentName:"tr",align:null},"Capability"),(0,s.kt)("td",{parentName:"tr",align:null},"Set registry key if non-privileged user executes the payload")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"T1053.005 - Scheduled Task/Job: Scheduled Task"),(0,s.kt)("td",{parentName:"tr",align:null},"Installation"),(0,s.kt)("td",{parentName:"tr",align:null},"Capability"),(0,s.kt)("td",{parentName:"tr",align:null},"Creates new scheduled task if privileged user executes the payload")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"T1036.005 - Masquerading: Match Legitimate Name or Location"),(0,s.kt)("td",{parentName:"tr",align:null},"Execution"),(0,s.kt)("td",{parentName:"tr",align:null},"Capability"),(0,s.kt)("td",{parentName:"tr",align:null},"Writes itself as a file named Runtime Broker.exe saved in %APPDATA%")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"T1571 - Non-Standard Port"),(0,s.kt)("td",{parentName:"tr",align:null},"C2"),(0,s.kt)("td",{parentName:"tr",align:null},"Infrastructure"),(0,s.kt)("td",{parentName:"tr",align:null},"Use the ports 8808, 7707 and 6606 for communication")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"T1059.003 - Command and Scripting Interpreter: Windows Command Shell"),(0,s.kt)("td",{parentName:"tr",align:null},"Execution"),(0,s.kt)("td",{parentName:"tr",align:null},"Capability"),(0,s.kt)("td",{parentName:"tr",align:null},"Executes batch file created previously")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"T1027 - Obfuscated Files or Information"),(0,s.kt)("td",{parentName:"tr",align:null},"Exploitation"),(0,s.kt)("td",{parentName:"tr",align:null},"Capability"),(0,s.kt)("td",{parentName:"tr",align:null},".NET Reactor is used for code protection")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"T1095 - Non-Application Layer Protocol"),(0,s.kt)("td",{parentName:"tr",align:null},"C2"),(0,s.kt)("td",{parentName:"tr",align:null},"Infrastructure"),(0,s.kt)("td",{parentName:"tr",align:null},"TCP is used for C2 communications")))),(0,s.kt)("h2",{id:"iocs"},"IOCs"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"217.195.197","[.]","70 through 6606, 7707, 8808 ports"),(0,s.kt)("li",{parentName:"ul"},"76AF794B85E4A4BA75C5703DF1207B7A6798BF2E"),(0,s.kt)("li",{parentName:"ul"},"16CC8C3A461A6CE5A7ED1FF569EA61B8D9BA143E"),(0,s.kt)("li",{parentName:"ul"},"93E9469789A4ECD28E30006D1CE10DBFFBD36D7C"),(0,s.kt)("li",{parentName:"ul"},"Mutex ",(0,s.kt)("inlineCode",{parentName:"li"},"AsyncMutex_6SI8OkPnk"))),(0,s.kt)("h2",{id:"sigma-rules"},"Sigma rules"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},(0,s.kt)("em",{parentName:"strong"},"The sigma rules created are specifics for this payload."))," There will be different payloads used by AsyncRAT with the same name or different. Is important to mention that the original filename embbeded in this case is ",(0,s.kt)("inlineCode",{parentName:"p"},"Stub.exe"),". This is interesting because if the adversaries create new payloads, maybe the original filename will still being the same."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yml"},"title: Detect AsyncRAT persistence with schtasks based on specific payload\nid: 4410f0ad-3a1c-4e21-9e3a-fa55336aa123\ndescription: Detect the execution of the AsyncRAT payload to launch schtask for persistence.\nstatus: experimental\ndate: 2022/06/01\nmodified: 2022/06/01\nauthor: Jose Luis Sanchez Martinez (@Joseliyo_Jstnk)\nreferences:\n    - https://jstnk9.github.io/jstnk9/research/AsyncRAT-Analysis\n    - https://www.virustotal.com/gui/file/79068b82bcf0786b6af1b7cc96de1bf4e1a66b0d95e7e72ed1b1054443f6c5e3\nlogsource:\n  product: windows\n  category: process_creation\ndetection:\n  parent_selection:\n    ParentImage|endswith: 'Stub.exe'\n  selection1:\n    Image|endswith: '\\cmd.exe'\n    CommandLine|contains|all:\n      - 'schtasks '\n      - '\\AppData\\Roaming\\'\n      - '.exe'\n  condition: parent_selection and selection1\nfalsepositives:\n    - Unknown\nlevel: medium\ntags:\n    - attack.persistence\n    - attack.T1053.005\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yml"},"title: Detect AsyncRAT execution based on specific payload\nid: ac891380-958b-4c08-a77d-8e149d63d741\ndescription: Detect the execution of the AsyncRAT payload to establish registry key for persistence.\nstatus: experimental\ndate: 2022/06/01\nmodified: 2022/06/01\nauthor: Jose Luis Sanchez Martinez (@Joseliyo_Jstnk)\nreferences:\n    - https://jstnk9.github.io/jstnk9/research/AsyncRAT-Analysis\n    - https://www.virustotal.com/gui/file/79068b82bcf0786b6af1b7cc96de1bf4e1a66b0d95e7e72ed1b1054443f6c5e3\nlogsource:\n  product: windows\n  category: registry_set\ndetection:\n  selection:\n    EventType: SetValue\n    Image|endswith: 'Stub.exe'\n    TargetObject|endswith: '\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\'\n    Details|contains: '.exe'\n  condition: selection\nfalsepositives:\n    - Unknown\nlevel: medium\ntags:\n    - attack.persistence\n    - attack.t1547.001\n")),(0,s.kt)("p",null,"In the original ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/SigmaHQ/sigma/tree/master/rules/windows"},"Sigma")," repository, there are a large number of generic rules that can help in the detection of this malware."),(0,s.kt)("h2",null," Contact "),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Twitter"),": ",(0,s.kt)("a",{parentName:"p",href:"https://twitter.com/Joseliyo_Jstnk"},"https://twitter.com/Joseliyo_Jstnk")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"LinkedIn"),": ",(0,s.kt)("a",{parentName:"p",href:"https://www.linkedin.com/in/joseluissm/"},"https://www.linkedin.com/in/joseluissm/")))}d.isMDXComponent=!0}}]);